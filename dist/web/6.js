(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{407:function(e,t,n){},408:function(e,t,n){},409:function(e,t){e.exports='<h1 id="import-multipleautocompletetextinput-from-ssenkit-autocomplete-text-input-"><code>import { MultipleAutoCompleteTextInput } from &#39;ssenkit.autocomplete-text-input&#39;</code></h1>\n<p><a href="http://api.jqueryui.com/autocomplete/">http://api.jqueryui.com/autocomplete/</a>의 React Wrapping.</p>\n<p>jQuery UI에 의해서 <code>componentDidMount()</code> 시점에 구성되므로 Props는 초기화에만 사용되고, 이후 변경에 의한 적용이 이루어지지 않는다.</p>\n<p>하단에 펼쳐지는 Menu같은 경우 Document 최상위에 만들어지게 되므로, <code>menuClassName</code>은 CSS 계층을 적용할 수 없다.</p>\n<p>Props</p>\n<ul>\n<li><code>className?: string</code> Input에 적용되는 CSS Class</li>\n<li><code>menuClassName?: string</code> Menu에 적용되는 CSS Class</li>\n<li><code>value?: string</code></li>\n<li><code>onChange: (value: string) =&gt; void</code></li>\n<li><code>minLength?: number = 2</code> 자동완성이 시작될 최소 문자수. Service 호출을 억제하는데 사용될 수 있다.</li>\n<li><code>source: (request, response) =&gt; void</code> jQuery UI Autocomplete의 source 항목을 참조.</li>\n<li><code>children?: JSX.Element = &lt;input/&gt;</code> 필요한 경우 <code>&lt;input/&gt;</code> tag를 Children Element로 넘겨서 Custom 할 수 있다.</li>\n</ul>\n'},410:function(e,t){e.exports="import { MultipleAutoCompleteTextInput } from 'ssenkit.autocomplete-text-input';\nimport * as React from 'react';\nimport './MultipleAutoCompleteTextInput.sample.scss';\n\nconst availableTags: string[] = [\n  'ActionScript',\n  'AppleScript',\n  'Asp',\n  'BASIC',\n  'C',\n  'C++',\n  'Clojure',\n  'COBOL',\n  'ColdFusion',\n  'Erlang',\n  'Fortran',\n  'Groovy',\n  'Haskell',\n  'Java',\n  'JavaScript',\n  'Lisp',\n  'Perl',\n  'PHP',\n  'Python',\n  'Ruby',\n  'Scala',\n  'Scheme',\n];\n\nfunction split(val: string): string[] {\n  return val.split(/,\\s*/);\n}\n\nfunction extractLast(term: string): string {\n  return split(term).pop() || '';\n}\n\nfunction source(request: {term: string}, response: (data: object) => void) {\n  response($.ui.autocomplete.filter(availableTags, extractLast(request.term)));\n}\n\ninterface State {\n  text: string;\n}\n\nexport default class extends React.PureComponent<{}, State> {\n  state: State = {\n    text: '',\n  };\n  \n  render() {\n    return (\n      <div>\n        <MultipleAutoCompleteTextInput menuClassName=\"MultipleAutoCompleteTextInputSample-menu\"\n                                       className=\"MultipleAutoCompleteTextInputSample-input\"\n                                       value={this.state.text}\n                                       minLength={0}\n                                       source={source}\n                                       onChange={this.onChange}\n                                       onSubmit={this.onChange}/>\n        <p>{this.state.text}</p>\n      </div>\n    );\n  }\n  \n  onChange = (text: string) => {\n    this.setState({text});\n  };\n}"},411:function(e,t){e.exports='<h1 id="import-singleautocompletetextinput-from-ssenkit-autocomplete-text-input-"><code>import { SingleAutoCompleteTextInput } from &#39;ssenkit.autocomplete-text-input&#39;</code></h1>\n<p><a href="http://api.jqueryui.com/autocomplete/">http://api.jqueryui.com/autocomplete/</a>의 React Wrapping.</p>\n<p>jQuery UI에 의해서 <code>componentDidMount()</code> 시점에 구성되므로 Props는 초기화에만 사용되고, 이후 변경에 의한 적용이 이루어지지 않는다.</p>\n<p>하단에 펼쳐지는 Menu같은 경우 Document 최상위에 만들어지게 되므로, <code>menuClassName</code>은 CSS 계층을 적용할 수 없다.</p>\n<p>Props</p>\n<ul>\n<li><code>className?: string</code> Input에 적용되는 CSS Class</li>\n<li><code>menuClassName?: string</code> Menu에 적용되는 CSS Class</li>\n<li><code>value?: string</code></li>\n<li><code>onChange: (value: string) =&gt; void</code></li>\n<li><code>minLength?: number = 2</code> 자동완성이 시작될 최소 문자수. Service 호출을 억제하는데 사용될 수 있다.</li>\n<li><code>source: (request, response) =&gt; void</code> jQuery UI Autocomplete의 source 항목을 참조.</li>\n<li><code>children?: JSX.Element = &lt;input/&gt;</code> 필요한 경우 <code>&lt;input/&gt;</code> tag를 Children Element로 넘겨서 Custom 할 수 있다.</li>\n</ul>\n'},412:function(e,t){e.exports="import { SingleAutoCompleteTextInput } from 'ssenkit.autocomplete-text-input';\nimport * as React from 'react';\nimport './SingleAutoCompleteTextInput.sample.scss';\n\nconst availableTags: string[] = [\n  'ActionScript',\n  'AppleScript',\n  'Asp',\n  'BASIC',\n  'C',\n  'C++',\n  'Clojure',\n  'COBOL',\n  'ColdFusion',\n  'Erlang',\n  'Fortran',\n  'Groovy',\n  'Haskell',\n  'Java',\n  'JavaScript',\n  'Lisp',\n  'Perl',\n  'PHP',\n  'Python',\n  'Ruby',\n  'Scala',\n  'Scheme',\n];\n\nfunction split(val: string): string[] {\n  return val.split(/,\\s*/);\n}\n\nfunction extractLast(term: string): string {\n  return split(term).pop() || '';\n}\n\nfunction source(request: {term: string}, response: (data: object) => void) {\n  response($.ui.autocomplete.filter(availableTags, extractLast(request.term)));\n}\n\ninterface State {\n  text: string;\n}\n\nexport default class extends React.PureComponent<{}, State> {\n  state: State = {\n    text: '',\n  };\n  \n  render() {\n    return (\n      <div>\n        <SingleAutoCompleteTextInput menuClassName=\"SingleAutoCompleteTextInputSample-menu\"\n                                     className=\"SingleAutoCompleteTextInputSample-input\"\n                                     value={this.state.text}\n                                     minLength={0}\n                                     source={source}\n                                     onChange={this.onChange}\n                                     onSubmit={this.onChange}/>\n        <p>{this.state.text}</p>\n      </div>\n    );\n  }\n  \n  onChange = (text: string) => {\n    console.log('SingleAutoCompleteTextInput.sample.tsx..onChange()', text);\n    this.setState({text});\n  };\n}"},475:function(e,t,n){"use strict";n.r(t);var o=n(0),i=n(34),a=n(3);var u=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.inputRef=o.createRef(),t.lastDisaptchedText="",t.onInputChange=function(e){t.dispatchChange(e.currentTarget.value)},t.onInputSubmit=function(e){13===e.keyCode&&t.props.onSubmit(e.currentTarget.value)},t.onBlur=function(e){e.currentTarget&&"string"==typeof e.currentTarget.value&&t.dispatchChange(e.currentTarget.value)},t.dispatchChange=function(e){t.lastDisaptchedText!==e&&(t.props.onChange(e),t.lastDisaptchedText=e)},t}return a.b(t,e),t.prototype.render=function(){return o.cloneElement(this.props.children,{ref:this.inputRef,defaultValue:this.props.value,onChange:this.onInputChange,onKeyDown:this.onInputSubmit})},t.prototype.componentDidMount=function(){var e=this;if(this.inputRef.current){var t=this,n={minLength:this.props.minLength,source:this.props.source,focus:function(){return!1},select:function(e,n){var o=this.value.split(/,\s*/);return o.pop(),o.push(n.item.value),o.push(""),this.value=o.join(", "),t.dispatchChange(this.value),!1},change:this.onBlur},o="string"==typeof this.props.className,i="string"==typeof this.props.menuClassName;if(o||i){var a={};o&&(a["ui-autocomplete-input"]=this.props.className),i&&(a["ui-autocomplete"]=this.props.menuClassName),n.classes=a}$(this.inputRef.current).on("keydown",function(t){t.keyCode===$.ui.keyCode.TAB&&$(e).autocomplete("instance").menu.active&&t.preventDefault()}).autocomplete(n)}},t.prototype.componentDidUpdate=function(){this.inputRef.current&&this.inputRef.current.value!==this.props.value&&(this.inputRef.current.value=this.props.value||"")},t.defaultProps={minLength:2,children:o.createElement("input",{type:"text"})},t}(o.PureComponent),r=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.inputRef=o.createRef(),t.lastDisaptchedText="",t.onInputChange=function(e){t.dispatchChange(e.currentTarget.value)},t.onInputSubmit=function(e){13===e.keyCode&&t.props.onSubmit(e.currentTarget.value)},t.onBlur=function(e){e.currentTarget&&"string"==typeof e.currentTarget.value&&t.dispatchChange(e.currentTarget.value)},t.dispatchChange=function(e){t.lastDisaptchedText!==e&&(t.props.onChange(e),t.lastDisaptchedText=e)},t}return a.b(t,e),t.prototype.render=function(){return o.cloneElement(this.props.children,{ref:this.inputRef,defaultValue:this.props.value,onChange:this.onInputChange,onKeyDown:this.onInputSubmit})},t.prototype.componentDidMount=function(){var e=this;if(this.inputRef.current){var t=this,n={minLength:this.props.minLength,source:this.props.source,focus:function(){return!1},select:function(e,n){return t.dispatchChange(n.item.value),!1},change:this.onBlur},o="string"==typeof this.props.className,i="string"==typeof this.props.menuClassName;if(o||i){var a={};o&&(a["ui-autocomplete-input"]=this.props.className),i&&(a["ui-autocomplete"]=this.props.menuClassName),n.classes=a}$(this.inputRef.current).on("keydown",function(t){t.keyCode===$.ui.keyCode.TAB&&$(e).autocomplete("instance").menu.active&&t.preventDefault()}).autocomplete(n)}},t.prototype.componentDidUpdate=function(){this.inputRef.current&&this.inputRef.current.value!==this.props.value&&(this.inputRef.current.value=this.props.value||"")},t.defaultProps={minLength:2,children:o.createElement("input",{type:"text"})},t}(o.PureComponent),s=(n(407),["ActionScript","AppleScript","Asp","BASIC","C","C++","Clojure","COBOL","ColdFusion","Erlang","Fortran","Groovy","Haskell","Java","JavaScript","Lisp","Perl","PHP","Python","Ruby","Scala","Scheme"]);function p(e,t){var n,o;t($.ui.autocomplete.filter(s,(n=e.term,(o=n,o.split(/,\s*/)).pop()||"")))}var l=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={text:""},t.onChange=function(e){t.setState({text:e})},t}return a.b(t,e),t.prototype.render=function(){return o.createElement("div",null,o.createElement(u,{menuClassName:"MultipleAutoCompleteTextInputSample-menu",className:"MultipleAutoCompleteTextInputSample-input",value:this.state.text,minLength:0,source:p,onChange:this.onChange,onSubmit:this.onChange}),o.createElement("p",null,this.state.text))},t}(o.PureComponent),c=(n(408),["ActionScript","AppleScript","Asp","BASIC","C","C++","Clojure","COBOL","ColdFusion","Erlang","Fortran","Groovy","Haskell","Java","JavaScript","Lisp","Perl","PHP","Python","Ruby","Scala","Scheme"]);function m(e,t){var n,o;t($.ui.autocomplete.filter(c,(n=e.term,(o=n,o.split(/,\s*/)).pop()||"")))}var h=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.state={text:""},t.onChange=function(e){t.setState({text:e})},t}return a.b(t,e),t.prototype.render=function(){return o.createElement("div",null,o.createElement(r,{menuClassName:"SingleAutoCompleteTextInputSample-menu",className:"SingleAutoCompleteTextInputSample-input",value:this.state.text,minLength:0,source:m,onChange:this.onChange,onSubmit:this.onChange}),o.createElement("p",null,this.state.text))},t}(o.PureComponent);t.default=function(){return o.createElement("div",{className:"app-body"},o.createElement("div",{className:"page-header"},o.createElement("div",{className:"row"},o.createElement("h1",null,o.createElement("code",null,"import ","{ SingleAutoCompleteTextInput, MultipleAutoCompleteTextInput }"," from 'ssenkit.autocomplete-text-input'")))),o.createElement("div",{className:"page-body ph-30 mv-30"},o.createElement("div",{className:"box"},o.createElement("div",{className:"box-body"},o.createElement(i.a,{html:n(409)}))),o.createElement("div",{className:"box"},o.createElement("div",{className:"box-body"},o.createElement(l,null),o.createElement(i.d,{source:n(410)}))),o.createElement("div",{className:"box"},o.createElement("div",{className:"box-body"},o.createElement(i.a,{html:n(411)}))),o.createElement("div",{className:"box"},o.createElement("div",{className:"box-body"},o.createElement(h,null),o.createElement(i.d,{source:n(412)})))))}}}]);