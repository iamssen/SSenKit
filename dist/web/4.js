(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{462:function(e,n,t){"use strict";var r=t(449),a=(t(450),t(451),t(452),t(453),t(454),t(455),t(456),t(457),t(458),t(459),t(460),t(1)),s=t.n(a);function u(e){var n=e.value,t=e.children,a=e.language,u=void 0===a?"none":a;if(!t&&!n)return null;["javascript jsx"].indexOf(u)&&(u="jsx"),["typescript jsx"].indexOf(u)&&(u="tsx"),["sh"].indexOf(u)&&(u="bash"),r.languages[u]||(u="none");var o=r.languages[u]?r.languages[u]:r.languages.js,i=Object(r.highlight)(t||n,o),c="language-"+u;return s.a.createElement("pre",{className:c},s.a.createElement("code",{className:c,dangerouslySetInnerHTML:{__html:i}}))}var o=t(461),i=t.n(o);function c(e){var n=e.text,t=e.children;return s.a.createElement(i.a,{source:n||t,renderers:{code:u}})}t.d(n,"a",function(){return u}),t.d(n,"b",function(){return c})},468:function(e,n){e.exports="# Installation\n\n```\nnpm install use-restricted-input\n```\n\n# Usage\n\n```typescript jsx\nimport React, { ChangeEvent } from 'react';\nimport useRestrictedInput from 'use-restricted-input';\n\nexport function Component() {\n  const {onKeyPress} = useRestrictedInput('abcd0-9');\n  const [text, setText] = useState<string>('');\n  \n  const onChange: (event: ChangeEvent<HTMLInputElement>) => void = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setText(event.target.value);\n  }, [setText]);\n  \n  return (\n    <div>\n      <input type=\"text\"\n             value={text}\n             onChange={onChange}\n             onKeyPress={onKeyPress}/>\n      <p>\n        text is \"{text}\"\n      </p>\n    </div>\n  );\n}\n```\n\n# API\n\n```\nuseRestrictedInput(availableCharacters: string | ((character: string) => boolean)): { onKeyPress: (event: KeyboardEvent<InputElement>) => void }\n```\n\n- param\n  - `availableCharacters: string | ((character: string) => boolean)`\n    - `a-z0-9` or `abcde0-4#$`\n    - `(character: string) => boolean`\n- return\n  - `onKeyPress: (event: KeyboardEvent<InputElement>) => void`"},469:function(e,n){e.exports="import React, { ChangeEvent, useCallback, useState } from 'react';\nimport useRestrictedInput from 'use-restricted-input';\n\nexport function Basic() {\n  const {onKeyPress} = useRestrictedInput('abcd0-9');\n  const [text, setText] = useState<string>('');\n  \n  const onChange: (event: ChangeEvent<HTMLInputElement>) => void = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setText(event.target.value);\n  }, [setText]);\n  \n  return (\n    <div>\n      <input type=\"text\"\n             value={text}\n             onChange={onChange}\n             onKeyPress={onKeyPress}/>\n      <p>\n        text is \"{text}\"\n      </p>\n    </div>\n  );\n}"},470:function(e,n){e.exports="import React, { ChangeEvent, useCallback, useState } from 'react';\nimport useRestrictedInput from 'use-restricted-input';\n\nconst availableCharacters: Set<string> = new Set([\n  'a', 'b', 'c', 'd', '1', '2', '3', '@', '#',\n]);\n\nexport function Callback() {\n  const {onKeyPress} = useRestrictedInput((char: string) => availableCharacters.has(char));\n  const [text, setText] = useState<string>('');\n  \n  const onChange: (event: ChangeEvent<HTMLInputElement>) => void = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setText(event.target.value);\n  }, [setText]);\n  \n  return (\n    <div>\n      <input type=\"text\"\n             value={text}\n             onChange={onChange}\n             onKeyPress={onKeyPress}/>\n      <p>\n        text is \"{text}\"\n      </p>\n    </div>\n  );\n}"},492:function(e,n,t){"use strict";t.r(n);var r=t(1),a=t.n(r),s=t(462);function u(e){var n=Object(r.useMemo)(function(){if("string"===typeof e){var n=new RegExp("[".concat(e,"]"));return function(e){return n.test(e)}}if("function"===typeof e)return e;throw new Error("availableCharacters must be string or function")},[e]);return{onKeyPress:Object(r.useCallback)(function(e){n(e.key)||(e.preventDefault(),e.stopPropagation())},[])}}function o(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=[],r=!0,a=!1,s=void 0;try{for(var u,o=e[Symbol.iterator]();!(r=(u=o.next()).done)&&(t.push(u.value),!n||t.length!==n);r=!0);}catch(i){a=!0,s=i}finally{try{r||null==o.return||o.return()}finally{if(a)throw s}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function i(){var e=u("abcd0-9").onKeyPress,n=o(Object(r.useState)(""),2),t=n[0],s=n[1],i=Object(r.useCallback)(function(e){s(e.target.value)},[s]);return a.a.createElement("div",null,a.a.createElement("input",{type:"text",value:t,onChange:i,onKeyPress:e}),a.a.createElement("p",null,'text is "',t,'"'))}function c(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=[],r=!0,a=!1,s=void 0;try{for(var u,o=e[Symbol.iterator]();!(r=(u=o.next()).done)&&(t.push(u.value),!n||t.length!==n);r=!0);}catch(i){a=!0,s=i}finally{try{r||null==o.return||o.return()}finally{if(a)throw s}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var l=new Set(["a","b","c","d","1","2","3","@","#"]);function v(){var e=u(function(e){return l.has(e)}).onKeyPress,n=c(Object(r.useState)(""),2),t=n[0],s=n[1],o=Object(r.useCallback)(function(e){s(e.target.value)},[s]);return a.a.createElement("div",null,a.a.createElement("input",{type:"text",value:t,onChange:o,onKeyPress:e}),a.a.createElement("p",null,'text is "',t,'"'))}function p(){return a.a.createElement("div",null,a.a.createElement(s.b,{text:t(468)}),a.a.createElement("h1",null,"Sample"),a.a.createElement(i,null),a.a.createElement(s.a,{value:t(469),language:"tsx"}),a.a.createElement(v,null),a.a.createElement(s.a,{value:t(470),language:"tsx"}))}t.d(n,"default",function(){return p})}}]);