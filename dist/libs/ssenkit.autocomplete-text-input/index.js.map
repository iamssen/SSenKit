{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"tslib\"","webpack:///./src/_library/ssenkit.autocomplete-text-input/components/MultipleAutoCompleteTextInput.tsx","webpack:///./src/_library/ssenkit.autocomplete-text-input/components/SingleAutoCompleteTextInput.tsx","webpack:///./src/_library/ssenkit.autocomplete-text-input/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_super","default_1","_this","apply","this","arguments","inputRef","external_react_","lastDisaptchedText","onInputChange","event","dispatchChange","currentTarget","onInputSubmit","keyCode","props","onSubmit","onBlur","text","onChange","external_tslib_","render","children","ref","defaultValue","onKeyDown","componentDidMount","current","self","options","minLength","source","focus","select","ui","terms","val","split","pop","push","item","join","change","hasInputClassName","className","hasMenuClassName","menuClassName","classes","$","on","TAB","autocomplete","menu","active","preventDefault","componentDidUpdate","defaultProps","type","__webpack_exports__","MultipleAutoCompleteTextInput","SingleAutoCompleteTextInput"],"mappings":"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","file":"dist/libs/ssenkit.autocomplete-text-input/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"react\");","module.exports = require(\"tslib\");","import * as React from 'react';\n\nfunction split(val: string): string[] {\n  return val.split(/,\\s*/);\n}\n\nexport interface Props {\n  menuClassName?: string;\n  className?: string;\n  \n  value?: string;\n  onChange: (value: string) => void;\n  onSubmit: (value: string) => void;\n  \n  minLength?: number;\n  source: (request: {term: string}, response: (data: object) => void) => void;\n  children?: React.ReactElement<React.InputHTMLAttributes<HTMLInputElement>>;\n}\n\nexport default class extends React.PureComponent<Props, {}> {\n  private inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n  private lastDisaptchedText: string = '';\n  \n  static defaultProps: Partial<Props> = {\n    minLength: 2,\n    children: <input type=\"text\"/>,\n  };\n  \n  render() {\n    return React.cloneElement(this.props.children as JSX.Element, {\n      ref: this.inputRef,\n      defaultValue: this.props.value,\n      onChange: this.onInputChange,\n      onKeyDown: this.onInputSubmit,\n    });\n  }\n  \n  componentDidMount() {\n    if (!this.inputRef.current) return;\n    \n    const self: this = this;\n    \n    const options: JQueryUI.AutocompleteOptions = {\n      minLength: this.props.minLength,\n      source: this.props.source,\n      focus: () => {\n        // prevent value inserted on focus\n        return false;\n      },\n      select: function (event: Event, ui: JQueryUI.AutocompleteUIParams) {\n        const terms: string[] = split(this.value);\n        // remove the current input\n        terms.pop();\n        // add the selected item\n        terms.push(ui.item.value);\n        // add placeholder to get the comma-and-space at the end\n        terms.push('');\n        this.value = terms.join(', ');\n        \n        self.dispatchChange(this.value);\n        return false;\n      },\n      change: this.onBlur,\n    };\n    \n    const hasInputClassName: boolean = typeof this.props.className === 'string';\n    const hasMenuClassName: boolean = typeof this.props.menuClassName === 'string';\n    \n    if (hasInputClassName || hasMenuClassName) {\n      const classes: object = {};\n      if (hasInputClassName) classes['ui-autocomplete-input'] = this.props.className;\n      if (hasMenuClassName) classes['ui-autocomplete'] = this.props.menuClassName;\n      options['classes'] = classes;\n    }\n    \n    $(this.inputRef.current)\n      .on('keydown', event => {\n        if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete('instance').menu.active) {\n          event.preventDefault();\n        }\n      })\n      .autocomplete(options);\n  }\n  \n  componentDidUpdate() {\n    if (this.inputRef.current && this.inputRef.current.value !== this.props.value) {\n      this.inputRef.current.value = this.props.value || '';\n    }\n  }\n  \n  onInputChange = (event: React.KeyboardEvent<{value: string}>) => {\n    this.dispatchChange(event.currentTarget.value);\n  };\n  \n  onInputSubmit = (event: React.KeyboardEvent<{value: string}>) => {\n    if (event.keyCode === 13) {\n      this.props.onSubmit(event.currentTarget.value);\n    }\n  };\n  \n  onBlur = (event: Event) => {\n    if (event.currentTarget && typeof event.currentTarget['value'] === 'string') {\n      this.dispatchChange(event.currentTarget['value']);\n    }\n  };\n  \n  dispatchChange = (text: string) => {\n    if (this.lastDisaptchedText !== text) {\n      this.props.onChange(text);\n      this.lastDisaptchedText = text;\n    }\n  };\n}","import * as React from 'react';\n\nexport interface Props {\n  menuClassName?: string;\n  className?: string;\n  \n  value?: string;\n  onChange: (value: string) => void;\n  onSubmit: (value: string) => void;\n  \n  minLength?: number;\n  source: (request: {term: string}, response: (data: object) => void) => void;\n  children?: React.ReactElement<React.InputHTMLAttributes<HTMLInputElement>>;\n}\n\nexport default class extends React.PureComponent<Props, {}> {\n  private inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n  private lastDisaptchedText: string = '';\n  \n  static defaultProps: Partial<Props> = {\n    minLength: 2,\n    children: <input type=\"text\"/>,\n  };\n  \n  render() {\n    return React.cloneElement(this.props.children as JSX.Element, {\n      ref: this.inputRef,\n      defaultValue: this.props.value,\n      onChange: this.onInputChange,\n      onKeyDown: this.onInputSubmit,\n    });\n  }\n  \n  componentDidMount() {\n    if (!this.inputRef.current) return;\n    \n    const self: this = this;\n    \n    const options: JQueryUI.AutocompleteOptions = {\n      minLength: this.props.minLength,\n      source: this.props.source,\n      focus: () => {\n        // prevent value inserted on focus\n        return false;\n      },\n      select: function (event: Event, ui: JQueryUI.AutocompleteUIParams) {\n        self.dispatchChange(ui.item.value);\n        return false;\n      },\n      change: this.onBlur,\n    };\n    \n    const hasInputClassName: boolean = typeof this.props.className === 'string';\n    const hasMenuClassName: boolean = typeof this.props.menuClassName === 'string';\n    \n    if (hasInputClassName || hasMenuClassName) {\n      const classes: object = {};\n      if (hasInputClassName) classes['ui-autocomplete-input'] = this.props.className;\n      if (hasMenuClassName) classes['ui-autocomplete'] = this.props.menuClassName;\n      options['classes'] = classes;\n    }\n    \n    $(this.inputRef.current)\n      .on('keydown', event => {\n        if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete('instance').menu.active) {\n          event.preventDefault();\n        }\n      })\n      .autocomplete(options);\n  }\n  \n  componentDidUpdate() {\n    if (this.inputRef.current && this.inputRef.current.value !== this.props.value) {\n      this.inputRef.current.value = this.props.value || '';\n    }\n  }\n  \n  onInputChange = (event: React.KeyboardEvent<{value: string}>) => {\n    this.dispatchChange(event.currentTarget.value);\n  };\n  \n  onInputSubmit = (event: React.KeyboardEvent<{value: string}>) => {\n    if (event.keyCode === 13) {\n      this.props.onSubmit(event.currentTarget.value);\n    }\n  };\n  \n  onBlur = (event: Event) => {\n    if (event.currentTarget && typeof event.currentTarget['value'] === 'string') {\n      this.dispatchChange(event.currentTarget['value']);\n    }\n  };\n  \n  dispatchChange = (text: string) => {\n    if (this.lastDisaptchedText !== text) {\n      this.props.onChange(text);\n      this.lastDisaptchedText = text;\n    }\n  };\n}","export * from './components';"],"sourceRoot":""}