{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"tslib\"","webpack:///external \"moment\"","webpack:///./src/seed/actions/changeLanguage.ts","webpack:///./src/seed/actions/changeTimezone.ts","webpack:///./src/seed/components/LanguageChangeButton.tsx","webpack:///./src/seed/components/SignButton.tsx","webpack:///./src/seed/actions/logout.ts","webpack:///./src/seed/actions/login.ts","webpack:///./src/seed/components/TimezoneChangeSelect.tsx","webpack:///./src/seed/components/InitialStateCleaner.tsx","webpack:///./src/seed/actions/cleanInitialState.ts","webpack:///./src/seed/components/Description.tsx","webpack:///./src/seed/components/renderRoute.tsx","webpack:///./src/seed/components/Source.tsx","webpack:///./src/seed/components/index.ts","webpack:///./src/seed/data/user.ts","webpack:///./src/seed/data/timezone.ts","webpack:///./src/seed/data/message.ts","webpack:///./src/seed/data/index.ts","webpack:///external \"d3-array\"","webpack:///./src/app/data/cookie.ts","webpack:///./src/app/data/language.ts","webpack:///./src/app/data/index.ts","webpack:///external \"react-router-dom\"","webpack:///./src/app/context.tsx","webpack:///external \"immer\"","webpack:///external \"js-cookie\"","webpack:///external \"react-dom\"","webpack:///external \"react-intl\"","webpack:///./src/_library/ssenkit.dropdown-anchor/components/DropDownAnchor.tsx","webpack:///./src/_library/ssenkit.dropdown-anchor/index.ts","webpack:///external \"react-router\"","webpack:///external \"moment-timezone\"","webpack:///external \"express\"","webpack:///./src/_library/recontext/index.tsx","webpack:///external \"@fortawesome/free-solid-svg-icons\"","webpack:///external \"@fortawesome/react-fontawesome\"","webpack:///./src/app/components/main/layout.module.scss?c476","webpack:///external \"body-parser\"","webpack:///./src/seed/components/SignButton.module.scss?315d","webpack:///./src/seed/components/TimezoneChangeSelect.module.scss?bad4","webpack:///external \"cookie-parser\"","webpack:///external \"intl-messageformat\"","webpack:///external \"react-dom/server\"","webpack:///./src/seed/components/LanguageChangeButton.module.scss?f3ea","webpack:///./src/seed/components/Source.module.scss?63e7","webpack:///./src/ssenkit/router-components/dropdown-anchor/DropdownAnchor.sample.module.scss?d5f1","webpack:///./src/ssenkit/router-components/modal/Modal.sample.module.scss?3bda","webpack:///./src/ssenkit/router-components/modal/openModal.sample.module.scss?cc18","webpack:///external \"react-intl/locale-data/en\"","webpack:///external \"react-intl/locale-data/ko\"","webpack:///./src/seed/router-components/main/index.tsx","webpack:///./src/ssenkit/router-components/autocomplete-text-input/MultipleAutoCompleteTextInput.description.md","webpack:///./src/ssenkit/router-components/autocomplete-text-input/MultipleAutoCompleteTextInput.sample.tsx?6082","webpack:///./src/ssenkit/router-components/autocomplete-text-input/SingleAutoCompleteTextInput.description.md","webpack:///./src/ssenkit/router-components/autocomplete-text-input/SingleAutoCompleteTextInput.sample.tsx?8cb0","webpack:///./src/ssenkit/router-components/date-select/MonthSelector.description.md","webpack:///./src/ssenkit/router-components/date-select/MonthSelector.sample.tsx?a2a2","webpack:///./src/ssenkit/router-components/date-select/DateInput.description.md","webpack:///./src/ssenkit/router-components/date-select/DateInput.sample.tsx?0be4","webpack:///./src/ssenkit/router-components/date-select/TimeInput.description.md","webpack:///./src/ssenkit/router-components/date-select/TimeInput.sample.tsx?60ed","webpack:///./src/ssenkit/router-components/date-select/DateTimeInput.description.md","webpack:///./src/ssenkit/router-components/date-select/DateTimeInput.sample.tsx?0787","webpack:///./src/ssenkit/router-components/date-select/DateSelector.description.md","webpack:///./src/ssenkit/router-components/date-select/DateSelector.sample.tsx?44ab","webpack:///./src/ssenkit/router-components/date-select/DateTimeSelector.description.md","webpack:///./src/ssenkit/router-components/date-select/DateTimeSelector.sample.tsx?def1","webpack:///./src/ssenkit/router-components/date-select/FromToDateTimeSelector.description.md","webpack:///./src/ssenkit/router-components/date-select/FromToDateTimeSelector.sample.tsx?dd13","webpack:///./src/ssenkit/router-components/date-select/FromToDateTimeDropDownSelector.description.md","webpack:///./src/ssenkit/router-components/date-select/FromToDateTimeDropDownSelector.sample.tsx?0e73","webpack:///./src/ssenkit/router-components/date-select/DateRangeSelector.description.md","webpack:///./src/ssenkit/router-components/date-select/DateRangeSelector.sample.tsx?9ab9","webpack:///./src/ssenkit/router-components/date-select/DateRangeDropDownSelector.description.md","webpack:///./src/ssenkit/router-components/date-select/DateRangeDropDownSelector.sample.tsx?bfd1","webpack:///./src/ssenkit/router-components/date-select/ConfigProvider.description.md","webpack:///./src/ssenkit/router-components/date-select/ConfigProvider.sample.tsx?a871","webpack:///./src/ssenkit/router-components/dropdown-anchor/DropdownAnchor.description.md","webpack:///./src/ssenkit/router-components/dropdown-anchor/DropdownAnchor.sample.tsx?7a98","webpack:///./src/ssenkit/router-components/modal/Modal.description.md","webpack:///./src/ssenkit/router-components/modal/Modal.sample.tsx?0c48","webpack:///./src/ssenkit/router-components/modal/openModal.description.md","webpack:///./src/ssenkit/router-components/modal/openModal.sample.tsx?4979","webpack:///./src/ssenkit/router-components/restricted-text-input/Sample.description.md","webpack:///./src/ssenkit/router-components/restricted-text-input/Sample.sample.tsx?2261","webpack:///./src/ssenkit/router-components/recontext/Sample.description.md","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/context.tsx?a47d","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/actions/updateB.ts?4b06","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/actions/init.ts?17cd","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/components/Print.tsx?4a2e","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/components/UpdateA.tsx?e058","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/components/UpdateB.tsx?52bd","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/components/UpdateX.tsx?c535","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/components/UpdateY.tsx?c0cc","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/data/test.ts?d44a","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/index.tsx?55bf","webpack:///./src/research/numeral/index.tsx","webpack:///./src/research/numeral/numeral.test.ts","webpack:///./src/_library/ssenkit.date-select/context.tsx","webpack:///./src/_library/ssenkit.date-select/components/MonthSelector.tsx","webpack:///./src/_library/ssenkit.date-select/components/DateInput.tsx","webpack:///./src/_library/ssenkit.date-select/components/TimeInput.tsx","webpack:///./src/_library/ssenkit.date-select/components/DateTimeInput.tsx","webpack:///./src/_library/ssenkit.date-select/components/DayCell.tsx","webpack:///./src/_library/ssenkit.date-select/components/DateSelector.tsx","webpack:///./src/_library/ssenkit.date-select/components/DateTimeSelector.tsx","webpack:///./src/_library/ssenkit.date-select/components/FromToDateTimeSelector.tsx","webpack:///./src/_library/ssenkit.date-select/types.ts","webpack:///./src/_library/ssenkit.date-select/components/DefaultDateList.tsx","webpack:///./src/_library/ssenkit.date-select/components/DateRangeSelector.tsx","webpack:///./src/_library/ssenkit.date-select/components/FromToDateTimeDropDownSelectorButton.tsx","webpack:///./src/_library/ssenkit.date-select/components/FromToDateTimeDropDownSelector.tsx","webpack:///./src/_library/ssenkit.date-select/components/DateRangeDropDownSelectorButton.tsx","webpack:///./src/_library/ssenkit.date-select/components/DateRangeDropDownSelector.tsx","webpack:///./src/ssenkit/router-components/date-select/DateInput.sample.tsx","webpack:///./src/ssenkit/router-components/date-select/DateRangeSelector.sample.tsx","webpack:///./src/ssenkit/router-components/date-select/DateRangeDropDownSelector.sample.tsx","webpack:///./src/ssenkit/router-components/date-select/DateSelector.sample.tsx","webpack:///./src/ssenkit/router-components/date-select/DateTimeInput.sample.tsx","webpack:///./src/ssenkit/router-components/date-select/DateTimeSelector.sample.tsx","webpack:///./src/ssenkit/router-components/date-select/FromToDateTimeSelector.sample.tsx","webpack:///./src/ssenkit/router-components/date-select/MonthSelector.sample.tsx","webpack:///./src/ssenkit/router-components/date-select/TimeInput.sample.tsx","webpack:///./src/ssenkit/router-components/date-select/FromToDateTimeDropDownSelector.sample.tsx","webpack:///./src/ssenkit/router-components/date-select/ConfigProvider.sample.tsx","webpack:///./src/ssenkit/router-components/date-select/index.tsx","webpack:///./src/server/templates/app.ts","webpack:///./src/app/components/route/RouterNavigation.tsx","webpack:///./src/app/components/main/index.tsx","webpack:///./src/_library/ssenkit.router-store/components/render.ts","webpack:///./src/app/route/syncRouterStore.ts","webpack:///./src/_library/ssenkit.router-store/components/async-router-store.ts","webpack:///./src/_library/ssenkit.router-store/components/sync-router-store.ts","webpack:///./src/app/components/route/RouterContents.tsx","webpack:///./src/server/components/App.tsx","webpack:///./src/server/routers/app.tsx","webpack:///./src/server/index.ts","webpack:///./src/_boot/server/index.tsx","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/actions/updateB.ts","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/data/test.ts","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/context.tsx","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/actions/init.ts","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/components/Print.tsx","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/components/UpdateA.tsx","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/components/UpdateB.tsx","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/components/UpdateX.tsx","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/components/UpdateY.tsx","webpack:///./src/ssenkit/router-components/recontext/Sample.sample/index.tsx","webpack:///./src/ssenkit/router-components/recontext/index.tsx","webpack:///./src/_library/ssenkit.autocomplete-text-input/components/MultipleAutoCompleteTextInput.tsx","webpack:///./src/_library/ssenkit.autocomplete-text-input/components/SingleAutoCompleteTextInput.tsx","webpack:///./src/ssenkit/router-components/autocomplete-text-input/MultipleAutoCompleteTextInput.sample.tsx","webpack:///./src/ssenkit/router-components/autocomplete-text-input/SingleAutoCompleteTextInput.sample.tsx","webpack:///./src/ssenkit/router-components/autocomplete-text-input/index.tsx","webpack:///./src/_library/ssenkit.modal/components/Modal.tsx","webpack:///./src/_library/ssenkit.modal/components/openModal.tsx","webpack:///./src/ssenkit/router-components/modal/Modal.sample.tsx","webpack:///./src/ssenkit/router-components/modal/openModal.sample.tsx","webpack:///./src/ssenkit/router-components/modal/index.tsx","webpack:///./src/_library/ssenkit.restricted-text-input/index.tsx","webpack:///./src/ssenkit/router-components/restricted-text-input/Sample.sample.tsx","webpack:///./src/ssenkit/router-components/restricted-text-input/index.tsx","webpack:///./src/ssenkit/router-components/dropdown-anchor/DropdownAnchor.sample.tsx","webpack:///./src/ssenkit/router-components/dropdown-anchor/index.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","changeLanguage","language","_a","updateLanguage","changeTimezone","timezone","updateTimezone","LanguageChangeButton_Component","_super","Component","_this","apply","this","arguments","change","props","dispatch","external_tslib_","render","external_react_","className","LanguageChangeButton_module","data","map","onClick","displayName","LanguageChangeButton","context","SignButton_Component","user","SignButton_module","startLogout","abortLogout","updateUser","setTimeout","error","inProgress","intl","formatMessage","id","firstName","lastName","startLogin","abortLogin","age","external_react_intl_","TimezoneChangeSelect_Component","onChange","event","target","has","setState","state","zoneName","list","TimezoneChangeSelect_module","TimezoneChangeSelect","InitialStateCleaner_Component","initialPath","location","pathname","getDerivedStateFromProps","nextProps","prevState","initialState","cleanInitialState","Description","external_react_router_dom_","Container","load","then","default","container","highlight","current","Array","from","querySelectorAll","forEach","element","hljs","highlightBlock","parentElement","ref","dangerouslySetInnerHTML","__html","html","componentDidMount","componentDidUpdate","Source","Source_module","source","__webpack_exports__","UserStoreProgress","createUserStore","none","userStore","Error","external_immer_default","draft","login","logout","timezoneList","src_timezone","timezoneMap","reduce","set","Map","getTimezone","timezoneName","tz","external_js_cookie_","messages","locale","cookieKeys","languages","react__WEBPACK_IMPORTED_MODULE_3__","ReactProvider","Provider","Consumer","contextState","subscribe","seed_data__WEBPACK_IMPORTED_MODULE_5__","js_cookie__WEBPACK_IMPORTED_MODULE_2__","app_data__WEBPACK_IMPORTED_MODULE_1__","currentTimezone","setContextState","bindReducer","tslib__WEBPACK_IMPORTED_MODULE_0__","children","recontext__WEBPACK_IMPORTED_MODULE_4__","withConsumer","class_1","default_1","contentContainerRef","anchorButtonRef","subscribeOutboundClick","outboundClickSubscription","useOutboundClick","outboundClickHandler","window","addEventListener","unsubscribeOutboundClick","removeEventListener","contentsBound","external_react_dom_","getBoundingClientRect","clientX","clientY","toClose","left","width","top","height","closeContentContainer","stopPropagation","openerOpenHandler","openContentContainer","openerCloseHandler","close","open","buttonProps","role","contentElement","button","updateContentContainerPosition","componentWillUnmount","documentWidth","innerWidth","documentHeight","innerHeight","contents","buttonBound","x","y","useAlternatePosition","style","onOpen","onClose","defaultProps","components_DropDownAnchor","teardowns","Set","subscriptions","stateOrProducer","assign","action","teardown","broken_1","add","delete","subscription","getState","reducer","args","_i","length","param","undefined","result","prevProps","size","_b","_c","next","done","clear","react__WEBPACK_IMPORTED_MODULE_1__","content","nav","body","main","commit","react__WEBPACK_IMPORTED_MODULE_0__","seed_components__WEBPACK_IMPORTED_MODULE_1__","defaultConfig","disableBefore","external_moment_","subtract","startOf","disableAfter","endOf","dateInputClassName","timeInputClassName","dateTimeInputClassName","monthSelectorClassName","monthSelectorYearLabelFunction","year","toString","monthSelectorMonthLabelFunction","month","dateSelectorClassName","dateSelectorPrevMonthButton","dateSelectorNextMonthButton","dateSelectorDayLabelFunction","day","dateTimeSelectorClassName","fromToDateTimeSelectorClassName","fromToDateTimeDropDownSelectorClassName","fromToDateTimeDropDownSelectorCancelButton","fromToDateTimeDropDownSelectorApplyButton","dateRangeSelectorClassName","dateRangeSelectorDateTabLabel","dateRangeSelectorListTabLabel","dateRangeSelectorCancleButton","dateRangeSelectorApplyButton","dateRangeDropDownSelectorClassName","context_a","config","context_Provider","components_MonthSelector","onYearChange","Number","months","currentMonth","date","indexOf","onMonthChange","parseSource","prevDisableBefore","prevDisableAfter","years","keys","isSame","shouldComponentUpdate","nextState","to","itr","clone","isSameOrBefore","push","DateInput_format","availableKeyCodes","external_d3_array_","DateInput","inputRef","onBlur","commitString","dateString","currentTarget","onKeyDown","keyCode","ctrlKey","metaKey","preventDefault","format","type","defaultValue","prevDateString","nextDateString","nextDate","replace","test","getFormat","isBefore","isAfter","isValid","toDate","TimeInput_availableKeyCodes","TimeInput","time","prevTimeString","nextTimeString","trim","times","split","hh","mm","ss","isNaN","DateTimeInput_format","DateTimeInput_availableKeyCodes","DateTimeInput","DateTimeInput_getFormat","disabled","selected","selectedDay","classNames","startDay","endDay","today","join","components_DateSelector","changeView","newMonth","view","onDayClick","newDate","startDayOfMonth","endDayOfMonth","row","rows","DayCell","DateSelector_PrevMonthButton","DateSelector_NextMonthButton","PrevMonthButton","NextMonthButton","isSameOrAfter","components_DateTimeSelector","onDateTimeChange","onDateChange","hour","minute","second","components_FromToDateTimeSelector","changeFrom","changeTo","fromTo","toDisableBefore","isFromTo","obj","onSelect","latest","getTabIndex","dateRange","description","components_DateRangeSelector","onTabChange","tabIndex","Date","onDateCancel","onCancel","progressiveDateRange","onDateComplete","onComplete","prevDateRange","aria-selected","components_DefaultDateList","FromToDateTimeDropDownSelectorButton","progressiveFromTo","aria-busy","dateRangeToString","components_FromToDateTimeDropDownSelector","anchorRef","onAnchorClose","ssenkit_dropdown_anchor","DateRangeDropDownSelectorButton_dateRangeToString","isLatest","isFrom","DateRangeDropDownSelectorButton","components_DateRangeDropDownSelector","JSON","stringify","datetime","ko","ConfigProvider_sample","components","MonthSelector_sample","DateInput_sample","TimeInput_sample","DateTimeInput_sample","DateSelector_sample","DateTimeSelector_sample","FromToDateTimeSelector_sample","FromToDateTimeDropDownSelector_sample","DateRangeSelector_sample","DateRangeDropDownSelector_sample","app","RouterNavigation","react_fontawesome_","icon","free_solid_svg_icons_","fixedWidth","components_main","layout_module","routerContents","render_RouterRenderContainer","RouterRenderContainer","syncRouterStore","getRoute","path","find","exact","strict","component","external_react_router_","RouterContents","App_Component","seed_data","url","App","router","external_express_","app_render","req","contentsState","cookies","server_","res","send","sample","testString","routers_app","server_app","use","external_body_parser_","extended","external_cookie_parser_","server","port","process","env","PORT","config_0","listen","console","log","external_moment_timezone_","updateB","b","updateX","z","updateY","updateA","a","unsubscribe","recontext","Print","UpdateA","update","Math","floor","random","UpdateB","UpdateX","UpdateY","Sample_sample","lastDisaptchedText","onInputChange","dispatchChange","onInputSubmit","onSubmit","text","self","options","minLength","focus","select","ui","terms","val","pop","item","hasInputClassName","hasMenuClassName","menuClassName","classes","$","on","TAB","autocomplete","menu","active","availableTags","request","response","filter","term","MultipleAutoCompleteTextInput_sample_split","extractLast","MultipleAutoCompleteTextInput","SingleAutoCompleteTextInput_sample_availableTags","SingleAutoCompleteTextInput_sample_source","SingleAutoCompleteTextInput_sample_split","SingleAutoCompleteTextInput_sample_extractLast","SingleAutoCompleteTextInput","autocomplete_text_input_MultipleAutoCompleteTextInput_sample","autocomplete_text_input_SingleAutoCompleteTextInput_sample","Modal","closeModal","modalContainer","document","querySelector","createElement","setAttribute","appendChild","removeChild","dimStyle","backgroundColor","openModal","Content","Modal_sample_module","Modal_sample","modal","openModal_sample_Content","openModal_sample_module","openModal_sample","availableInputKeyCodes","ssenkit_restricted_text_input","onKeyPress","availableCharacterPattern","String","fromCharCode","charCode","DropdownAnchor_sample_Button","Button","DropdownAnchor_sample_Content","DropdownAnchor_sample_module","DropdownAnchor_sample"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 120);\n","module.exports = require(\"react\");","module.exports = require(\"tslib\");","module.exports = require(\"moment\");","import { ContextState } from 'app/context';\nimport { Language } from 'seed/data';\n\nexport default (language: Language) => ({updateLanguage}: ContextState) => {\n  updateLanguage(language);\n}","import { ContextState } from 'app/context';\n\nexport default (timezone: string) => ({updateTimezone}: ContextState) => {\n  updateTimezone(timezone);\n}","import { ContextState, withConsumer } from 'app/context';\nimport { Language, languages } from 'seed/data';\nimport * as React from 'react';\nimport { changeLanguage } from 'seed/actions';\nimport * as styles from './LanguageChangeButton.module.scss';\n\nexport interface Props {\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'LanguageChangeButton';\n  \n  render() {\n    return (\n      <div className={styles.main}>\n        {this.props.language} :\n        {\n          languages.map(language => (\n            <button key={language} onClick={() => this.change(language)}>\n              {language}\n            </button>\n          ))\n        }\n      </div>\n    );\n  }\n  \n  change = (language: Language) => {\n    this.props.dispatch(changeLanguage(language));\n  };\n}\n\nexport default withConsumer(Component) as React.ComponentClass<Props>;","import { ContextState, withConsumer } from 'app/context';\nimport * as React from 'react';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { login, logout } from 'seed/actions';\nimport * as styles from './SignButton.module.scss';\n\nexport interface Props {\n}\n\ninterface InternalProps extends InjectedIntlProps, ContextState {\n}\n\ninterface State {\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'SignButton';\n  \n  render() {\n    return this.props.user.user\n      ? (\n        <button className={styles.main}\n                onClick={() => this.props.dispatch(logout())}>\n          {this.props.user.inProgress ? '### ' : null}\n          {this.props.intl.formatMessage({id: 'app.main.sign-button.logout'})}\n          {' - '}\n          {this.props.user.user.firstName}\n          {' '}\n          {this.props.user.user.lastName}\n        </button>\n      )\n      : (\n        <button className={styles.main}\n                onClick={() => this.props.dispatch(login())}>\n          {this.props.user.inProgress ? '### ' : null}\n          {this.props.intl.formatMessage({id: 'app.main.sign-button.login'})}\n        </button>\n      );\n  }\n}\n\nexport default injectIntl(withConsumer<Props & InternalProps>(Component)) as React.ComponentClass<Props>;","import { ContextState } from 'app/context';\n\nexport default () => ({user, startLogout, abortLogout, updateUser}: ContextState) => {\n  startLogout();\n  \n  try {\n    setTimeout(() => {\n      updateUser(null);\n    }, 1000);\n  } catch (error) {\n    abortLogout();\n  }\n}","import { ContextState } from 'app/context';\n\nexport default () => ({user, startLogin, abortLogin, updateUser}: ContextState) => {\n  startLogin();\n  \n  try {\n    setTimeout(() => {\n      updateUser({\n        firstName: 'Seoyeon',\n        lastName: 'Lee',\n        age: 37,\n      });\n    }, 1000);\n  } catch (error) {\n    abortLogin();\n  }\n}","import { ContextState, withConsumer } from 'app/context';\nimport * as React from 'react';\nimport { changeTimezone } from 'seed/actions';\nimport { timezoneList, timezoneMap } from 'seed/data';\nimport * as styles from './TimezoneChangeSelect.module.scss';\n\nexport interface Props {\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n  timezone: string;\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'TimezoneChangeSelect';\n  \n  constructor(props: Props & InternalProps) {\n    super(props);\n    \n    this.state = {\n      timezone: props.timezone.zoneName,\n    };\n  }\n  \n  render() {\n    return (\n      <div>\n        <input list=\"timezones\"\n               className={timezoneMap.has(this.state.timezone) ? styles.commit : styles.draft}\n               value={this.state.timezone}\n               onChange={this.onChange}/>\n        <datalist id=\"timezones\">\n          {\n            timezoneList.map(timezone => (\n              <option key={timezone.zoneName} value={timezone.zoneName}/>\n            ))\n          }\n        </datalist>\n      </div>\n    );\n  }\n  \n  onChange = (event: React.ChangeEvent<{value: string}>) => {\n    const timezone: string = event.target.value;\n    \n    if (timezoneMap.has(timezone)) {\n      this.props.dispatch(changeTimezone(timezone));\n    }\n    \n    this.setState({\n      timezone,\n    });\n  };\n}\n\nexport default withConsumer(Component) as React.ComponentType<Props>;","import { ContextState, withConsumer } from 'app/context';\nimport * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { cleanInitialState } from 'seed/actions';\n\nexport interface Props {\n\n}\n\ninterface InternalProps extends RouteComponentProps<{}>, ContextState {\n}\n\ninterface State {\n  initialPath: string | null;\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'InitialStateCleaner';\n  \n  static getDerivedStateFromProps(nextProps: Props & InternalProps, prevState: State): Partial<State> {\n    if (prevState.initialPath && prevState.initialPath !== nextProps.location.pathname) {\n      nextProps.dispatch(cleanInitialState());\n      \n      return {\n        initialPath: null,\n      };\n    }\n    \n    return prevState;\n  }\n  \n  constructor(props: Props & InternalProps) {\n    super(props);\n    \n    this.state = {\n      initialPath: props.location.pathname,\n    };\n  }\n  \n  render() {\n    return null;\n  }\n}\n\nexport default withRouter<Props & InternalProps>(withConsumer<Props & InternalProps>(Component)) as React.ComponentClass<Props>;","import { ContextState } from 'app/context';\n\nexport default () => ({initialState, cleanInitialState}: ContextState) => {\n  if (initialState) {\n    cleanInitialState();\n  }\n}","import * as React from 'react';\n\ninterface Props {\n  html: string;\n}\n\nclass Component extends React.Component<Props, {}> {\n  private container: React.RefObject<HTMLDivElement> = React.createRef();\n  \n  render() {\n    return (\n      <div ref={this.container} dangerouslySetInnerHTML={{__html: this.props.html}}/>\n    );\n  }\n  \n  componentDidMount() {\n    this.highlight();\n  }\n\n  componentDidUpdate() {\n    this.highlight();\n  }\n  \n  highlight = () => {\n    if (this.container.current) {\n      Array.from(this.container.current.querySelectorAll('pre code')).forEach(element => {\n        hljs.highlightBlock(element.parentElement);\n      });\n    }\n  };\n}\n\nexport default Component;","import * as React from 'react';\n\ntype ComponentClass = React.ComponentClass<{}> | React.StatelessComponent<{}> | React.ClassicComponentClass<{}>;\n\ninterface Props {\n  props: object;\n  load: Promise<{default: ComponentClass}>;\n}\n\ninterface State {\n  Component: ComponentClass | null;\n}\n\nclass Container extends React.PureComponent<Props, State> {\n  state: State = {\n    Component: null,\n  };\n  \n  constructor(props: Props) {\n    super(props);\n    props.load.then(({default: Component}) => {\n      this.setState({Component});\n    });\n  }\n  \n  render() {\n    return this.state.Component\n      ? <this.state.Component {...this.props.props}/>\n      : null;\n  }\n}\n\nexport default (load: () => Promise<{default: ComponentClass}>) => {\n  return props => <Container props={props} load={load()}/>;\n}","import * as React from 'react';\nimport * as styles from './Source.module.scss';\n\ninterface Props {\n  source: string;\n}\n\nclass Component extends React.Component<Props, {}> {\n  private container: React.RefObject<HTMLPreElement> = React.createRef();\n  \n  render() {\n    return (\n      <pre ref={this.container} className={styles.main}>\n        <code>\n          {this.props.source}\n        </code>\n      </pre>\n    );\n  }\n  \n  componentDidMount() {\n    this.highlight();\n  }\n\n  componentDidUpdate() {\n    this.highlight();\n  }\n  \n  highlight = () => {\n    if (this.container.current) hljs.highlightBlock(this.container.current);\n  };\n}\n\nexport default Component;","export { default as LanguageChangeButton } from './LanguageChangeButton';\nexport { default as SignButton } from './SignButton';\nexport { default as TimezoneChangeSelect } from './TimezoneChangeSelect';\nexport { default as InitialStateCleaner } from './InitialStateCleaner';\nexport { default as renderRoute } from './renderRoute';\nexport { default as Description } from './Description';\nexport { default as Source } from './Source';","import { InitialState } from 'seed/data';\nimport produce from 'immer';\n\nexport interface User {\n  firstName: string;\n  lastName: string;\n  age: number;\n}\n\nexport enum UserStoreProgress {\n  none,\n  login,\n  logout,\n}\n\nexport interface UserStore {\n  user: User | null;\n  inProgress: UserStoreProgress;\n}\n\nexport function createUserStore(initialState: InitialState | null): UserStore {\n  return {\n    user: initialState ? initialState.user : null,\n    inProgress: UserStoreProgress.none,\n  };\n}\n\nexport const startLogin: (userStore: UserStore) => () => UserStore = userStore => () => {\n  if (userStore.inProgress !== UserStoreProgress.none) {\n    throw new Error('');\n  }\n  \n  return produce(userStore, draft => {\n    draft.inProgress = UserStoreProgress.login;\n  });\n};\n\nexport const abortLogin: (userStore: UserStore) => () => UserStore = userStore => () => {\n  if (userStore.inProgress !== UserStoreProgress.login) {\n    throw new Error('');\n  }\n  \n  return produce(userStore, draft => {\n    draft.inProgress = UserStoreProgress.none;\n  });\n};\n\nexport const startLogout: (userStore: UserStore) => () => UserStore = userStore => () => {\n  if (userStore.inProgress !== UserStoreProgress.none) {\n    throw new Error('');\n  }\n  \n  return produce(userStore, draft => {\n    draft.inProgress = UserStoreProgress.logout;\n  });\n};\n\nexport const abortLogout: (userStore: UserStore) => () => UserStore = userStore => () => {\n  if (userStore.inProgress !== UserStoreProgress.logout) {\n    throw new Error('');\n  }\n  \n  return produce(userStore, draft => {\n    draft.inProgress = UserStoreProgress.none;\n  });\n};\n\nexport const updateUser: (userStore: UserStore) => (user: User | null) => UserStore = userStore => user => {\n  return produce(userStore, draft => {\n    draft.user = user;\n    draft.inProgress = UserStoreProgress.none;\n  });\n};","import { cookieKeys } from 'app/data';\nimport { get, set } from 'js-cookie';\nimport * as moment from 'moment-timezone';\nimport * as timezonedb from '../../timezone.json';\n\nexport interface Timezone {\n  countryCode: string;\n  countryName: string;\n  zoneName: string;\n  gmtOffset: number;\n  timestamp: number;\n}\n\nexport const timezoneList: Timezone[] = Array.from(timezonedb.zones);\n\nexport const timezoneMap: Map<string, Timezone> = timezoneList.reduce((map, timezone) => {\n  map.set(timezone.zoneName, timezone);\n  return map;\n}, new Map);\n\nexport function getTimezone(timezoneName: string): Timezone {\n  const timezone: Timezone | undefined = timezoneMap.get(timezoneName);\n  if (!timezone) throw new Error('Undefined timezone: ' + timezoneName);\n  return timezone;\n}\n\nexport function getInitialTimezone(): string {\n  const timezone: string | undefined = get(cookieKeys.timezone);\n  \n  if (typeof timezone === 'string') {\n    return timezone;\n  } else {\n    const timezone: string = moment.tz.guess();\n    set(cookieKeys.timezone, timezone);\n    return timezone;\n  }\n}\n\nexport const updateTimezone: () => (timezone: string | Timezone) => Timezone = () => timezone => {\n  const tz: Timezone = typeof timezone === 'string'\n    ? getTimezone(timezone)\n    : timezone;\n  \n  set(cookieKeys.timezone, timezone);\n  \n  return tz;\n};","import { Language, languages, cookieKeys } from 'app/data';\nimport IntlMessageFormat from 'intl-messageformat';\nimport * as Cookie from 'js-cookie';\n\nexport {\n  languages,\n  Language,\n};\n\ntype Messages = {[language: string]: {[id: string]: string}};\n\nexport const messages: Messages = require('../../messages.json');\n\nexport const updateLanguage: () => (language: Language) => Language = () => language => {\n  Cookie.set(cookieKeys.locale, language);\n  return language;\n};\n\nexport function formatMessage(messageId: string, values?: object): string {\n  const language: Language = Cookie.get(cookieKeys.locale) as Language || 'en';\n  const format: IntlMessageFormat = new IntlMessageFormat(messages[language][messageId], language);\n  return format.format(values);\n}","export * from './user';\nexport * from './initialState';\nexport * from './timezone';\nexport * from './message';","module.exports = require(\"d3-array\");","export enum cookieKeys {\n  locale = 'locale',\n  timezone = 'timezone'\n}","import { addLocaleData } from \"react-intl\";\n\nexport type Language = 'en' | 'ko';\nexport const languages: Language[] = ['en', 'ko'];\n\naddLocaleData(require('react-intl/locale-data/en'));\naddLocaleData(require('react-intl/locale-data/ko'));","export * from './language';\nexport * from './cookie';","module.exports = require(\"react-router-dom\");","import { cookieKeys } from 'app/data';\nimport * as Cookie from 'js-cookie';\nimport * as React from 'react';\nimport * as Recontext from 'recontext';\nimport {\n  abortLogin,\n  abortLogout,\n  createUserStore,\n  getTimezone,\n  InitialState,\n  Language,\n  startLogin,\n  startLogout,\n  Timezone,\n  updateLanguage,\n  updateTimezone,\n  updateUser,\n  User,\n  UserStore,\n} from 'seed/data';\n\ninterface Props {\n  initialState: InitialState | null;\n  currentTimezone: string;\n}\n\ntype ContextState = Recontext.ContextState<{\n  user: UserStore;\n  initialState: InitialState | null;\n  language: Language,\n  timezone: Timezone;\n  \n  cleanInitialState: () => void;\n  updateTimezone: (timezone: string | Timezone) => void;\n  updateLanguage: (language: Language) => void;\n  startLogin: () => void;\n  startLogout: () => void;\n  abortLogin: () => void;\n  abortLogout: () => void;\n  updateUser: (user: User | null) => void;\n}>\n\n// @ts-ignore\nconst {Provider: ReactProvider, Consumer} = React.createContext<ContextState>();\n\nclass Provider extends Recontext.Provider<ContextState, Props> {\n  constructor(props: Props) {\n    super(props);\n    \n    this.state = {\n      contextState: {\n        // tools\n        dispatch: this.dispatch,\n        subscribe: this.subscribe,\n        \n        // states\n        initialState: props.initialState,\n        user: createUserStore(props.initialState),\n        language: props.initialState\n          ? props.initialState.language\n          : Cookie.get(cookieKeys.locale) as Language || 'en',\n        timezone: getTimezone(this.props.currentTimezone),\n        \n        // actions\n        cleanInitialState: () => {\n          this.setContextState({\n            initialState: null,\n          });\n        },\n        updateTimezone: this.bindReducer()(updateTimezone)(timezone => ({timezone})),\n        updateLanguage: this.bindReducer()(updateLanguage)(language => ({language})),\n        updateUser: this.bindReducer(({user}) => user)(updateUser)(user => ({user})),\n        startLogin: this.bindReducer(({user}) => user)(startLogin)(user => ({user})),\n        startLogout: this.bindReducer(({user}) => user)(startLogout)(user => ({user})),\n        abortLogin: this.bindReducer(({user}) => user)(abortLogin)(user => ({user})),\n        abortLogout: this.bindReducer(({user}) => user)(abortLogout)(user => ({user})),\n      },\n    };\n  }\n  \n  render() {\n    return (\n      <ReactProvider value={this.state.contextState}>\n        {this.props.children}\n      </ReactProvider>\n    );\n  }\n}\n\nfunction withConsumer<Props>(Component: React.ComponentType<Props>): React.ComponentType<ContextState & Props> {\n  return class extends React.PureComponent<ContextState & Props, {}> {\n    render() {\n      return (\n        <Consumer>\n          {\n            state => <Component {...state} {...this.props}/>\n          }\n        </Consumer>\n      );\n    }\n  };\n}\n\nexport {\n  Provider,\n  Consumer,\n  withConsumer,\n  ContextState,\n  Props,\n};","module.exports = require(\"immer\");","module.exports = require(\"js-cookie\");","module.exports = require(\"react-dom\");","module.exports = require(\"react-intl\");","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './DropDownAnchor.scss';\nimport DropDownAnchorButtonProps from './DropDownAnchorButtonProps';\nimport DropDownContentProps from './DropDownContentProps';\n\nexport interface Props {\n  className?: string;\n  children: React.ReactElement<DropDownContentProps>;\n  button: React.ReactElement<DropDownAnchorButtonProps>;\n  useAlternatePosition?: boolean;\n  useOutboundClick?: boolean;\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\nexport interface State {\n  open: boolean;\n}\n\nexport default class extends React.PureComponent<Props, State> {\n  private contentContainerRef: React.RefObject<HTMLDivElement> = React.createRef();\n  private anchorButtonRef: React.RefObject<React.ReactInstance> = React.createRef();\n  \n  private outboundClickSubscription: ((event: MouseEvent) => void) | null;\n  \n  static defaultProps: Partial<Props> = {\n    className: '',\n    useAlternatePosition: true,\n    useOutboundClick: false,\n  };\n  \n  constructor(props: Props) {\n    super(props);\n    \n    this.state = {\n      open: false,\n    };\n  }\n  \n  render() {\n    const buttonProps: DropDownAnchorButtonProps & {ref: React.RefObject<React.ReactInstance>} = {ref: this.anchorButtonRef};\n    buttonProps['role'] = 'toggle';\n    buttonProps['aria-expanded'] = this.state.open;\n    \n    let contentElement: JSX.Element | null = null;\n    \n    if (this.state.open) {\n      contentElement = (\n        <div ref={this.contentContainerRef} role=\"container\">\n          {React.cloneElement(this.props.children as JSX.Element, {close: this.close})}\n        </div>\n      );\n      \n      if (!this.props.useOutboundClick) buttonProps.onClick = this.openerCloseHandler;\n    } else {\n      buttonProps.onClick = this.openerOpenHandler;\n    }\n    \n    return (\n      <div className={'DropDownAnchor ' + this.props.className}>\n        {React.cloneElement(this.props.button, buttonProps)}\n        {contentElement}\n      </div>\n    );\n  }\n  \n  componentDidUpdate() {\n    if (this.state.open) {\n      this.updateContentContainerPosition();\n      this.subscribeOutboundClick();\n    }\n  }\n  \n  componentWillUnmount() {\n    this.unsubscribeOutboundClick();\n  }\n  \n  updateContentContainerPosition() {\n    if (!this.anchorButtonRef.current || !this.contentContainerRef.current) return;\n    \n    const documentWidth: number = window.innerWidth;\n    const documentHeight: number = window.innerHeight;\n    \n    const button: HTMLElement = ReactDOM.findDOMNode(this.anchorButtonRef.current) as HTMLElement;\n    const contents: HTMLElement = ReactDOM.findDOMNode(this.contentContainerRef.current) as HTMLElement;\n    \n    if (!button) return;\n    \n    const buttonBound: ClientRect = button.getBoundingClientRect();\n    const contentsBound: ClientRect = contents.getBoundingClientRect();\n    \n    const gap: number = 3;\n    const alternatePositionMargin: number = 10; // FIXME JS 소숫점 Error 위치값 계산이 소숫점으로 들어가게 되면서 발생되는 에러를 해결하기 위한 여유분 추가\n    \n    let x: number = 0;\n    let y: number = buttonBound.height + gap;\n    \n    if (this.props.useAlternatePosition && contentsBound.left + contentsBound.width + alternatePositionMargin > documentWidth) {\n      x = buttonBound.width - contentsBound.width;\n    }\n    \n    if (this.props.useAlternatePosition && buttonBound.top + buttonBound.height + gap + contentsBound.height > documentHeight) {\n      y = -(contentsBound.height + gap);\n    }\n    \n    contents.style.left = x + 'px';\n    contents.style.top = y + 'px';\n  }\n  \n  // ---------------------------------------------\n  // outbound click\n  // ---------------------------------------------\n  subscribeOutboundClick = () => {\n    // subscribe window click event for contents close\n    if (!this.outboundClickSubscription && this.props.useOutboundClick) {\n      this.outboundClickSubscription = event => this.outboundClickHandler(event);\n      window.addEventListener('click', this.outboundClickSubscription);\n    }\n  };\n  \n  unsubscribeOutboundClick = () => {\n    if (this.outboundClickSubscription) {\n      window.removeEventListener('click', this.outboundClickSubscription);\n      this.outboundClickSubscription = null;\n    }\n  };\n  \n  outboundClickHandler = (event: MouseEvent) => {\n    if (!this.contentContainerRef.current) return;\n    \n    const contents: HTMLElement = ReactDOM.findDOMNode(this.contentContainerRef.current) as HTMLElement;\n    const contentsBound: ClientRect = contents.getBoundingClientRect();\n    \n    const {clientX, clientY} = event;\n    \n    const toClose: boolean = clientX < contentsBound.left ||\n      clientX > contentsBound.left + contentsBound.width ||\n      clientY < contentsBound.top ||\n      clientY > contentsBound.top + contentsBound.height;\n    \n    // FIXME Windows + Chrome 환경에서 <select> 선택 시 clientX, clientY가 0으로 들어오는 현상이 있어서 창이 닫히는 문제를 회피\n    const isZero: boolean = clientX + clientY === 0;\n    \n    if (!isZero && toClose) this.closeContentContainer();\n    \n    event.stopPropagation();\n  };\n  \n  // ---------------------------------------------\n  // opener click\n  // ---------------------------------------------\n  openerOpenHandler = (event: React.MouseEvent<HTMLElement>) => {\n    this.openContentContainer();\n    event.stopPropagation();\n  };\n  \n  openerCloseHandler = (event: React.MouseEvent<HTMLElement>) => {\n    // this.cancelHandler(this.state.value);\n    this.closeContentContainer();\n    event.stopPropagation();\n  };\n  \n  // ---------------------------------------------\n  // open / close content container\n  // ---------------------------------------------\n  openContentContainer() {\n    this.setState({\n      open: true,\n    });\n    \n    if (typeof this.props.onOpen === 'function') {\n      this.props.onOpen();\n    }\n  }\n  \n  closeContentContainer() {\n    //debugger;\n    this.unsubscribeOutboundClick();\n    this.setState({\n      open: false,\n    });\n    \n    if (typeof this.props.onClose === 'function') {\n      this.props.onClose();\n    }\n  }\n  \n  close = () => {\n    if (this.state.open) this.closeContentContainer();\n  };\n}","export {\n  DropDownAnchor as default,\n  DropDownAnchorButtonProps,\n  DropDownContentProps,\n} from './components';","module.exports = require(\"react-router\");","module.exports = require(\"moment-timezone\");","module.exports = require(\"express\");","import * as React from 'react';\n\nexport type Teardown = () => void;\nexport type Action<ContextState> = (contextState: ContextState) => (Teardown | void);\nexport type Subscription<ContextState> = (state: ContextState, prevState: ContextState) => void;\n\nexport type ContextState<T> = T & {\n  dispatch: (action: Action<ContextState<T>>) => Teardown;\n  subscribe: (subscription: (state: ContextState<T>, prevState: ContextState<T>) => void) => Teardown;\n}\n\nexport class Provider<ContextState, Props = {}, State = {}> extends React.Component<Props, State & {contextState: ContextState}> {\n  static displayName: string = 'Recontext.Provider';\n  \n  private teardowns: Set<Teardown> = new Set;\n  private subscriptions: Set<Subscription<ContextState>> = new Set;\n  \n  componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<State & {contextState: ContextState}>) {\n    if (prevState.contextState !== this.state.contextState && this.subscriptions.size > 0) {\n      for (const subscription of this.subscriptions) {\n        subscription(this.state.contextState, prevState.contextState);\n      }\n    }\n  }\n  \n  componentWillUnmount() {\n    for (const teardown of this.teardowns) {\n      teardown();\n    }\n    \n    this.teardowns.clear();\n    this.subscriptions.clear();\n  }\n  \n  protected setContextState = (stateOrProducer: Partial<ContextState> | ((contextState: ContextState) => Partial<ContextState>)) => {\n    this.setState({\n      contextState: Object.assign(\n        {},\n        this.state.contextState,\n        typeof stateOrProducer === 'function'\n          ? stateOrProducer(this.state.contextState)\n          : stateOrProducer,\n      ),\n    });\n  };\n  \n  protected dispatch: (action: Action<ContextState>) => Teardown = action => {\n    const teardown: Teardown | void = action(this.state.contextState);\n    \n    if (typeof teardown === 'function') {\n      let broken: boolean = false;\n      \n      this.teardowns.add(teardown);\n      \n      return () => {\n        if (!broken && this.teardowns.has(teardown)) {\n          teardown();\n          this.teardowns.delete(teardown);\n        }\n        broken = true;\n      };\n    } else {\n      return () => {\n        // blank teardown\n      };\n    }\n  };\n  \n  protected subscribe: (subscription: (state: ContextState, prevState: ContextState) => void) => Teardown = subscription => {\n    if (!this.subscriptions.has(subscription)) {\n      this.subscriptions.add(subscription);\n    }\n    \n    return () => {\n      this.subscriptions.delete(subscription);\n    };\n  };\n  \n  // tslint:disable\n  protected bindReducer: (getState?: (contextState: ContextState) => any) => (reducer: Function) => (setState: (result: any) => Partial<ContextState>) => any = getState => reducer => setState => {\n    return (...args: any[]) => {\n      const param: any = typeof getState === 'function'\n        ? getState(this.state.contextState)\n        : undefined;\n      const result: any = reducer(param)(...args);\n      this.setContextState(setState(result));\n    };\n  };\n  // tslint:enable\n}","module.exports = require(\"@fortawesome/free-solid-svg-icons\");","module.exports = require(\"@fortawesome/react-fontawesome\");","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"layout-module__content___H7la2\",\"nav\":\"layout-module__nav___3QLWQ\",\"body\":\"layout-module__body___TvziD\"};","module.exports = require(\"body-parser\");","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"SignButton-module__main___2gHJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"draft\":\"TimezoneChangeSelect-module__draft___1Gx62\",\"commit\":\"TimezoneChangeSelect-module__commit___3TeIO\"};","module.exports = require(\"cookie-parser\");","module.exports = require(\"intl-messageformat\");","module.exports = require(\"react-dom/server\");","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"LanguageChangeButton-module__main___2YBS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Source-module__main___x-sAd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"DropdownAnchor-sample-module__main___3XLdL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Modal-sample-module__main___3rY9r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"openModal-sample-module__main___3NiqY\"};","module.exports = require(\"react-intl/locale-data/en\");","module.exports = require(\"react-intl/locale-data/ko\");","import * as React from 'react';\n\nexport interface Props {\n\n}\n\ninterface InternalProps {\n\n}\n\ninterface State {\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'app.router-components.main';\n  \n  render() {\n    return (\n      <div>Main</div>\n    );\n  }\n}\n\nexport default Component as React.ComponentClass<Props>;","module.exports = \"<h1 id=\\\"import-multipleautocompletetextinput-from-ssenkit-autocomplete-text-input-\\\"><code>import { MultipleAutoCompleteTextInput } from &#39;ssenkit.autocomplete-text-input&#39;</code></h1>\\n<p><a href=\\\"http://api.jqueryui.com/autocomplete/\\\">http://api.jqueryui.com/autocomplete/</a>의 React Wrapping.</p>\\n<p>jQuery UI에 의해서 <code>componentDidMount()</code> 시점에 구성되므로 Props는 초기화에만 사용되고, 이후 변경에 의한 적용이 이루어지지 않는다.</p>\\n<p>하단에 펼쳐지는 Menu같은 경우 Document 최상위에 만들어지게 되므로, <code>menuClassName</code>은 CSS 계층을 적용할 수 없다.</p>\\n<p>Props</p>\\n<ul>\\n<li><code>className?: string</code> Input에 적용되는 CSS Class</li>\\n<li><code>menuClassName?: string</code> Menu에 적용되는 CSS Class</li>\\n<li><code>value?: string</code></li>\\n<li><code>onChange: (value: string) =&gt; void</code></li>\\n<li><code>minLength?: number = 2</code> 자동완성이 시작될 최소 문자수. Service 호출을 억제하는데 사용될 수 있다.</li>\\n<li><code>source: (request, response) =&gt; void</code> jQuery UI Autocomplete의 source 항목을 참조.</li>\\n<li><code>children?: JSX.Element = &lt;input/&gt;</code> 필요한 경우 <code>&lt;input/&gt;</code> tag를 Children Element로 넘겨서 Custom 할 수 있다.</li>\\n</ul>\\n\"","module.exports = \"import { MultipleAutoCompleteTextInput } from 'ssenkit.autocomplete-text-input';\\nimport * as React from 'react';\\nimport './MultipleAutoCompleteTextInput.sample.scss';\\n\\nconst availableTags: string[] = [\\n  'ActionScript',\\n  'AppleScript',\\n  'Asp',\\n  'BASIC',\\n  'C',\\n  'C++',\\n  'Clojure',\\n  'COBOL',\\n  'ColdFusion',\\n  'Erlang',\\n  'Fortran',\\n  'Groovy',\\n  'Haskell',\\n  'Java',\\n  'JavaScript',\\n  'Lisp',\\n  'Perl',\\n  'PHP',\\n  'Python',\\n  'Ruby',\\n  'Scala',\\n  'Scheme',\\n];\\n\\nfunction split(val: string): string[] {\\n  return val.split(/,\\\\s*/);\\n}\\n\\nfunction extractLast(term: string): string {\\n  return split(term).pop() || '';\\n}\\n\\nfunction source(request: {term: string}, response: (data: object) => void) {\\n  response($.ui.autocomplete.filter(availableTags, extractLast(request.term)));\\n}\\n\\ninterface State {\\n  text: string;\\n}\\n\\nexport default class extends React.PureComponent<{}, State> {\\n  state: State = {\\n    text: '',\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <MultipleAutoCompleteTextInput menuClassName=\\\"MultipleAutoCompleteTextInputSample-menu\\\"\\n                                       className=\\\"MultipleAutoCompleteTextInputSample-input\\\"\\n                                       value={this.state.text}\\n                                       minLength={0}\\n                                       source={source}\\n                                       onChange={this.onChange}\\n                                       onSubmit={this.onChange}/>\\n        <p>{this.state.text}</p>\\n      </div>\\n    );\\n  }\\n  \\n  onChange = (text: string) => {\\n    this.setState({text});\\n  };\\n}\"","module.exports = \"<h1 id=\\\"import-singleautocompletetextinput-from-ssenkit-autocomplete-text-input-\\\"><code>import { SingleAutoCompleteTextInput } from &#39;ssenkit.autocomplete-text-input&#39;</code></h1>\\n<p><a href=\\\"http://api.jqueryui.com/autocomplete/\\\">http://api.jqueryui.com/autocomplete/</a>의 React Wrapping.</p>\\n<p>jQuery UI에 의해서 <code>componentDidMount()</code> 시점에 구성되므로 Props는 초기화에만 사용되고, 이후 변경에 의한 적용이 이루어지지 않는다.</p>\\n<p>하단에 펼쳐지는 Menu같은 경우 Document 최상위에 만들어지게 되므로, <code>menuClassName</code>은 CSS 계층을 적용할 수 없다.</p>\\n<p>Props</p>\\n<ul>\\n<li><code>className?: string</code> Input에 적용되는 CSS Class</li>\\n<li><code>menuClassName?: string</code> Menu에 적용되는 CSS Class</li>\\n<li><code>value?: string</code></li>\\n<li><code>onChange: (value: string) =&gt; void</code></li>\\n<li><code>minLength?: number = 2</code> 자동완성이 시작될 최소 문자수. Service 호출을 억제하는데 사용될 수 있다.</li>\\n<li><code>source: (request, response) =&gt; void</code> jQuery UI Autocomplete의 source 항목을 참조.</li>\\n<li><code>children?: JSX.Element = &lt;input/&gt;</code> 필요한 경우 <code>&lt;input/&gt;</code> tag를 Children Element로 넘겨서 Custom 할 수 있다.</li>\\n</ul>\\n\"","module.exports = \"import { SingleAutoCompleteTextInput } from 'ssenkit.autocomplete-text-input';\\nimport * as React from 'react';\\nimport './SingleAutoCompleteTextInput.sample.scss';\\n\\nconst availableTags: string[] = [\\n  'ActionScript',\\n  'AppleScript',\\n  'Asp',\\n  'BASIC',\\n  'C',\\n  'C++',\\n  'Clojure',\\n  'COBOL',\\n  'ColdFusion',\\n  'Erlang',\\n  'Fortran',\\n  'Groovy',\\n  'Haskell',\\n  'Java',\\n  'JavaScript',\\n  'Lisp',\\n  'Perl',\\n  'PHP',\\n  'Python',\\n  'Ruby',\\n  'Scala',\\n  'Scheme',\\n];\\n\\nfunction split(val: string): string[] {\\n  return val.split(/,\\\\s*/);\\n}\\n\\nfunction extractLast(term: string): string {\\n  return split(term).pop() || '';\\n}\\n\\nfunction source(request: {term: string}, response: (data: object) => void) {\\n  response($.ui.autocomplete.filter(availableTags, extractLast(request.term)));\\n}\\n\\ninterface State {\\n  text: string;\\n}\\n\\nexport default class extends React.PureComponent<{}, State> {\\n  state: State = {\\n    text: '',\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <SingleAutoCompleteTextInput menuClassName=\\\"SingleAutoCompleteTextInputSample-menu\\\"\\n                                     className=\\\"SingleAutoCompleteTextInputSample-input\\\"\\n                                     value={this.state.text}\\n                                     minLength={0}\\n                                     source={source}\\n                                     onChange={this.onChange}\\n                                     onSubmit={this.onChange}/>\\n        <p>{this.state.text}</p>\\n      </div>\\n    );\\n  }\\n  \\n  onChange = (text: string) => {\\n    console.log('SingleAutoCompleteTextInput.sample.tsx..onChange()', text);\\n    this.setState({text});\\n  };\\n}\"","module.exports = \"<h1 id=\\\"import-monthselector-from-ssenkit-date-select-\\\"><code>import { MonthSelector } from &#39;ssenkit.date-select&#39;</code></h1>\\n<p>년/월을 선택한다.</p>\\n<p>Props</p>\\n<ul>\\n<li><code>date: moment.Moment | Date</code></li>\\n<li><code>onChange: (year:number, month:number) =&gt; void</code></li>\\n<li><code>disableBefore?: moment.Moment | Date</code></li>\\n<li><code>disableAfter?: moment.Moment | Date</code></li>\\n</ul>\\n\"","module.exports = \"import { MonthSelector } from 'ssenkit.date-select';\\nimport * as moment from 'moment';\\nimport * as React from 'react';\\n\\ninterface State {\\n  date: Date;\\n  disableBefore: moment.Moment | Date;\\n  disableAfter: moment.Moment | Date;\\n}\\n\\nexport default class extends React.PureComponent<{}, State> {\\n  state: State = {\\n    date: new Date,\\n    disableBefore: moment().subtract(10, 'years'),\\n    disableAfter: moment().add(5, 'years'),\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <MonthSelector date={this.state.date}\\n                       disableBefore={this.state.disableBefore}\\n                       disableAfter={this.state.disableAfter}\\n                       onChange={this.onChange}/>\\n        <span>Selected: {moment(this.state.date).format('YYYY-MM')}</span>\\n      </div>\\n    );\\n  }\\n  \\n  onChange = (year: number, month: number) => {\\n    this.setState({\\n      date: moment(this.state.date).clone()\\n        .year(year)\\n        .month(month - 1)\\n        .toDate(),\\n    });\\n  };\\n}\"","module.exports = \"<h1 id=\\\"import-dateinput-from-ssenkit-date-select-\\\"><code>import { DateInput } from &#39;ssenkit.date-select&#39;</code></h1>\\n<p>날짜를 입력하는 Input Text</p>\\n<p>입력 가능한 포맷은 아래와 같고, 공백은 제거되어서 판단된다. (즉, <code>YYYY - MM - DD</code>로 입력이 되어도 공백이 제거되어서 <code>YYYY-MM-DD</code>로 판정됨)</p>\\n<ul>\\n<li><code>YYYY-MM-DD</code></li>\\n<li><code>YYYY.MM.DD</code></li>\\n<li><code>YYYYMMDD</code></li>\\n</ul>\\n<p>Props</p>\\n<ul>\\n<li><code>date: moment.Moment | Date</code></li>\\n<li><code>onChange: (date: Date) =&gt; void</code></li>\\n<li><code>disableBefore?: moment.Moment | Date</code></li>\\n<li><code>disableAfter?: moment.Moment | Date</code></li>\\n</ul>\\n\"","module.exports = \"import { DateInput } from 'ssenkit.date-select';\\nimport * as moment from 'moment';\\nimport * as React from 'react';\\n\\ninterface State {\\n  date: Date;\\n}\\n\\nexport default class extends React.PureComponent<{}, State> {\\n  state: State = {\\n    date: new Date,\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <DateInput date={this.state.date}\\n                   onChange={this.onChange}/>\\n        <span>Selected: {moment(this.state.date).format('YYYY-MM-DD HH:mm:ss')}</span>\\n      </div>\\n    );\\n  }\\n  \\n  onChange = (date: Date) => {\\n    this.setState({\\n      date\\n    });\\n  };\\n}\"","module.exports = \"<h1 id=\\\"import-timeinput-from-ssenkit-date-select-\\\"><code>import { TimeInput } from &#39;ssenkit.date-select&#39;</code></h1>\\n<p>시간 입력하는 Input Text</p>\\n<p>Props</p>\\n<ul>\\n<li><code>time: string // of &#39;HH:mm:ss&#39;</code></li>\\n<li><code>onChange: (time: string) =&gt; void</code></li>\\n</ul>\\n\"","module.exports = \"import { TimeInput } from 'ssenkit.date-select';\\nimport * as moment from 'moment';\\nimport * as React from 'react';\\n\\ninterface State {\\n  time: string;\\n}\\n\\nexport default class extends React.PureComponent<{}, State> {\\n  state: State = {\\n    time: moment().format('HH:mm:ss'),\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <TimeInput time={this.state.time}\\n                   onChange={this.onChange}/>\\n        <span>Selected: {this.state.time}</span>\\n      </div>\\n    );\\n  }\\n  \\n  onChange = (time: string) => {\\n    this.setState({\\n      time\\n    });\\n  };\\n}\"","module.exports = \"<h1 id=\\\"import-datetimeinput-from-ssenkit-date-select-\\\"><code>import { DateTimeInput } from &#39;ssenkit.date-select&#39;</code></h1>\\n<p>날짜와 시간을 입력하는 Input Text</p>\\n<p>입력 가능한 포맷은 아래와 같고, 공백은 제거되어서 판단된다. (즉, <code>YYYY - MM - DD   HH:mm:ss</code>로 입력이 되어도 공백이 제거되어서 <code>YYYY-MM-DD HH:mm:ss</code>로 판정됨)</p>\\n<ul>\\n<li><code>YYYY-MM-DD HH:mm:ss</code></li>\\n<li><code>YYYY.MM.DD HH:mm:ss</code></li>\\n<li><code>YYYYMMDD HH:mm:ss</code></li>\\n</ul>\\n<p>Props</p>\\n<ul>\\n<li><code>date: moment.Moment | Date</code></li>\\n<li><code>onChange: (date: Date) =&gt; void</code></li>\\n<li><code>disableBefore?: moment.Moment | Date</code></li>\\n<li><code>disableAfter?: moment.Moment | Date</code></li>\\n</ul>\\n\"","module.exports = \"import * as moment from 'moment';\\nimport * as React from 'react';\\nimport { DateTimeInput } from 'ssenkit.date-select';\\n\\ninterface State {\\n  datetime: Date;\\n  disableBefore: moment.Moment | Date;\\n  disableAfter: moment.Moment | Date;\\n}\\n\\nexport default class extends React.PureComponent<{}, State> {\\n  state: State = {\\n    datetime: new Date,\\n    disableBefore: moment().subtract(10, 'days'),\\n    disableAfter: moment().add(10, 'days'),\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <DateTimeInput date={this.state.datetime}\\n                       disableBefore={this.state.disableBefore}\\n                       disableAfter={this.state.disableAfter}\\n                       onChange={this.onChange}/>\\n        <span>Selected: {moment(this.state.datetime).format('YYYY-MM-DD HH:mm:ss')}</span>\\n        <span>{' '}</span>\\n        <span>Disable: {moment(this.state.disableBefore).format('YYYY-MM-DD HH:mm:ss')} / {moment(this.state.disableAfter).format('YYYY-MM-DD HH:mm:ss')}</span>\\n      </div>\\n    );\\n  }\\n  \\n  onChange = (datetime: Date) => {\\n    this.setState({\\n      datetime\\n    });\\n  };\\n}\"","module.exports = \"<h1 id=\\\"import-dateselector-from-ssenkit-date-select-\\\"><code>import { DateSelector } from &#39;ssenkit.date-select&#39;</code></h1>\\n<p>날짜를 선택한다.</p>\\n<p>Props</p>\\n<ul>\\n<li><code>date: moment.Moment | Date</code></li>\\n<li><code>onChange: (date: Date) =&gt; void</code></li>\\n<li><code>disableBefore?: moment.Moment | Date</code></li>\\n<li><code>disableAfter?: moment.Moment | Date</code></li>\\n</ul>\\n\"","module.exports = \"import { DateSelector } from 'ssenkit.date-select';\\nimport * as React from 'react';\\nimport * as moment from 'moment';\\n\\ninterface State {\\n  date: Date;\\n}\\n\\nexport default class extends React.PureComponent<{}, State> {\\n  state: State = {\\n    date: new Date,\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <DateSelector date={this.state.date}\\n                      onChange={this.onChange}/>\\n        <span>Selected: {moment(this.state.date).format('YYYY-MM-DD HH:mm:ss')}</span>\\n      </div>\\n    );\\n  }\\n  \\n  onChange = (date: Date) => {\\n    this.setState({\\n      date\\n    });\\n  };\\n}\"","module.exports = \"<h1 id=\\\"import-datetimeselector-from-ssenkit-date-select-\\\"><code>import { DateTimeSelector } from &#39;ssenkit.date-select&#39;</code></h1>\\n<p>날짜와 시간을 선택한다.</p>\\n<p>Props</p>\\n<ul>\\n<li><code>date: moment.Moment | Date</code></li>\\n<li><code>onChange: (date: Date) =&gt; void</code></li>\\n<li><code>disableBefore?: moment.Moment | Date</code></li>\\n<li><code>disableAfter?: moment.Moment | Date</code></li>\\n</ul>\\n\"","module.exports = \"import { DateTimeSelector } from 'ssenkit.date-select';\\nimport * as React from 'react';\\nimport * as moment from 'moment';\\n\\ninterface State {\\n  date: Date;\\n}\\n\\nexport default class extends React.PureComponent<{}, State> {\\n  state: State = {\\n    date: new Date,\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <DateTimeSelector date={this.state.date}\\n                          onChange={this.onChange}/>\\n        <span>Selected: {moment(this.state.date).format('YYYY-MM-DD HH:mm:ss')}</span>\\n      </div>\\n    );\\n  }\\n  \\n  onChange = (date: Date) => {\\n    this.setState({\\n      date\\n    });\\n  };\\n}\"","module.exports = \"<h1 id=\\\"import-fromtodatetimeselector-from-ssenkit-date-select-\\\"><code>import { FromToDateTimeSelector } from &#39;ssenkit.date-select&#39;</code></h1>\\n<p>From/To 기간을 입력할 수 있는 Date Selector</p>\\n<p>Props</p>\\n<ul>\\n<li><code>fromTo: FromTo</code></li>\\n<li><code>onChange: (fromTo: FromTo) =&gt; void</code></li>\\n<li><code>disableBefore?: moment.Moment | Date</code></li>\\n<li><code>disableAfter?: moment.Moment | Date</code></li>\\n</ul>\\n\"","module.exports = \"import { FromTo, FromToDateTimeSelector } from 'ssenkit.date-select';\\nimport * as moment from 'moment';\\nimport * as React from 'react';\\n\\ninterface State {\\n  fromTo: FromTo;\\n}\\n\\nexport default class extends React.PureComponent<{}, State> {\\n  state: State = {\\n    fromTo: {\\n      from: moment().subtract(4, 'days').startOf('day').toDate(),\\n      to: new Date(),\\n    },\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <FromToDateTimeSelector fromTo={this.state.fromTo} onChange={this.onChange}/>\\n        <span>Selected: {moment(this.state.fromTo.from).format('YYYY-MM-DD HH:mm:ss')} ~ {moment(this.state.fromTo.to).format('YYYY-MM-DD HH:mm:ss')}</span>\\n      </div>\\n    );\\n  }\\n  \\n  onChange = (fromTo: FromTo) => {\\n    this.setState({fromTo});\\n  };\\n}\"","module.exports = \"<h1 id=\\\"import-fromtodatetimedropdownselector-from-ssenkit-date-select-\\\"><code>import { FromToDateTimeDropDownSelector } from &#39;ssenkit.date-select&#39;</code></h1>\\n<p>From/To 기간을 입력할 수 있는 Date Selector</p>\\n<p>Props</p>\\n<ul>\\n<li><code>fromTo: FromTo</code></li>\\n<li><code>onChange: (fromTo: FromTo) =&gt; void</code></li>\\n<li><code>disableBefore?: moment.Moment | Date</code></li>\\n<li><code>disableAfter?: moment.Moment | Date</code></li>\\n<li><code>button?: ReactElement&lt;FromToDateTimeDropDownSelectorButtonProps&gt;</code></li>\\n<li><code>useAlternatePosition?: boolean = true</code></li>\\n</ul>\\n\"","module.exports = \"import { FromTo, FromToDateTimeDropDownSelector } from 'ssenkit.date-select';\\nimport * as moment from 'moment';\\nimport * as React from 'react';\\n\\ninterface State {\\n  fromTo: FromTo;\\n}\\n\\nexport default class extends React.PureComponent<{}, State> {\\n  state: State = {\\n    fromTo: {\\n      from: moment().subtract(4, 'days').startOf('day').toDate(),\\n      to: new Date(),\\n    },\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <FromToDateTimeDropDownSelector fromTo={this.state.fromTo} onChange={this.onChange}/>\\n        <span>Selected: {moment(this.state.fromTo.from).format('YYYY-MM-DD HH:mm:ss')} ~ {moment(this.state.fromTo.to).format('YYYY-MM-DD HH:mm:ss')}</span>\\n      </div>\\n    );\\n  }\\n  \\n  onChange = (fromTo: FromTo) => {\\n    this.setState({fromTo});\\n  };\\n}\"","module.exports = \"<h1 id=\\\"import-daterangeselector-from-ssenkit-date-select-\\\"><code>import { DateRangeSelector } from &#39;ssenkit.date-select&#39;</code></h1>\\n<p>기간을 선택한다.</p>\\n<p>Child Element(<code>props.children</code>)을 반드시 입력해줘야 한다.\\nChild Element는 우측 탭 선택시의 &quot;미리 지정된 기간&quot;의 구현에 사용된다.</p>\\n<p>Props</p>\\n<ul>\\n<li><code>dateRange: DateRange</code></li>\\n<li><code>disableBefore?: moment.Moment | Date</code></li>\\n<li><code>disableAfter?: moment.Moment | Date</code></li>\\n<li><code>onChange: (dateRange: DateRange) =&gt; void</code></li>\\n<li><code>children: ReactElement&lt;{dateRange: DateRange, onSelect: (dateRange: DateRange) =&gt; void}&gt;</code></li>\\n</ul>\\n\"","module.exports = \"import * as moment from 'moment';\\nimport * as React from 'react';\\nimport { DateRange, DateRangeSelector } from 'ssenkit.date-select';\\n\\ninterface State {\\n  progressiveDateRange: DateRange | null;\\n  dateRange: DateRange;\\n  disableBefore?: moment.Moment | Date;\\n  disableAfter?: moment.Moment | Date;\\n}\\n\\nexport default class extends React.PureComponent<{}, State> {\\n  state: State = {\\n    progressiveDateRange: null,\\n    dateRange: {\\n      from: moment().subtract(3, 'days').toDate(),\\n    },\\n    disableBefore: moment().subtract(4, 'years'),\\n    disableAfter: moment().add(1, 'years'),\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <DateRangeSelector dateRange={this.state.dateRange}\\n                           disableBefore={this.state.disableBefore}\\n                           disableAfter={this.state.disableAfter}\\n                           onChange={this.onChange}\\n                           onCancel={this.onCancel}\\n                           onComplete={this.onComplete}/>\\n        <div>\\n          Progressive: {JSON.stringify(this.state.progressiveDateRange)}\\n        </div>\\n        <div>\\n          Selected: {JSON.stringify(this.state.dateRange)}\\n        </div>\\n      </div>\\n    );\\n  }\\n  \\n  onChange = (dateRange: DateRange) => {\\n    this.setState({\\n      progressiveDateRange: dateRange,\\n    });\\n  };\\n  \\n  onComplete = (dateRange: DateRange) => {\\n    this.setState({\\n      dateRange,\\n      progressiveDateRange: null,\\n    });\\n  };\\n  \\n  onCancel = () => {\\n    this.setState({\\n      progressiveDateRange: null,\\n    });\\n  };\\n}\"","module.exports = \"<h1 id=\\\"import-daterangedropdownselector-from-ssenkit-date-select-\\\"><code>import { DateRangeDropDownSelector } from &#39;ssenkit.date-select&#39;</code></h1>\\n<p>Drop Down 형태로 기간을 선택한다.</p>\\n<p>Props</p>\\n<ul>\\n<li><code>dateRange: DateRange</code></li>\\n<li><code>disableBefore?: moment.Moment | Date</code></li>\\n<li><code>disableAfter?: moment.Moment | Date</code></li>\\n<li><code>onChange: (dateRange: DateRange) =&gt; void</code></li>\\n<li><code>children: ReactElement&lt;{dateRange: DateRange, onSelect: (dateRange: DateRange) =&gt; void}&gt;</code></li>\\n<li><code>button?: ReactElement&lt;DateRangeDropDownSelectorButtonProps&gt;</code></li>\\n<li><code>useAlternatePosition?: boolean = true</code></li>\\n</ul>\\n\"","module.exports = \"import * as moment from 'moment';\\nimport * as React from 'react';\\nimport { DateRange, DateRangeDropDownSelector } from 'ssenkit.date-select';\\n\\ninterface State {\\n  dateRange: DateRange;\\n  disableBefore?: moment.Moment | Date;\\n  disableAfter?: moment.Moment | Date;\\n}\\n\\nexport default class extends React.PureComponent<{}, State> {\\n  state: State = {\\n    dateRange: {\\n      from: moment().subtract(3, 'days').toDate(),\\n    },\\n    disableBefore: moment().subtract(4, 'years'),\\n    disableAfter: moment().add(1, 'years'),\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <DateRangeDropDownSelector dateRange={this.state.dateRange}\\n                                   disableBefore={this.state.disableBefore}\\n                                   disableAfter={this.state.disableAfter}\\n                                   onChange={this.onChange}/>\\n        <span>Selected: {JSON.stringify(this.state.dateRange)}</span>\\n      </div>\\n    );\\n  }\\n  \\n  onChange = (dateRange: DateRange) => {\\n    this.setState({dateRange});\\n  };\\n}\"","module.exports = \"<h1 id=\\\"import-configprovider-from-ssenkit-date-select-\\\"><code>import { ConfigProvider } from &#39;ssenkit.date-select&#39;</code></h1>\\n<p>Date Selector들의 설정을 변경할 수 있다.</p>\\n<p>React 16.3 이후의 Context API를 사용한다.</p>\\n\"","module.exports = \"import * as React from 'react';\\nimport * as moment from 'moment';\\nimport { Config, ConfigProvider, DateSelector } from 'ssenkit.date-select';\\n\\nconst ko: Partial<Config> = {\\n  monthSelectorYearLabelFunction: year => year.toString() + '년',\\n  monthSelectorMonthLabelFunction: month => month.toString() + '월',\\n  dateSelectorDayLabelFunction: (day: 'sun' | 'mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat') => {\\n    switch (day) {\\n      case 'sun':\\n        return '일';\\n      case 'mon':\\n        return '월';\\n      case 'tue':\\n        return '화';\\n      case 'wed':\\n        return '수';\\n      case 'thu':\\n        return '목';\\n      case 'fri':\\n        return '금';\\n      case 'sat':\\n        return '토';\\n      default:\\n        throw new Error('Unknown day');\\n    }\\n  },\\n  dateSelectorPrevMonthButton: <button>이전</button>,\\n  dateSelectorNextMonthButton: <button>다음</button>,\\n};\\n\\nexport interface Props {\\n}\\n\\ninterface InternalProps {\\n}\\n\\ninterface State {\\n  date: Date;\\n}\\n\\nclass Component extends React.PureComponent<Props & InternalProps, State> {\\n  static displayName: string = 'ConfigProvider.sample';\\n  \\n  state: State = {\\n    date: new Date,\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <div>\\n          <DateSelector date={this.state.date}\\n                        onChange={this.onChange}/>\\n        </div>\\n        <ConfigProvider config={ko}>\\n          <div>\\n            <DateSelector date={this.state.date}\\n                          onChange={this.onChange}/>\\n          </div>\\n        </ConfigProvider>\\n        \\n        <span>Selected: {moment(this.state.date).format('YYYY-MM-DD HH:mm:ss')}</span>\\n      </div>\\n    );\\n  }\\n  \\n  onChange = (date: Date) => {\\n    this.setState({\\n      date\\n    });\\n  };\\n}\\n\\nexport default Component as React.ComponentType<Props>;\"","module.exports = \"<p>Content를 Drop Down 형태로 표현하기 위한 Anchor Component.</p>\\n<p>Props</p>\\n<ul>\\n<li><code>className?: string</code></li>\\n<li><code>button: React.ReactElement&lt;AnchorButtonProps&gt;</code></li>\\n<li><code>useAlternatePosition?: boolean = true</code> Content가 화면 바깥으로 나가는 경우 반대 위치로 이동시키게 한다.</li>\\n<li><code>useOutboundClick?: boolean = false</code> 외부 영역을 클릭했을때 닫히게 한다.</li>\\n</ul>\\n\"","module.exports = \"import * as React from 'react';\\nimport DropdownAnchor, { DropDownAnchorButtonProps, DropDownContentProps } from 'ssenkit.dropdown-anchor';\\nimport * as styles from './DropdownAnchor.sample.module.scss';\\n\\nclass Button extends React.PureComponent<DropDownAnchorButtonProps> {\\n  render() {\\n    return (\\n      <button className=\\\"btn white dropdown-toggle\\\" {...this.props}>\\n        {this.props['aria-expanded'] ? 'OPENED' : 'CLOSED'}\\n      </button>\\n    );\\n  }\\n}\\n\\nclass Content extends React.PureComponent<DropDownContentProps> {\\n  render() {\\n    return (\\n      <div className={styles.main}>\\n        <p>Hello...</p>\\n        <p>\\n          <button onClick={() => this.props.close && this.props.close()}>\\n            Close Dropdown\\n          </button>\\n        </p>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default class extends React.PureComponent<{}, {}> {\\n  render() {\\n    return (\\n      <div>\\n        <DropdownAnchor button={<Button/>} useOutboundClick={true}>\\n          <Content/>\\n        </DropdownAnchor>\\n      </div>\\n    );\\n  }\\n}\"","module.exports = \"<p>React 16의 <code>ReactDOM.createPortal()</code>을 사용한다.</p>\\n<pre><code>&lt;Modal&gt;\\n  &lt;div&gt;\\n    Content\\n  &lt;/div&gt;\\n&lt;/Modal&gt;</code></pre><p>위와 같이 화면에 넣어주면 <code>&lt;div&gt;</code> 부분이 Modal로 뜨게 된다.</p>\\n<h2 id=\\\"props\\\">Props</h2>\\n<ul>\\n<li><code>container?: string</code> 입력하지 않으면 Modal을 <code>document.body</code>에 띄우게 된다. 필요한 경우 <code>&lt;Modal container=&quot;#modal-root&quot;&gt;</code>와 같이 입력해서 Modal을 <code>#modal-root</code>에 띄울 수 있다.</li>\\n<li><code>dimStyle?: React.CSSProperties</code> 후방 DIM의 스타일을 바꿀 수 있다.</li>\\n</ul>\\n\"","module.exports = \"import * as React from 'react';\\nimport Modal, { ModalContentProps } from 'ssenkit.modal';\\nimport * as styles from './Modal.sample.module.scss';\\n\\nconst Content: React.StatelessComponent<ModalContentProps> = ({closeModal}: ModalContentProps) => {\\n  return (\\n    <div className={styles.main}>\\n      <h1>HELLO?</h1>\\n      <button onClick={() => closeModal && closeModal()}>Close Modal</button>\\n    </div>\\n  );\\n};\\n\\nexport interface Props {\\n\\n}\\n\\ninterface InternalProps {\\n\\n}\\n\\ninterface State {\\n  modal: React.ReactElement<{}> | null,\\n}\\n\\nclass Component extends React.PureComponent<Props & InternalProps, State> {\\n  static displayName: string = 'Modal.sample';\\n  \\n  state: State = {\\n    modal: null,\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <button onClick={this.openModal}>Open Modal</button>\\n        {this.state.modal}\\n      </div>\\n    );\\n  }\\n  \\n  openModal = () => {\\n    this.setState({\\n      modal: (\\n        <Modal onClose={this.closeModal}>\\n          <Content/>\\n        </Modal>\\n      ),\\n    });\\n  };\\n  \\n  closeModal = () => {\\n    this.setState({\\n      modal: null,\\n    });\\n  };\\n}\\n\\nexport default Component as React.ComponentType<Props>;\"","module.exports = \"<p>React 16의 <code>ReactDOM.createPortal()</code>을 사용하지 않는다.</p>\\n<p><code>openModal(&lt;div/&gt;)</code>와 같이 간소하게 Modal을 열 수 있다는 장점이 있지만,\\nReact 16의 <code>ReactDOM.createPortal()</code>을 사용한 <code>&lt;Modal/&gt;</code>과 다르게 Context 연결이 되지 않는다.</p>\\n<p>MobX나 React-Intl 등 React Context를 기반으로 하는 기술들이 연결되는 Modal 이라면\\n<code>openModal()</code>을 사용하면 안된다.</p>\\n<h2 id=\\\"options\\\">Options</h2>\\n<ul>\\n<li><code>container?: string</code> 입력하지 않으면 Modal을 <code>document.body</code>에 띄우게 된다. 필요한 경우 <code>&lt;Modal container=&quot;#modal-root&quot;&gt;</code>와 같이 입력해서 Modal을 <code>#modal-root</code>에 띄울 수 있다.</li>\\n<li><code>dimStyle?: React.CSSProperties</code> 후방 DIM의 스타일을 바꿀 수 있다.</li>\\n</ul>\\n\"","module.exports = \"import { ModalContentProps, openModal } from 'ssenkit.modal';\\nimport * as React from 'react';\\nimport * as styles from './openModal.sample.module.scss';\\n\\nconst Content: React.StatelessComponent<ModalContentProps> = ({closeModal}) => {\\n  return (\\n    <div className={styles.main}>\\n      <h1>HELLO?</h1>\\n      <button onClick={() => closeModal && closeModal()}>Close Modal</button>\\n    </div>\\n  );\\n};\\n\\nexport interface Props {\\n\\n}\\n\\ninterface InternalProps {\\n\\n}\\n\\ninterface State {\\n}\\n\\nclass Component extends React.PureComponent<Props & InternalProps, State> {\\n  static displayName: string = 'openModal.sample';\\n  \\n  render() {\\n    return (\\n      <div>\\n        <button onClick={this.open}>Open Modal</button>\\n      </div>\\n    );\\n  }\\n  \\n  open = () => {\\n    openModal(<Content/>);\\n  };\\n}\\n\\nexport default Component as React.ComponentType<Props>;\"","module.exports = \"<p>입력 제한 기능을 가지는 Text Input</p>\\n<h2 id=\\\"props\\\">Props</h2>\\n<ul>\\n<li><code>value: string</code></li>\\n<li><code>onChange: (value: string) =&gt; void</code></li>\\n<li><code>onSubmit: (value: string) =&gt; void</code> Enter Key에 의해서 Submit이 일어날때 발생한다.</li>\\n<li><code>availableCharacterPattern: RegExp</code> 입력 가능한 Character 범위를 정규식으로 입력한다. <code>[a-b]{2,3}</code>과 같이 Range는 지정하지 않는다. 허용 가능한 Character의 범위이지, 허용 가능한 문장을 체크하지 않는다.</li>\\n<li><code>children?: JSX.Element = &lt;input type=&quot;text&quot;/&gt;</code> 필요한 경우 <code>&lt;input/&gt;</code>을 직접 입력할 수 있다.<ul>\\n<li>가능한 <code>&lt;input/&gt;</code>에 대한 스타일링 용도로만 사용하는게 좋다. <code>defaultValue</code>, <code>onChange</code>, <code>onKeyPress</code>, <code>onKeyDown</code>와 같은 기능은 내부적으로 덮어쓰기 때문에 무시된다.</li>\\n</ul>\\n</li>\\n</ul>\\n\"","module.exports = \"import * as React from 'react';\\nimport RestrictedTextInput from 'ssenkit.restricted-text-input';\\n\\nexport interface Props {\\n\\n}\\n\\ninterface InternalProps {\\n\\n}\\n\\ninterface State {\\n  text: string;\\n}\\n\\nclass Component extends React.PureComponent<Props & InternalProps, State> {\\n  static displayName: string = 'Sample.sample';\\n  \\n  state: State = {\\n    text: '',\\n  };\\n  \\n  render() {\\n    return (\\n      <div>\\n        <RestrictedTextInput availableCharacterPattern={/[abcd0-9]/}\\n                             value={this.state.text}\\n                             onChange={this.onChange}\\n                             onSubmit={this.onSubmit}/>\\n        <hr/>\\n        {this.state.text}\\n      </div>\\n    );\\n  }\\n  \\n  onChange = (text: string) => {\\n    this.setState({\\n      text,\\n    });\\n  };\\n  \\n  onSubmit = (text: string) => {\\n    this.setState({\\n      text,\\n    });\\n  };\\n}\\n\\nexport default Component as React.ComponentType<Props>;\"","module.exports = \"<p>입력 제한 기능을 가지는 Text Input</p>\\n<h2 id=\\\"props\\\">Props</h2>\\n<ul>\\n<li><code>value: string</code></li>\\n<li><code>onChange: (value: string) =&gt; void</code></li>\\n<li><code>onSubmit: (value: string) =&gt; void</code> Enter Key에 의해서 Submit이 일어날때 발생한다.</li>\\n<li><code>availableCharacterPattern: RegExp</code> 입력 가능한 Character 범위를 정규식으로 입력한다. <code>[a-b]{2,3}</code>과 같이 Range는 지정하지 않는다. 허용 가능한 Character의 범위이지, 허용 가능한 문장을 체크하지 않는다.</li>\\n<li><code>children?: JSX.Element = &lt;input type=&quot;text&quot;/&gt;</code> 필요한 경우 <code>&lt;input/&gt;</code>을 직접 입력할 수 있다.<ul>\\n<li>가능한 <code>&lt;input/&gt;</code>에 대한 스타일링 용도로만 사용하는게 좋다. <code>defaultValue</code>, <code>onChange</code>, <code>onKeyPress</code>, <code>onKeyDown</code>와 같은 기능은 내부적으로 덮어쓰기 때문에 무시된다.</li>\\n</ul>\\n</li>\\n</ul>\\n\"","module.exports = \"import produce from 'immer';\\nimport * as React from 'react';\\nimport * as Recontext from 'recontext';\\nimport { init } from './actions';\\nimport { Test, updateX, updateY } from './data';\\n\\ntype ContextState = Recontext.ContextState<{\\n  a: number;\\n  b: number;\\n  c: number;\\n  updateA: (a: number) => void;\\n  updateB: (b: number) => void;\\n  test: Test;\\n  updateX: (x: number) => void;\\n  updateY: (y: number) => void;\\n}>;\\n\\n// @ts-ignore\\nconst {Provider: ReactProvider, Consumer} = React.createContext<ContextState>();\\n\\nclass Provider extends Recontext.Provider<ContextState> {\\n  constructor(props: {}) {\\n    super(props);\\n    this.state = {\\n      contextState: {\\n        a: 1,\\n        b: 2,\\n        c: 3,\\n        updateA: this.updateA,\\n        updateB: this.updateB,\\n        dispatch: this.dispatch,\\n        subscribe: this.subscribe,\\n        test: {\\n          x: 10,\\n          y: 20,\\n          z: 30,\\n        },\\n        updateX: this.bindReducer(({test}) => test)(updateX)(test => ({test})),\\n        updateY: this.bindReducer(({test}) => test)(updateY)(test => ({test})),\\n      },\\n    };\\n  }\\n  \\n  render() {\\n    return (\\n      <ReactProvider value={this.state.contextState}>\\n        {this.props.children}\\n      </ReactProvider>\\n    );\\n  }\\n  \\n  componentDidMount() {\\n    this.dispatch(init());\\n  }\\n  \\n  updateA = (a: number) => {\\n    this.setContextState(({b}) => {\\n      return {\\n        a,\\n        c: a + b,\\n      };\\n    });\\n  };\\n  \\n  updateB = (b: number) => {\\n    this.setState({\\n      contextState: produce(this.state.contextState, draft => {\\n        draft.b = b;\\n        draft.c = draft.a + b;\\n      }),\\n    });\\n  };\\n}\\n\\nfunction withConsumer<Props>(Component: React.ComponentType<Props>): React.ComponentType<Props & ContextState> {\\n  return React.forwardRef((props, ref) => (\\n    <Consumer>\\n      {\\n        state => <Component {...state} {...props} ref={ref}/>\\n      }\\n    </Consumer>\\n  ));\\n}\\n\\nexport {\\n  Provider,\\n  Consumer,\\n  withConsumer,\\n  ContextState,\\n};\"","module.exports = \"import { ContextState } from '../context';\\n\\nexport default () => ({b, updateB}: ContextState) => {\\n  updateB(b + 1);\\n}\"","module.exports = \"import { ContextState } from '../context';\\n\\nexport default () => ({subscribe}: ContextState) => {\\n  const unsubscribe: () => void = subscribe(({a}, prevState) => {\\n    if (a !== prevState.a) {\\n      console.log('init.ts..()', a, prevState.a);\\n    }\\n  });\\n  \\n  return () => {\\n    console.log('init.ts..() unsubscribe...');\\n    unsubscribe();\\n  };\\n}\"","module.exports = \"import * as React from 'react';\\nimport { Consumer, ContextState } from '../context';\\n\\nexport interface Props {\\n}\\n\\ninterface InternalProps {\\n}\\n\\ninterface State {\\n}\\n\\nclass Component extends React.PureComponent<Props & InternalProps, State> {\\n  static displayName: string = 'Print';\\n  \\n  render() {\\n    return (\\n      <Consumer>\\n        {\\n          ({a, b, c, test}: ContextState) => (\\n            <div>\\n              <p>\\n                {a} + {b} = {c}\\n              </p>\\n              <p>\\n                {test.x} + {test.y} = {test.z}\\n              </p>\\n            </div>\\n          )\\n        }\\n      </Consumer>\\n    );\\n  }\\n}\\n\\nexport default Component as React.ComponentType<Props>;\"","module.exports = \"import * as React from 'react';\\nimport { ContextState, withConsumer } from '../context';\\n\\nexport interface Props {\\n}\\n\\ninterface InternalProps extends ContextState {\\n}\\n\\ninterface State {\\n}\\n\\nclass Component extends React.PureComponent<Props & InternalProps, State> {\\n  static displayName: string = 'UpdateA';\\n  \\n  render() {\\n    return (\\n      <div>\\n        <button onClick={this.update}>\\n          Update A\\n        </button>\\n      </div>\\n    );\\n  }\\n  \\n  update = () => {\\n    this.props.updateA(Math.floor(Math.random() * 10000));\\n  };\\n}\\n\\nexport default withConsumer<Props>(Component) as React.ComponentType<Props>;\"","module.exports = \"import * as React from 'react';\\nimport { updateB } from '../actions';\\nimport { ContextState, withConsumer } from '../context';\\n\\nexport interface Props {\\n}\\n\\ninterface InternalProps extends ContextState {\\n}\\n\\ninterface State {\\n}\\n\\nclass Component extends React.PureComponent<Props & InternalProps, State> {\\n  static displayName: string = 'UpdateB';\\n  \\n  render() {\\n    return (\\n      <div>\\n        <button onClick={this.update}>\\n          Update B\\n        </button>\\n      </div>\\n    );\\n  }\\n  \\n  update = () => {\\n    this.props.dispatch(updateB());\\n  };\\n}\\n\\nexport default withConsumer<Props>(Component) as React.ComponentType<Props>;\"","module.exports = \"import * as React from 'react';\\nimport { ContextState, withConsumer } from '../context';\\n\\nexport interface Props {\\n}\\n\\ninterface InternalProps extends ContextState {\\n}\\n\\ninterface State {\\n}\\n\\nclass Component extends React.PureComponent<Props & InternalProps, State> {\\n  static displayName: string = 'UpdateX';\\n  \\n  render() {\\n    return (\\n      <div>\\n        <button onClick={this.update}>\\n          Update X\\n        </button>\\n      </div>\\n    );\\n  }\\n  \\n  update = () => {\\n    this.props.updateX(Math.floor(Math.random() * 10000));\\n  };\\n}\\n\\nexport default withConsumer<Props>(Component) as React.ComponentType<Props>;\"","module.exports = \"import * as React from 'react';\\nimport { ContextState, withConsumer } from '../context';\\n\\nexport interface Props {\\n}\\n\\ninterface InternalProps extends ContextState {\\n}\\n\\ninterface State {\\n}\\n\\nclass Component extends React.PureComponent<Props & InternalProps, State> {\\n  static displayName: string = 'UpdateX';\\n  \\n  render() {\\n    return (\\n      <div>\\n        <button onClick={this.update}>\\n          Update Y\\n        </button>\\n      </div>\\n    );\\n  }\\n  \\n  update = () => {\\n    this.props.updateY(Math.floor(Math.random() * 10000));\\n  };\\n}\\n\\nexport default withConsumer<Props>(Component) as React.ComponentType<Props>;\"","module.exports = \"import produce from 'immer';\\n\\nexport interface Test {\\n  x: number;\\n  y: number;\\n  z: number;\\n}\\n\\nexport const updateX: (test: Test) => (x: number) => Test = test => x => {\\n  return produce(test, draft => {\\n    draft.x = x;\\n    draft.z = x + draft.y;\\n  });\\n};\\n\\nexport const updateY: (test: Test) => (y: number) => Test = test => y => {\\n  return produce(test, draft => {\\n    draft.y = y;\\n    draft.z = draft.x + y;\\n  });\\n};\"","module.exports = \"import * as React from 'react';\\nimport { Print, UpdateA, UpdateB, UpdateX, UpdateY } from './components';\\nimport { Provider } from './context';\\n\\nexport interface Props {\\n\\n}\\n\\ninterface InternalProps {\\n\\n}\\n\\ninterface State {\\n}\\n\\nclass Component extends React.PureComponent<Props & InternalProps, State> {\\n  static displayName: string = 'Sample.sample';\\n  \\n  render() {\\n    return (\\n      <Provider>\\n        <Print/>\\n        <UpdateA/>\\n        <UpdateB/>\\n        <UpdateX/>\\n        <UpdateY/>\\n      </Provider>\\n    );\\n  }\\n}\\n\\nexport default Component as React.ComponentType<Props>;\"","import * as React from 'react';\nimport { Description, Source } from 'seed/components';\n\nexport default () => (\n  <div className=\"app-body\">\n    <div className=\"page-header\">\n      <div className=\"row\">\n        <h1><code>Numeral.js Test</code></h1>\n      </div>\n    </div>\n    <div className=\"page-body ph-30 mv-30\">\n      {/*<div className=\"box\">*/}\n      {/*<div className=\"box-body\">*/}\n      {/*<Description html={require('./Sample.description.md')}/>*/}\n      {/*</div>*/}\n      {/*</div>*/}\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Source source={require('!!raw-loader!./numeral.test.ts')}/>\n        </div>\n      </div>\n    </div>\n  </div>\n)","module.exports = \"import * as numeral from 'numeral';\\n\\ndescribe('numeral', () => {\\n  it('Number formatting', () => {\\n    // ---------------------------------------------\\n    // 정수, 소숫점 지정\\n    // ---------------------------------------------\\n    expect(numeral(1000.23423).format('0,0')).toEqual('1,000');\\n    expect(numeral(1000.23423).format('0,0.0000')).toEqual('1,000.2342');\\n    expect(numeral(1000).format('0,0.0000')).toEqual('1,000.0000');\\n    // 소수가 없으면 출력 안함\\n    expect(numeral(1000).format('0,0.[0000]')).toEqual('1,000');\\n    // 소수가 지정보다 많으면 잘라냄\\n    expect(numeral(1000.23423).format('0,0.[000]')).toEqual('1,000.234');\\n    // 소수가 지정보다 적으면 그대로 출력\\n    expect(numeral(1000.2).format('0,0.[000]')).toEqual('1,000.2');\\n    \\n    // ---------------------------------------------\\n    // 특수 표시\\n    // ---------------------------------------------\\n    // +, - 표시\\n    expect(numeral(100).format('+0,0')).toEqual('+100');\\n    expect(numeral(-100).format('+0,0')).toEqual('-100');\\n    // surffix unit - k, m, b, t\\n    expect(numeral(12).format('0a')).toEqual('12');\\n    expect(numeral(1234).format('0a')).toEqual('1k');\\n    expect(numeral(1234567).format('0a')).toEqual('1m');\\n    expect(numeral(1234567890).format('0a')).toEqual('1b');\\n    expect(numeral(1234567890000).format('0a')).toEqual('1t');\\n    expect(numeral(12345678900000000).format('0a')).toEqual('12346t');\\n    expect(numeral(1234).format('0.0a')).toEqual('1.2k');\\n    expect(numeral(1234).format('0.00a')).toEqual('1.23k');\\n    expect(numeral(1000).format('0.0a')).toEqual('1.0k');\\n    expect(numeral(1000).format('0.[0]a')).toEqual('1k');\\n    // surffix unit - 1st\\n    expect(numeral(1).format('0o')).toEqual('1st');\\n    expect(numeral(2).format('0o')).toEqual('2nd');\\n    expect(numeral(10).format('0o')).toEqual('10th');\\n    // bytes\\n    expect(numeral(100).format('0b')).toEqual('100B');\\n    expect(numeral(1024).format('0b')).toEqual('1KB');\\n    expect(numeral(1024).format('0.0b')).toEqual('1.0KB');\\n    // percentage\\n    expect(numeral(1).format('0%')).toEqual('100%');\\n    expect(numeral(0.987).format('0%')).toEqual('99%');\\n    expect(numeral(0.98764).format('0.00%')).toEqual('98.76%');\\n    expect(numeral(0.9).format('0.[000]%')).toEqual('90%');\\n    expect(numeral(0.98282738).format('0.[000]%')).toEqual('98.283%');\\n    \\n    // ---------------------------------------------\\n    // Custom\\n    // ---------------------------------------------\\n    // zero, null format\\n    numeral.zeroFormat('###');\\n    numeral.nullFormat('N/A');\\n    expect(numeral(0).format('0')).toEqual('###');\\n    expect(numeral(null).format('0')).toEqual('N/A');\\n    // undefined는 0으로 취급된다?\\n    expect(numeral(undefined).format('0')).toEqual('###');\\n    // 전역적으로 변경해야만 한다. (왜?)\\n    numeral.zeroFormat('-');\\n    numeral.nullFormat('-');\\n    expect(numeral(0).format('0')).toEqual('-');\\n    expect(numeral(null).format('0')).toEqual('-');\\n    expect(numeral(undefined).format('0')).toEqual('-');\\n    \\n    numeral.register('format', 'half', {\\n      regexps: {\\n        format: /(half)/,\\n        unformat: /(half)/,\\n      },\\n      format: (value, format, roundingFunction) => {\\n        // numberToFormat()은 문자를 무시한 format string을 보내준다\\n        // @ts-ignore\\n        return numeral._.numberToFormat(value / 2, format, roundingFunction) + 'half';\\n      },\\n      unformat: (text) => {\\n        // stringToNumber()는 문자를 무시한 number를 보내준다\\n        // @ts-ignore\\n        return numeral._.stringToNumber(text) * 2;\\n      },\\n    });\\n    \\n    expect(numeral(100).format('0half')).toEqual('50half');\\n    expect(numeral('51half').value()).toEqual(102);\\n  });\\n});\"","import * as moment from 'moment';\nimport * as React from 'react';\n\ninterface Config {\n  disableBefore: moment.Moment | Date;\n  disableAfter: moment.Moment | Date;\n  timeInputClassName: string;\n  dateInputClassName: string;\n  dateTimeInputClassName: string;\n  monthSelectorClassName: string;\n  monthSelectorYearLabelFunction: (year: number) => string;\n  monthSelectorMonthLabelFunction: (month: number) => string;\n  dateSelectorClassName: string;\n  dateSelectorPrevMonthButton: React.ReactElement<React.ButtonHTMLAttributes<HTMLButtonElement>>;\n  dateSelectorNextMonthButton: React.ReactElement<React.ButtonHTMLAttributes<HTMLButtonElement>>;\n  dateSelectorDayLabelFunction: (day: 'sun' | 'mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat') => string;\n  dateTimeSelectorClassName: string;\n  fromToDateTimeSelectorClassName: string;\n  fromToDateTimeDropDownSelectorClassName: string;\n  fromToDateTimeDropDownSelectorCancelButton: React.ReactElement<React.HTMLAttributes<HTMLButtonElement>>;\n  fromToDateTimeDropDownSelectorApplyButton: React.ReactElement<React.HTMLAttributes<HTMLButtonElement>>;\n  dateRangeSelectorClassName: string;\n  dateRangeSelectorDateTabLabel: React.ReactNode;\n  dateRangeSelectorListTabLabel: React.ReactNode;\n  dateRangeSelectorCancleButton: React.ReactElement<React.HTMLAttributes<HTMLButtonElement>>;\n  dateRangeSelectorApplyButton: React.ReactElement<React.HTMLAttributes<HTMLButtonElement>>;\n  dateRangeDropDownSelectorClassName: string;\n}\n\ninterface Props {\n  config?: Partial<Config>;\n}\n\ninterface ContextState {\n  config: Config;\n}\n\nconst defaultConfig: Config = {\n  disableBefore: moment().subtract(10, 'years').startOf('year'),\n  disableAfter: moment().add(10, 'years').endOf('year'),\n  dateInputClassName: '',\n  timeInputClassName: '',\n  dateTimeInputClassName: '',\n  monthSelectorClassName: '',\n  monthSelectorYearLabelFunction: (year: number) => year.toString(),\n  monthSelectorMonthLabelFunction: (month: number) => month.toString(),\n  dateSelectorClassName: '',\n  dateSelectorPrevMonthButton: <button>←</button>,\n  dateSelectorNextMonthButton: <button>→</button>,\n  dateSelectorDayLabelFunction: (day: 'sun' | 'mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat') => {\n    switch (day) {\n      case 'sun':\n        return 'S';\n      case 'mon':\n        return 'M';\n      case 'tue':\n        return 'T';\n      case 'wed':\n        return 'W';\n      case 'thu':\n        return 'T';\n      case 'fri':\n        return 'F';\n      case 'sat':\n        return 'S';\n      default:\n        throw new Error('Unknown day');\n    }\n  },\n  dateTimeSelectorClassName: '',\n  fromToDateTimeSelectorClassName: '',\n  fromToDateTimeDropDownSelectorClassName: '',\n  fromToDateTimeDropDownSelectorCancelButton: <button>Cancel</button>,\n  fromToDateTimeDropDownSelectorApplyButton: <button>Apply</button>,\n  dateRangeSelectorClassName: '',\n  dateRangeSelectorDateTabLabel: 'By Date',\n  dateRangeSelectorListTabLabel: 'By List',\n  dateRangeSelectorCancleButton: <button>Cancel</button>,\n  dateRangeSelectorApplyButton: <button>Apply</button>,\n  dateRangeDropDownSelectorClassName: '',\n};\n\nconst {Provider: ReactProvider, Consumer} = React.createContext<ContextState>({config: defaultConfig});\n\nclass Provider extends React.PureComponent<Props, {}> {\n  static displayName: string = 'Provider';\n  \n  render() {\n    return (\n      <Consumer>\n        {\n          ({config}) => {\n            if (this.props.config) {\n              config = {\n                ...config,\n                ...this.props.config,\n              };\n            }\n            \n            return (\n              <ReactProvider value={{config}}>\n                {this.props.children}\n              </ReactProvider>\n            );\n          }\n        }\n      </Consumer>\n    );\n  }\n}\n\nfunction withConsumer<Props>(Component: React.ComponentClass<Props>): React.ComponentType<ContextState & Props> {\n  return React.forwardRef((props, ref) => (\n    <Consumer>\n      {\n        state => <Component {...state} {...props} ref={ref}/>\n      }\n    </Consumer>\n  ));\n}\n\nexport {\n  Provider,\n  Consumer,\n  withConsumer,\n  ContextState,\n  Config,\n  Props,\n};","import * as moment from 'moment';\nimport * as React from 'react';\nimport { ContextState, withConsumer } from '../context';\nimport './MonthSelector.scss';\n\nexport interface Props {\n  date: moment.Moment | Date;\n  onChange: (year: number, month: number) => void;\n  \n  disableBefore?: moment.Moment | Date;\n  disableAfter?: moment.Moment | Date;\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n  date: moment.Moment,\n  source: Map<number, number[]>, // of <year, months>\n  \n  prevDisableBefore: moment.Moment | Date | undefined,\n  prevDisableAfter: moment.Moment | Date | undefined,\n}\n\nclass Component extends React.Component<Props & InternalProps, State> {\n  static displayName: string = 'MonthSelector';\n  \n  constructor(props: Props & InternalProps) {\n    super(props);\n    \n    this.state = {\n      date: moment(props.date),\n      source: parseSource(props),\n      prevDisableBefore: props.disableBefore,\n      prevDisableAfter: props.disableAfter,\n    };\n  }\n  \n  \n  render() {\n    const year: number = this.state.date.year();\n    const month: number = this.state.date.month() + 1;\n    const years: number[] = Array.from<number>(this.state.source.keys());\n    const months: number[] = this.state.source.get(year) as number[];\n    \n    return (\n      <div className={'MonthSelector ' + this.props.config.monthSelectorClassName}>\n        <select className=\"select\"\n                value={year}\n                onChange={this.onYearChange}>\n          {\n            years.map(year => (\n              <option key={year} value={year}>\n                {this.props.config.monthSelectorYearLabelFunction(year)}\n              </option>\n            ))\n          }\n        </select>\n        \n        <select className=\"select\"\n                value={month}\n                onChange={this.onMonthChange}>\n          {\n            months.map(month => (\n              <option key={month} value={month}>\n                {this.props.config.monthSelectorMonthLabelFunction(month)}\n              </option>\n            ))\n          }\n        </select>\n      </div>\n    );\n  }\n  \n  static getDerivedStateFromProps(nextProps: Props & InternalProps, prevState: State): Partial<State> {\n    const state: Partial<State> = {};\n    \n    if (prevState.prevDisableBefore !== nextProps.disableBefore\n      || prevState.prevDisableAfter !== nextProps.disableAfter) {\n      state.prevDisableBefore = nextProps.disableBefore;\n      state.prevDisableAfter = nextProps.disableAfter;\n      state.source = parseSource(nextProps);\n    }\n    \n    if (!prevState.date.isSame(nextProps.date, 'month')) {\n      state.date = moment(nextProps.date);\n    }\n    \n    return state;\n  }\n  \n  shouldComponentUpdate(nextProps: Props & InternalProps, nextState: State) {\n    return this.state.date !== nextState.date\n      || this.state.source !== nextState.source;\n  }\n  \n  onYearChange = (event: React.ChangeEvent<{value: string}>) => {\n    const year: number = Number(event.target.value);\n    const months: number[] = this.state.source.get(year) as number[];\n    const currentMonth: number = this.state.date.month() + 1;\n    const month: number = months.indexOf(currentMonth) > -1\n      ? currentMonth\n      : months[months.length - 1];\n    \n    this.props.onChange(year, month);\n  };\n  \n  onMonthChange = (event: React.ChangeEvent<{value: string}>) => {\n    const year: number = this.state.date.year();\n    const month: number = Number(event.target.value);\n    \n    this.props.onChange(year, month);\n  };\n}\n\nexport default withConsumer(Component) as React.ComponentType<Props>;\n\nfunction parseSource({disableBefore, disableAfter}: Props): Map<number, number[]> {\n  let from: moment.Moment, to: moment.Moment;\n  \n  if (disableBefore && disableAfter) {\n    from = moment(disableBefore);\n    to = moment(disableAfter);\n  } else if (disableBefore) {\n    from = moment(disableBefore);\n    to = moment().add(10, 'year').endOf('year');\n  } else if (disableAfter) {\n    from = moment().subtract(10, 'year').startOf('year');\n    to = moment(disableAfter);\n  } else {\n    from = moment().subtract(10, 'year').startOf('year');\n    to = moment().add(10, 'year').endOf('year');\n  }\n  \n  const source: Map<number, number[]> = new Map<number, number[]>();\n  const itr: moment.Moment = from.clone();\n  \n  while (itr.isSameOrBefore(to, 'month')) {\n    const year: number = itr.year();\n    const month: number = itr.month() + 1;\n    \n    if (!source.has(year)) {\n      source.set(year, []);\n    }\n    \n    (source.get(year) as number[]).push(month);\n    \n    itr.add(1, 'month');\n  }\n  \n  return source;\n}","import { range } from 'd3-array';\nimport * as moment from 'moment';\nimport * as React from 'react';\nimport { ContextState, withConsumer } from '../context';\n\nconst format: string = 'YYYY-MM-DD';\nconst availableKeyCodes: number[] = [\n  ...range(35, 40 + 1), // arrow keys\n  8, // backspace\n  46, // delete\n  9, // tab\n  27, // escape\n  13, // enter\n  ...range(48, 57 + 1), // number keys\n  ...range(96, 105 + 1), // numpad keys\n  190, // decimal point\n  110, // decimal point\n  189, // dash\n];\n\nexport interface Props {\n  date: moment.Moment | Date;\n  onChange: (date: Date) => void;\n  \n  disableBefore?: moment.Moment | Date;\n  disableAfter?: moment.Moment | Date;\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n  dateString: string;\n}\n\nfunction getFormat(dateString: string): string {\n  if (/[0-9]{4}-[0-9]{2}-[0-9]{2}/.test(dateString)) {\n    return 'YYYY-MM-DD';\n  } else if (/[0-9]{4}.[0-9]{2}.[0-9]{2}/.test(dateString)) {\n    return 'YYYY.MM.DD';\n  } else if (/[0-9]{4}\\/[0-9]{2}\\/[0-9]{2}/.test(dateString)) {\n    return 'YYYY/MM/DD';\n  } else if (/[0-9]{8}/.test(dateString)) {\n    return 'YYYYMMDD';\n  }\n  return 'YYYY-MM-DD';\n}\n\nclass Component extends React.Component<Props & InternalProps, State> {\n  static displayName: string = 'DateInput';\n  \n  private inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n  \n  constructor(props: Props & InternalProps) {\n    super(props);\n    \n    this.state = {\n      dateString: moment(props.date).format(format),\n    };\n  }\n  \n  render() {\n    return (\n      <input ref={this.inputRef}\n             type=\"text\"\n             className={'DateInput ' + this.props.config.dateInputClassName}\n             defaultValue={this.state.dateString}\n             onBlur={this.onBlur}\n             onKeyDown={this.onKeyDown}/>\n    );\n  }\n  \n  static getDerivedStateFromProps(nextProps: Props & InternalProps): Partial<State> | null {\n    return {\n      dateString: moment(nextProps.date).format(format),\n    };\n  }\n  \n  componentDidUpdate() {\n    if (this.inputRef.current && this.inputRef.current.value !== this.state.dateString) {\n      this.inputRef.current.value = this.state.dateString;\n    }\n  }\n  \n  shouldComponentUpdate(nextProps: Readonly<Props & InternalProps>, nextState: Readonly<State>) {\n    return this.state.dateString !== nextState.dateString;\n  }\n  \n  onBlur = (event: React.FocusEvent<{value: string}>) => {\n    this.commitString(this.state.dateString, event.currentTarget.value);\n  };\n  \n  onKeyDown = (event: React.KeyboardEvent<{value: string}>) => {\n    if (event.keyCode === 13) {\n      this.commitString(this.state.dateString, event.currentTarget.value);\n      return;\n    }\n    const selectAll: boolean = event.keyCode === 65 && (event.ctrlKey || event.metaKey);\n    if (selectAll || availableKeyCodes.indexOf(event.keyCode) !== -1) return;\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  \n  private commitString(prevDateString: string, nextDateString: string) {\n    if (prevDateString === nextDateString) return;\n    \n    const nextDate: moment.Moment = moment(nextDateString.replace(/\\s/g, ''), getFormat(nextDateString), true);\n    \n    const disableBefore: moment.Moment = moment(this.props.disableBefore || this.props.config.disableBefore);\n    const disableAfter: moment.Moment = moment(this.props.disableAfter || this.props.config.disableAfter);\n    \n    const isBefore: boolean = nextDate.isBefore(disableBefore);\n    const isAfter: boolean = nextDate.isAfter(disableAfter);\n    \n    const isValid: boolean = nextDate.isValid && !isBefore && !isAfter;\n    \n    if (isValid) {\n      this.setState({\n        dateString: nextDateString,\n      });\n      this.props.onChange(nextDate.toDate());\n    } else {\n      if (this.inputRef.current) {\n        this.inputRef.current.value = prevDateString;\n      }\n    }\n  }\n}\n\nexport default withConsumer(Component) as React.ComponentType<Props>;","import { range } from 'd3-array';\nimport * as React from 'react';\nimport { ContextState, withConsumer } from '../context';\n\nconst availableKeyCodes: number[] = [\n  ...range(35, 40 + 1), // arrow keys\n  8, // backspace\n  46, // delete\n  9, // tab\n  27, // escape\n  13, // enter\n  ...range(48, 57 + 1), // number keys\n  ...range(96, 105 + 1), // numpad keys\n  186, // semi colon\n];\n\nexport interface Props {\n  time: string; // of \"HH:mm:ss\"\n  onChange: (time: string) => void;\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n  time: string; // of \"HH:mm:ss\n}\n\nclass Component extends React.Component<Props & InternalProps, State> {\n  static displayName: string = 'TimeInput';\n  \n  private inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n  \n  constructor(props: Props & InternalProps) {\n    super(props);\n    \n    this.state = {\n      time: props.time,\n    };\n  }\n  \n  render() {\n    return (\n      <input ref={this.inputRef}\n             type=\"text\"\n             className={'TimeInput ' + this.props.config.timeInputClassName}\n             defaultValue={this.state.time}\n             onBlur={this.onBlur}\n             onKeyDown={this.onKeyDown}/>\n    );\n  }\n  \n  static getDerivedStateFromProps(nextProps: Props & InternalProps): Partial<State> {\n    return {\n      time: nextProps.time,\n    };\n  }\n  \n  componentDidUpdate() {\n    if (this.inputRef.current && this.inputRef.current.value !== this.state.time) {\n      this.inputRef.current.value = this.state.time;\n    }\n  }\n  \n  shouldComponentUpdate(nextProps: Readonly<Props & InternalProps>, nextState: Readonly<State>): boolean {\n    return this.state.time !== nextState.time;\n  }\n  \n  private onBlur = (event: React.FocusEvent<{value: string}>) => {\n    this.commitString(this.state.time, event.currentTarget.value);\n  };\n  \n  private onKeyDown = (event: React.KeyboardEvent<{value: string}>) => {\n    if (event.keyCode === 13) {\n      this.commitString(this.state.time, event.currentTarget.value);\n      return;\n    }\n    \n    const selectAll: boolean = event.keyCode === 65 && (event.ctrlKey || event.metaKey);\n    if (selectAll || availableKeyCodes.indexOf(event.keyCode) !== -1) return;\n    event.preventDefault();\n  };\n  \n  private commitString(prevTimeString: string, nextTimeString: string) {\n    if (prevTimeString === nextTimeString) return;\n    \n    if (nextTimeString.trim() === '') {\n      this.setState({\n        time: '00:00:00',\n      });\n      this.props.onChange('00:00:00');\n      return;\n    }\n    \n    if (!/^([0-9]{2}):([0-9]{2}):([0-9]{2})$/.test(nextTimeString)) {\n      if (this.inputRef.current) {\n        this.inputRef.current.value = prevTimeString;\n      }\n      return;\n    }\n    \n    const times: string[] = nextTimeString.split(':');\n    const hh: number = Number(times[0]);\n    const mm: number = Number(times[1]);\n    const ss: number = Number(times[2]);\n    \n    if (!isNaN(hh) && hh >= 0 && hh < 24\n      && !isNaN(mm) && mm >= 0 && hh < 60\n      && !isNaN(ss) && ss >= 0 && ss < 60\n    ) {\n      this.setState({\n        time: nextTimeString,\n      });\n      this.props.onChange(nextTimeString);\n    } else {\n      if (this.inputRef.current) {\n        this.inputRef.current.value = prevTimeString;\n      }\n    }\n  }\n}\n\nexport default withConsumer(Component) as React.ComponentType<Props>;","import { range } from 'd3-array';\nimport * as moment from 'moment'\nimport * as React from 'react';\nimport { ContextState, withConsumer } from '../context';\n\nconst format: string = 'YYYY-MM-DD HH:mm:ss';\nconst availableKeyCodes: number[] = [\n  ...range(35, 40 + 1), // arrow keys\n  8, // backspace\n  46, // delete\n  9, // tab\n  27, // escape\n  13, // enter\n  32, // space\n  ...range(48, 57 + 1), // number keys\n  ...range(96, 105 + 1), // numpad keys\n  186, // semi colon\n  190, // decimal point\n  110, // decimal point\n  189, // dash\n];\n\nexport interface Props {\n  date: moment.Moment | Date;\n  onChange: (date: Date) => void;\n  \n  disableBefore?: moment.Moment | Date;\n  disableAfter?: moment.Moment | Date;\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n  dateString: string;\n}\n\nfunction getFormat(dateString: string): string {\n  if (/[0-9]{4}-[0-9]{2}-[0-9]{2}[0-9]{2}:[0-9]{2}:[0-9]{2}/.test(dateString)) {\n    return 'YYYY-MM-DDHH:mm:ss';\n  } else if (/[0-9]{4}.[0-9]{2}.[0-9]{2}[0-9]{2}:[0-9]{2}:[0-9]{2}/.test(dateString)) {\n    return 'YYYY.MM.DDHH:mm:ss';\n  } else if (/[0-9]{4}\\/[0-9]{2}\\/[0-9]{2} [0-9]{2}:[0-9]{2}:[0-9]{2}/.test(dateString)) {\n    return 'YYYY/MM/DDHH:mm:ss';\n  } else if (/[0-9]{8}[0-9]{2}:[0-9]{2}:[0-9]{2}/.test(dateString)) {\n    return 'YYYYMMDDHH:mm:ss';\n  }\n  return 'YYYY-MM-DDHH:mm:ss';\n}\n\nclass Component extends React.Component<Props & InternalProps, State> {\n  static displayName: string = 'DateTimeInput';\n  \n  private inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n  \n  constructor(props: Props & InternalProps) {\n    super(props);\n    \n    this.state = {\n      dateString: moment(props.date).format(format),\n    };\n  }\n  \n  render() {\n    return (\n      <input ref={this.inputRef}\n             type=\"text\"\n             className={'DateTimeInput ' + this.props.config.dateTimeInputClassName}\n             defaultValue={this.state.dateString}\n             onBlur={this.onBlur}\n             onKeyDown={this.onKeyDown}/>\n    );\n  }\n  \n  static getDerivedStateFromProps(nextProps: Props & InternalProps): Partial<State> | null {\n    return {\n      dateString: moment(nextProps.date).format(format),\n    };\n  }\n  \n  componentDidUpdate() {\n    if (this.inputRef.current && this.inputRef.current.value !== this.state.dateString) {\n      this.inputRef.current.value = this.state.dateString;\n    }\n  }\n  \n  shouldComponentUpdate(nextProps: Readonly<Props & InternalProps>, nextState: Readonly<State>) {\n    return this.state.dateString !== nextState.dateString;\n  }\n  \n  onBlur = (event: React.FocusEvent<{value: string}>) => {\n    this.commitString(this.state.dateString, event.currentTarget.value);\n  };\n  \n  onKeyDown = (event: React.KeyboardEvent<{value: string}>) => {\n    if (event.keyCode === 13) {\n      this.commitString(this.state.dateString, event.currentTarget.value);\n      return;\n    }\n    const selectAll: boolean = event.keyCode === 65 && (event.ctrlKey || event.metaKey);\n    if (selectAll || availableKeyCodes.indexOf(event.keyCode) !== -1) return;\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  \n  private commitString(prevDateString: string, nextDateString: string) {\n    if (prevDateString === nextDateString) return;\n    \n    const nextDate: moment.Moment = moment(nextDateString.replace(/\\s/g, ''), getFormat(nextDateString), true);\n    \n    const isBefore: boolean = nextDate.isBefore(this.props.disableBefore || this.props.config.disableBefore);\n    const isAfter: boolean = nextDate.isAfter(this.props.disableAfter || this.props.config.disableAfter);\n    \n    const isValid: boolean = nextDate.isValid && !isBefore && !isAfter;\n    \n    if (isValid) {\n      this.setState({\n        dateString: nextDateString,\n      });\n      this.props.onChange(nextDate.toDate());\n    } else {\n      if (this.inputRef.current) {\n        this.inputRef.current.value = prevDateString;\n      }\n    }\n  }\n}\n\nexport default withConsumer(Component) as React.ComponentType<Props>;","import * as moment from 'moment';\nimport * as React from 'react';\n\nexport interface Props {\n  date: moment.Moment;\n  selectedDay: moment.Moment | Date;\n  startDay: moment.Moment | Date;\n  endDay: moment.Moment | Date;\n  today: moment.Moment | Date;\n  disableBefore: moment.Moment | Date | undefined;\n  disableAfter: moment.Moment | Date | undefined;\n  onClick: (date: moment.Moment) => void;\n}\n\nexport default class extends React.PureComponent<Props, {}> {\n  static displayName: string = 'DayCell';\n  \n  render() {\n    const date: moment.Moment = this.props.date.clone().startOf('day');\n    //const startDay: moment.Moment = moment(this.props.startDay).startOf('day');\n    //const endDay: moment.Moment = moment(this.props.endDay).startOf('day');\n    \n    const disabled: boolean = (\n      this.props.disableBefore !== undefined\n      && date.isBefore(this.props.disableBefore, 'day')\n    ) || (\n      this.props.disableAfter !== undefined\n      && date.isAfter(this.props.disableAfter, 'day')\n    );\n    \n    const selected: boolean = date.isSame(this.props.selectedDay, 'day');\n    \n    const classNames: string[] = [];\n    \n    if (date.isBefore(this.props.startDay, 'day')) classNames.push('before-month');\n    if (date.isAfter(this.props.endDay, 'day')) classNames.push('after-month');\n    if (date.isSame(this.props.today, 'day')) classNames.push('today');\n    if (selected) classNames.push('selected');\n    if (disabled) classNames.push('disabled');\n    \n    const props: React.HTMLAttributes<HTMLTableCellElement> = {\n      className: classNames.join(' '),\n    };\n    \n    if (!disabled && !selected) {\n      props.onClick = () => this.props.onClick(date);\n    }\n    \n    return (\n      <td {...props}>\n        {date.format('D')}\n      </td>\n    );\n  }\n}","import { range } from 'd3-array';\nimport * as moment from 'moment';\nimport * as React from 'react';\nimport { ContextState, withConsumer } from '../context';\nimport './DateSelector.scss';\nimport DayCell, { Props as DayCellProps } from './DayCell';\nimport MonthSelector from './MonthSelector';\n\nexport interface Props {\n  date: moment.Moment | Date;\n  onChange: (date: Date) => void;\n  \n  disableBefore?: moment.Moment | Date;\n  disableAfter?: moment.Moment | Date;\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n  view: moment.Moment; // Month on calendar\n  date: moment.Moment; // Selected day\n}\n\nclass Component extends React.Component<Props & InternalProps, State> {\n  static displayName: string = 'DateSelector';\n  \n  constructor(props: Props & InternalProps) {\n    super(props);\n    \n    this.state = {\n      view: moment(props.date),\n      date: moment(props.date),\n    };\n  }\n  \n  render() {\n    const {view, date: selectedDay} = this.state;\n    const today: moment.Moment = moment();\n    const startDayOfMonth: moment.Moment = view.clone().startOf('month');\n    const endDayOfMonth: moment.Moment = view.clone().endOf('month');\n    \n    const itr: moment.Moment = startDayOfMonth.clone().startOf('week');\n    \n    let row: React.ReactElement<DayCellProps>[] = []; // of <DayCell>\n    const rows: JSX.Element[] = []; // of <tr>\n    \n    while (itr.isSameOrBefore(endDayOfMonth.clone().endOf('week'), 'day')) {\n      // Create Day Cell\n      row.push(\n        <DayCell key={itr.format('YYYYMMDD')}\n                 date={itr.clone()}\n                 selectedDay={selectedDay}\n                 startDay={startDayOfMonth}\n                 endDay={endDayOfMonth}\n                 today={today}\n                 disableBefore={this.props.disableBefore}\n                 disableAfter={this.props.disableAfter}\n                 onClick={this.onDayClick}/>,\n      );\n      \n      // Week break\n      if (itr.day() === 6) {\n        rows.push((\n          <tr key={itr.format('W')}>\n            {row}\n          </tr>\n        ));\n        \n        row = [];\n      }\n      \n      itr.add(1, 'day');\n    }\n    \n    range(rows.length, 6).forEach(i => {\n      rows.push(\n        <tr key={'blank-week-' + i}>\n          <td>&nbsp;</td>\n          <td>&nbsp;</td>\n          <td>&nbsp;</td>\n          <td>&nbsp;</td>\n          <td>&nbsp;</td>\n          <td>&nbsp;</td>\n          <td>&nbsp;</td>\n        </tr>,\n      );\n    });\n    \n    return (\n      <div className={'DateSelector ' + this.props.config.dateSelectorClassName}>\n        <div role=\"header\">\n          <PrevMonthButton date={view}\n                           disableBefore={this.props.disableBefore || this.props.config.disableBefore}\n                           onClick={this.changeView}>\n            {this.props.config.dateSelectorPrevMonthButton}\n          </PrevMonthButton>\n          \n          <MonthSelector date={view}\n                         disableBefore={this.props.disableBefore || this.props.config.disableBefore}\n                         disableAfter={this.props.disableAfter || this.props.config.disableAfter}\n                         onChange={this.onMonthChange}/>\n          \n          <NextMonthButton date={view}\n                           disableAfter={this.props.disableAfter || this.props.config.disableAfter}\n                           onClick={this.changeView}>\n            {this.props.config.dateSelectorNextMonthButton}\n          </NextMonthButton>\n        </div>\n        \n        <table role=\"body\">\n          <thead>\n          <tr>\n            <th>\n              {this.props.config.dateSelectorDayLabelFunction('sun')}\n            </th>\n            <th>\n              {this.props.config.dateSelectorDayLabelFunction('mon')}\n            </th>\n            <th>\n              {this.props.config.dateSelectorDayLabelFunction('tue')}\n            </th>\n            <th>\n              {this.props.config.dateSelectorDayLabelFunction('wed')}\n            </th>\n            <th>\n              {this.props.config.dateSelectorDayLabelFunction('thu')}\n            </th>\n            <th>\n              {this.props.config.dateSelectorDayLabelFunction('fri')}\n            </th>\n            <th>\n              {this.props.config.dateSelectorDayLabelFunction('sat')}\n            </th>\n          </tr>\n          </thead>\n          \n          <tbody>\n          {rows}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n  \n  static getDerivedStateFromProps(nextProps: Props & InternalProps, prevState: State): Partial<State> {\n    const state: Partial<State> = {};\n    \n    if (!prevState.date.isSame(nextProps.date, 'day')) {\n      state.view = moment(nextProps.date);\n      state.date = moment(nextProps.date);\n    }\n    \n    return state;\n  }\n  \n  shouldComponentUpdate(nextProps: Readonly<Props & InternalProps>, nextState: Readonly<State>) {\n    return this.state.view !== nextState.view\n      || this.state.date !== nextState.date\n      || this.props.disableBefore !== nextProps.disableBefore\n      || this.props.disableAfter !== nextProps.disableAfter\n      || this.props.config !== nextProps.config;\n  }\n  \n  changeView = (newMonth: moment.Moment) => {\n    this.setState({\n      view: newMonth,\n    });\n  };\n  \n  onMonthChange = (year: number, month: number) => {\n    this.setState({\n      view: this.state.view.clone().year(year).month(month - 1),\n    });\n  };\n  \n  onDayClick = (newDate: moment.Moment) => {\n    this.props.onChange(newDate.toDate());\n  };\n}\n\nexport default withConsumer(Component) as React.ComponentType<Props>;\n\ninterface PrevMonthButtonProps {\n  date: moment.Moment;\n  disableBefore: moment.Moment | Date | undefined;\n  onClick: (date: moment.Moment) => void;\n  children: React.ReactElement<React.ButtonHTMLAttributes<HTMLButtonElement>>;\n}\n\ninterface NextMonthButtonProps {\n  date: moment.Moment;\n  disableAfter: moment.Moment | Date | undefined;\n  onClick: (date: moment.Moment) => void;\n  children: React.ReactElement<React.ButtonHTMLAttributes<HTMLButtonElement>>;\n}\n\nclass PrevMonthButton extends React.PureComponent<PrevMonthButtonProps, {}> {\n  render() {\n    const disabled: boolean = this.props.disableBefore !== undefined\n      && this.props.date.isSameOrBefore(this.props.disableBefore, 'month');\n    const buttonProps: React.ButtonHTMLAttributes<HTMLButtonElement> = {};\n    \n    if (!disabled) {\n      buttonProps.onClick = () => this.props.onClick(this.props.date.clone().subtract(1, 'month'));\n    } else {\n      buttonProps.disabled = true;\n    }\n    \n    return React.cloneElement(this.props.children, buttonProps);\n  }\n}\n\nclass NextMonthButton extends React.PureComponent<NextMonthButtonProps, {}> {\n  render() {\n    const disabled: boolean = this.props.disableAfter !== undefined\n      && this.props.date.isSameOrAfter(this.props.disableAfter, 'month');\n    const buttonProps: React.ButtonHTMLAttributes<HTMLButtonElement> = {};\n    \n    if (!disabled) {\n      buttonProps.onClick = () => this.props.onClick(this.props.date.clone().add(1, 'month'));\n    } else {\n      buttonProps.disabled = true;\n    }\n    \n    return React.cloneElement(this.props.children, buttonProps);\n  }\n}","import * as moment from 'moment';\nimport * as React from 'react';\nimport { ContextState, withConsumer } from '../context';\nimport DateSelector from './DateSelector';\nimport DateTimeInput from './DateTimeInput';\nimport './DateTimeSelector.scss';\n\nexport interface Props {\n  date: moment.Moment | Date;\n  onChange: (date: Date) => void;\n  \n  disableBefore?: moment.Moment | Date;\n  disableAfter?: moment.Moment | Date;\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n  date: moment.Moment;\n}\n\nclass Component extends React.Component<Props & InternalProps, State> {\n  static displayName: string = 'DateTimeSelector';\n  \n  constructor(props: Props & InternalProps) {\n    super(props);\n    \n    this.state = {\n      date: moment(props.date),\n    };\n  }\n  \n  render() {\n    return (\n      <div className={'DateTimeSelector ' + this.props.config.dateTimeSelectorClassName}>\n        <div role=\"inputs\">\n          <DateTimeInput date={this.state.date}\n                         disableBefore={this.props.disableBefore}\n                         disableAfter={this.props.disableAfter}\n                         onChange={this.onDateTimeChange}/>\n        </div>\n        \n        <DateSelector date={this.state.date}\n                      disableBefore={this.props.disableBefore}\n                      disableAfter={this.props.disableAfter}\n                      onChange={this.onDateChange}/>\n      </div>\n    );\n  }\n  \n  static getDerivedStateFromProps(nextProps: Props & InternalProps, prevState: State): Partial<State> | null {\n    if (!prevState.date.isSame(nextProps.date, 'seconds')) {\n      return {\n        date: moment(nextProps.date),\n      };\n    }\n    return null;\n  }\n  \n  shouldComponentUpdate(nextProps: Readonly<Props & InternalProps>, nextState: Readonly<State>) {\n    return this.state.date !== nextState.date\n      || this.props.disableBefore !== nextProps.disableBefore\n      || this.props.disableAfter !== nextProps.disableAfter\n      || this.props.config !== nextProps.config;\n  }\n  \n  onDateTimeChange = (newDate: Date) => {\n    this.setState({\n      date: moment(newDate),\n    });\n    \n    this.props.onChange(newDate);\n  };\n  \n  onDateChange = (newDate: Date) => {\n    //const {hour, minute, second} = this.state.date;\n    \n    const date: moment.Moment = moment(newDate)\n      .hour(this.state.date.hour())\n      .minute(this.state.date.minute())\n      .second(this.state.date.second());\n    \n    //const date: moment.Moment = newDate.set({\n    //  hour,\n    //  minute,\n    //  second,\n    //});\n    \n    this.setState({\n      date,\n    });\n    \n    this.props.onChange(date.toDate());\n  };\n}\n\nexport default withConsumer(Component) as React.ComponentType<Props>;","import * as moment from 'moment';\nimport * as React from 'react';\nimport { ContextState, withConsumer } from '../context';\nimport { FromTo } from '../types';\nimport DateTimeSelector from './DateTimeSelector';\nimport './FromToDateTimeSelector.scss';\n\nexport interface Props {\n  fromTo: FromTo;\n  onChange: (fromTo: FromTo) => void;\n  \n  disableBefore?: moment.Moment | Date;\n  disableAfter?: moment.Moment | Date;\n}\n\ninterface InternalProps extends ContextState {\n}\n\nexport interface State {\n  from: moment.Moment;\n  to: moment.Moment;\n}\n\nclass Component extends React.Component<Props & InternalProps, State> {\n  static displayName: string = 'FromToDateTimeSelector';\n  \n  constructor(props: Props & InternalProps) {\n    super(props);\n    \n    this.state = {\n      from: moment(props.fromTo.from),\n      to: moment(props.fromTo.to),\n    };\n  }\n  \n  render() {\n    const disableBefore: moment.Moment = moment(this.props.disableBefore || this.props.config.disableBefore);\n    const disableAfter: moment.Moment = moment(this.props.disableAfter || this.props.config.disableAfter);\n    \n    const toDisableBefore: moment.Moment | Date = this.state.from.isAfter(disableBefore, 'day')\n      ? this.state.from\n      : disableBefore;\n    \n    return (\n      <div className={'FromToDateTimeSelector ' + this.props.config.fromToDateTimeSelectorClassName}>\n        <DateTimeSelector date={this.state.from}\n                          disableBefore={disableBefore}\n                          disableAfter={disableAfter}\n                          onChange={this.changeFrom}/>\n        \n        <DateTimeSelector date={this.state.to}\n                          disableBefore={toDisableBefore}\n                          disableAfter={disableAfter}\n                          onChange={this.changeTo}/>\n      </div>\n    );\n  }\n  \n  static getDerivedStateFromProps(nextProps: Props & InternalProps, prevState: State): Partial<State> | null {\n    if (!prevState.from.isSame(nextProps.fromTo.from, 'second')\n      || !prevState.to.isSame(nextProps.fromTo.to, 'second')) {\n      return {\n        from: moment(nextProps.fromTo.from),\n        to: moment(nextProps.fromTo.to),\n      };\n    }\n    \n    return null;\n  }\n  \n  shouldComponentUpdate(nextProps: Props & InternalProps, nextState: State) {\n    const prevProps: Props = this.props;\n    const prevState: State = this.state;\n    \n    return prevState.from !== nextState.from\n      || prevState.to !== nextState.to\n      || prevProps.disableBefore !== nextProps.disableBefore\n      || prevProps.disableAfter !== nextProps.disableAfter;\n  }\n  \n  changeFrom = (from: Date) => {\n    if (!this.state.from.isSame(from, 'second')) {\n      if (this.state.to.isBefore(from)) {\n        this.setState({\n          from: moment(from),\n          to: moment(from),\n        });\n        \n        this.props.onChange({\n          from,\n          to: from,\n        });\n      } else {\n        this.setState({\n          from: moment(from),\n        });\n        \n        this.props.onChange({\n          from,\n          to: this.state.to.toDate(),\n        });\n      }\n    }\n    \n  };\n  \n  changeTo = (to: Date) => {\n    if (!this.state.to.isSame(to, 'second')) {\n      this.setState({\n        to: moment(to),\n      });\n      \n      this.props.onChange({\n        from: this.state.from.toDate(),\n        to,\n      });\n    }\n  };\n}\n\nexport default withConsumer(Component) as React.ComponentType<Props>;","import * as moment from 'moment';\n\nexport interface FromTo {\n  from: Date;\n  to: Date;\n  description?: string;\n}\n\nexport interface From {\n  from: Date;\n  description?: string;\n}\n\nexport interface Period {\n  second: number;\n  description?: string;\n}\n\nexport interface Latest {\n  latest: string;\n  description?: string;\n}\n\nexport type DateRange = FromTo | From | Period | Latest;\n\n// tslint:disable\n// param의 type이 맞는지 확인하기 위한 validator.\n// 들어오는 param은 any 이어야 한다.\nexport function isFromTo(obj: any): boolean {\n  return moment.isDate(obj.from) && moment.isDate(obj.to);\n}\n\nexport function isFrom(obj: any): boolean {\n  return moment.isDate(obj.from);\n}\n\nexport function isPeriod(obj: any): boolean {\n  return typeof obj.second === 'number';\n}\n\nexport function isLatest(obj: any): boolean {\n  return typeof obj.latest === 'string';\n}\n\n// tslint:enable\n\n","import * as React from 'react';\nimport { DatePresetSelectorProps } from './DatePresetSelectorProps';\nimport './DefaultDateList.scss';\n\n//1h – 1m 데이터\n//6h – 1m 데어터\n//12h – 1분 데이터\n//1D – 5분 데이터\n//1W – 30분 데이터\n//1M – 2시간 데이터\n//1Y – 5년 데이터\n\nexport default class extends React.PureComponent<DatePresetSelectorProps, {}> {\n  render() {\n    const {onSelect} = this.props;\n    \n    return (\n      <div className=\"DefaultDateList\">\n        <ul>\n          <li onClick={() => onSelect && onSelect({latest: '1h'})}>Last 1 hour</li>\n          <li onClick={() => onSelect && onSelect({latest: '6h'})}>Last 6 hours</li>\n          <li onClick={() => onSelect && onSelect({latest: '12h'})}>Last 12 hours</li>\n        </ul>\n        <ul>\n          <li onClick={() => onSelect && onSelect({latest: '1d'})}>Last 1 day</li>\n          <li onClick={() => onSelect && onSelect({latest: '1w'})}>Last 1 week</li>\n          <li onClick={() => onSelect && onSelect({latest: '1m'})}>Last 1 month</li>\n          <li onClick={() => onSelect && onSelect({latest: '1y'})}>Last 1 year</li>\n        </ul>\n      </div>\n    );\n  }\n}","import * as moment from 'moment';\nimport * as React from 'react';\nimport { ContextState, withConsumer } from '../context';\nimport { DateRange, FromTo, isFromTo } from '../types';\nimport { DatePresetSelectorProps } from './DatePresetSelectorProps';\nimport './DateRangeSelector.scss';\nimport DefaultDateList from './DefaultDateList';\nimport FromToDateTimeSelector from './FromToDateTimeSelector';\n\nexport interface Props {\n  dateRange: DateRange;\n  onChange: (progressiveDateRange: DateRange) => void;\n  onCancel: () => void;\n  onComplete: (dateRange: DateRange) => void;\n  \n  disableBefore?: moment.Moment | Date;\n  disableAfter?: moment.Moment | Date;\n  \n  children?: React.ReactElement<DatePresetSelectorProps>;\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n  tabIndex: number;\n  prevDateRange: DateRange;\n  progressiveDateRange: DateRange;\n}\n\nfunction getTabIndex(dateRange: DateRange): number {\n  return isFromTo(dateRange) && !dateRange.description ? 1 : 0;\n}\n\nclass Component extends React.Component<Props & InternalProps, State> {\n  static displayName: string = 'DateRangeSelector';\n  \n  static defaultProps: Partial<Props> = {\n    children: <DefaultDateList/>,\n  };\n  \n  constructor(props: Props & InternalProps) {\n    super(props);\n    \n    this.state = {\n      tabIndex: getTabIndex(props.dateRange),\n      prevDateRange: props.dateRange,\n      progressiveDateRange: props.dateRange,\n    };\n  }\n  \n  render() {\n    return (\n      <div className={'DateRangeSelector ' + this.props.config.dateRangeSelectorClassName}>\n        <div role=\"tab\">\n          {\n            this.state.tabIndex === 0\n              ? (\n                <ul>\n                  <li aria-selected=\"false\" onClick={() => this.onTabChange(1)}>\n                    {this.props.config.dateRangeSelectorDateTabLabel}\n                  </li>\n                  <li aria-selected=\"true\">\n                    {this.props.config.dateRangeSelectorListTabLabel}\n                  </li>\n                </ul>\n              )\n              : (\n                <ul>\n                  <li aria-selected=\"true\">\n                    {this.props.config.dateRangeSelectorDateTabLabel}\n                  </li>\n                  <li aria-selected=\"false\" onClick={() => this.onTabChange(0)}>\n                    {this.props.config.dateRangeSelectorListTabLabel}\n                  </li>\n                </ul>\n              )\n          }\n        </div>\n        {\n          this.state.tabIndex === 0\n            ? React.cloneElement(this.props.children as JSX.Element, {\n              dateRange: this.state.progressiveDateRange,\n              onSelect: this.onDateComplete,\n            })\n            : (\n              <div role=\"selector\">\n                <FromToDateTimeSelector fromTo={this.state.progressiveDateRange as FromTo}\n                                        disableBefore={this.props.disableBefore}\n                                        disableAfter={this.props.disableAfter || moment().endOf('day')}\n                                        onChange={this.onDateChange}/>\n                <div role=\"buttons\">\n                  {\n                    React.cloneElement(this.props.config.dateRangeSelectorCancleButton, {\n                      onClick: this.onDateCancel,\n                    })\n                  }\n                  {\n                    React.cloneElement(this.props.config.dateRangeSelectorApplyButton, {\n                      onClick: () => this.onDateComplete(this.state.progressiveDateRange),\n                    })\n                  }\n                </div>\n              </div>\n            )\n        }\n      </div>\n    );\n  }\n  \n  static getDerivedStateFromProps(nextProps: Props & InternalProps, prevState: State): Partial<State> | null {\n    if (prevState.prevDateRange !== nextProps.dateRange) {\n      return {\n        prevDateRange: nextProps.dateRange,\n        progressiveDateRange: nextProps.dateRange,\n        tabIndex: getTabIndex(nextProps.dateRange),\n      };\n    }\n    \n    return null;\n  }\n  \n  shouldComponentUpdate(nextProps: Props & InternalProps, nextState: State) {\n    return this.state.progressiveDateRange !== nextState.progressiveDateRange\n      || this.state.tabIndex !== nextState.tabIndex;\n  }\n  \n  onTabChange = (tabIndex: number) => {\n    if (tabIndex === 1) {\n      this.onDateChange({\n        from: moment().startOf('day').toDate(),\n        to: new Date,\n      });\n    }\n    \n    this.setState({\n      tabIndex,\n    });\n  };\n  \n  onDateCancel = () => {\n    this.props.onCancel();\n    this.setState({\n      progressiveDateRange: this.props.dateRange,\n    });\n  };\n  \n  onDateComplete = (dateRange: DateRange) => {\n    this.props.onComplete(dateRange);\n  };\n  \n  onDateChange = (dateRange: DateRange) => {\n    this.props.onChange(dateRange);\n    this.setState({\n      progressiveDateRange: dateRange,\n    });\n  };\n}\n\nexport default withConsumer(Component) as React.ComponentType<Props>;","import * as moment from 'moment';\nimport * as React from 'react';\nimport { FromTo, isFromTo } from '../types';\nimport { FromToDateTimeDropDownSelectorButtonProps } from './FromToDateTimeDropDownSelectorButtonProps';\n\nexport function dateRangeToString(fromTo: FromTo | undefined, format: string): string {\n  if (!fromTo) return '-';\n  \n  if (typeof fromTo.description === 'string') {\n    return fromTo.description;\n  } else if (isFromTo(fromTo)) {\n    return moment(fromTo.from).format(format) + ' ~ ' + moment(fromTo.to).format(format);\n  }\n  \n  throw new Error(`${fromTo} is not FromTo.`);\n}\n\nclass Component extends React.PureComponent<FromToDateTimeDropDownSelectorButtonProps, {}> {\n  static displayName: string = 'FromToDateTimeDropDownSelectorButton';\n  \n  render() {\n    const {fromTo, progressiveFromTo, children, ...props} = this.props;\n    \n    return (\n      <button className=\"btn btn-sm white dropdown-toggle\"\n              aria-busy={progressiveFromTo !== null && progressiveFromTo !== undefined}\n              {...props}>\n        {\n          dateRangeToString(\n            progressiveFromTo || fromTo,\n            'LLLL', // TODO date format 점검\n          )\n        }\n      </button>\n    );\n  }\n}\n\nexport default Component;","import * as moment from 'moment';\nimport * as React from 'react';\nimport DropDownAnchor from 'ssenkit.dropdown-anchor';\nimport { ContextState, withConsumer } from '../context';\nimport { FromTo, isFromTo } from '../types';\nimport './FromToDateTimeDropDownSelector.scss';\nimport FromToDateTimeDropDownSelectorButton from './FromToDateTimeDropDownSelectorButton';\nimport { FromToDateTimeDropDownSelectorButtonProps } from './FromToDateTimeDropDownSelectorButtonProps';\nimport FromToDateTimeSelector from './FromToDateTimeSelector';\n\nexport interface Props {\n  fromTo: FromTo;\n  onChange: (fromTo: FromTo) => void;\n  \n  disableBefore?: moment.Moment | Date;\n  disableAfter?: moment.Moment | Date;\n  \n  button?: React.ReactElement<FromToDateTimeDropDownSelectorButtonProps>;\n  \n  useAlternatePosition?: boolean;\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n  progressiveFromTo: FromTo | null;\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'FromToDateTimeDownDownSelector';\n  \n  private anchorRef: React.RefObject<DropDownAnchor> = React.createRef();\n  \n  static defaultProps: Partial<Props> = {\n    button: <FromToDateTimeDropDownSelectorButton/>,\n    useAlternatePosition: true,\n  };\n  \n  constructor(props: Props & InternalProps) {\n    super(props);\n    \n    this.state = {\n      progressiveFromTo: null,\n    };\n  }\n  \n  render() {\n    return (\n      <DropDownAnchor ref={this.anchorRef}\n                      className={'FromToDateTimeDownDownSelector ' + this.props.config.fromToDateTimeDropDownSelectorClassName}\n                      useOutboundClick={true}\n                      useAlternatePosition={this.props.useAlternatePosition}\n                      button={\n                        React.cloneElement(this.props.button as JSX.Element, {\n                          fromTo: this.props.fromTo,\n                          progressiveFromTo: this.state.progressiveFromTo,\n                        })\n                      }\n                      onClose={this.onAnchorClose}>\n        <div role=\"selector\">\n          <FromToDateTimeSelector fromTo={this.state.progressiveFromTo || this.props.fromTo}\n                                  onChange={this.onChange}\n                                  disableBefore={this.props.disableBefore}\n                                  disableAfter={this.props.disableAfter}/>\n          <div role=\"buttons\">\n            {\n              React.cloneElement(this.props.config.fromToDateTimeDropDownSelectorCancelButton, {\n                onClick: this.onCancel,\n              })\n            }\n            \n            {\n              React.cloneElement(this.props.config.fromToDateTimeDropDownSelectorApplyButton, {\n                onClick: this.onComplete,\n              })\n            }\n          </div>\n        </div>\n      </DropDownAnchor>\n    );\n  }\n  \n  onChange = (progressiveFromTo: FromTo) => {\n    this.setState({\n      progressiveFromTo,\n    });\n  };\n  \n  onComplete = () => {\n    if (isFromTo(this.state.progressiveFromTo)) {\n      this.props.onChange(this.state.progressiveFromTo as FromTo);\n    }\n    \n    this.setState({\n      progressiveFromTo: null,\n    });\n    \n    if (this.anchorRef.current) {\n      this.anchorRef.current.close();\n    }\n  };\n  \n  onCancel = () => {\n    this.setState({\n      progressiveFromTo: null,\n    });\n    \n    if (this.anchorRef.current) {\n      this.anchorRef.current.close();\n    }\n  };\n  \n  onAnchorClose = () => {\n    this.setState({\n      progressiveFromTo: null,\n    });\n  };\n}\n\nexport default withConsumer(Component) as React.ComponentType<Props>;","import * as moment from 'moment';\nimport * as React from 'react';\nimport { DateRange, From, FromTo, isFrom, isFromTo, isLatest, Latest } from '../types';\nimport { DateRangeDropDownSelectorButtonProps } from './DateRangeDropDownSelectorButtonProps';\n\nexport function dateRangeToString(dateRange: DateRange | undefined, format: string): string {\n  if (!dateRange) return '-';\n  \n  if (typeof dateRange.description === 'string') {\n    return dateRange.description;\n  }\n  else if (isLatest(dateRange)) {\n    const latest: Latest = dateRange as Latest;\n    return 'date-range-' + latest.latest;\n  }\n  else if (isFromTo(dateRange)) {\n    const fromTo: FromTo = dateRange as FromTo;\n    return moment(fromTo.from).format(format) + ' ~ ' + moment(fromTo.to).format(format);\n  }\n  else if (isFrom(dateRange)) {\n    const from: From = dateRange as From;\n    return moment(from.from).format(format) + ' ~';\n  }\n  \n  //if (isPeriod(dateRange)) {\n  //  const period: Period = dateRange as Period;\n  //}\n  \n  throw new Error('알 수 없는 DateRange 형식. description도 없고, FromTo나 From도 아니다.');\n}\n\nclass Component extends React.PureComponent<DateRangeDropDownSelectorButtonProps, {}> {\n  static displayName: string = 'DateRangeDropDownSelectorButton';\n  \n  render() {\n    const {dateRange, progressiveDateRange, children, ...props} = this.props;\n    \n    return (\n      <button className=\"btn btn-sm white dropdown-toggle\"\n              aria-busy={progressiveDateRange !== null && progressiveDateRange !== undefined}\n              {...props}>\n        {\n          dateRangeToString(\n            progressiveDateRange || dateRange,\n            'LLLL', // TODO format 확인 필요\n          )\n        }\n      </button>\n    );\n  }\n};\n\nexport default Component as React.ComponentType<DateRangeDropDownSelectorButtonProps>;","import * as moment from 'moment';\nimport * as React from 'react';\nimport DropDownAnchor from 'ssenkit.dropdown-anchor';\nimport { ContextState, withConsumer } from '../context';\nimport { DateRange } from '../types';\nimport { DatePresetSelectorProps } from './DatePresetSelectorProps';\nimport './DateRangeDropDownSelector.scss';\nimport DateRangeDropDownSelectorButton from './DateRangeDropDownSelectorButton';\nimport { DateRangeDropDownSelectorButtonProps } from './DateRangeDropDownSelectorButtonProps';\nimport DateRangeSelector from './DateRangeSelector';\n\nexport interface Props {\n  dateRange: DateRange;\n  onChange: (date: DateRange) => void;\n  \n  button?: React.ReactElement<DateRangeDropDownSelectorButtonProps>;\n  children?: React.ReactElement<DatePresetSelectorProps>;\n  \n  disableBefore?: moment.Moment | Date;\n  disableAfter?: moment.Moment | Date;\n  \n  useAlternatePosition?: boolean;\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n  progressiveDateRange: DateRange | null;\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'DateRangeDropDownSelector';\n  \n  private anchorRef: React.RefObject<DropDownAnchor> = React.createRef();\n  \n  static defaultProps: Partial<Props> = {\n    button: <DateRangeDropDownSelectorButton/>,\n    useAlternatePosition: true,\n  };\n  \n  constructor(props: Props & InternalProps) {\n    super(props);\n    \n    this.state = {\n      progressiveDateRange: null,\n    };\n  }\n  \n  render() {\n    return (\n      <DropDownAnchor ref={this.anchorRef}\n                      className={'DateRangeDropDownSelector ' + this.props.config.dateRangeDropDownSelectorClassName}\n                      useOutboundClick={true}\n                      useAlternatePosition={this.props.useAlternatePosition}\n                      button={React.cloneElement(this.props.button as JSX.Element, {\n                        dateRange: this.props.dateRange,\n                        progressiveDateRange: this.state.progressiveDateRange,\n                      })}\n                      onClose={this.onAnchorClose}>\n        <DateRangeSelector dateRange={this.props.dateRange}\n                           disableBefore={this.props.disableBefore}\n                           disableAfter={this.props.disableAfter}\n                           onChange={this.onChange}\n                           onCancel={this.onCancel}\n                           onComplete={this.onComplete}>\n          {this.props.children}\n        </DateRangeSelector>\n      </DropDownAnchor>\n    );\n  }\n  \n  onChange = (progressiveDateRange: DateRange) => {\n    this.setState({\n      progressiveDateRange,\n    });\n  };\n  \n  onComplete = (dateRange: DateRange) => {\n    this.setState({\n      progressiveDateRange: null,\n    });\n    \n    this.props.onChange(dateRange);\n    \n    if (this.anchorRef.current) {\n      this.anchorRef.current.close();\n    }\n  };\n  \n  onCancel = () => {\n    this.setState({\n      progressiveDateRange: null,\n    });\n    \n    if (this.anchorRef.current) {\n      this.anchorRef.current.close();\n    }\n  };\n  \n  onAnchorClose = () => {\n    this.setState({\n      progressiveDateRange: null,\n    });\n  };\n}\n\nexport default withConsumer(Component) as React.ComponentType<Props>;","import { DateInput } from 'ssenkit.date-select';\nimport * as moment from 'moment';\nimport * as React from 'react';\n\ninterface State {\n  date: Date;\n}\n\nexport default class extends React.PureComponent<{}, State> {\n  state: State = {\n    date: new Date,\n  };\n  \n  render() {\n    return (\n      <div>\n        <DateInput date={this.state.date}\n                   onChange={this.onChange}/>\n        <span>Selected: {moment(this.state.date).format('YYYY-MM-DD HH:mm:ss')}</span>\n      </div>\n    );\n  }\n  \n  onChange = (date: Date) => {\n    this.setState({\n      date\n    });\n  };\n}","import * as moment from 'moment';\nimport * as React from 'react';\nimport { DateRange, DateRangeSelector } from 'ssenkit.date-select';\n\ninterface State {\n  progressiveDateRange: DateRange | null;\n  dateRange: DateRange;\n  disableBefore?: moment.Moment | Date;\n  disableAfter?: moment.Moment | Date;\n}\n\nexport default class extends React.PureComponent<{}, State> {\n  state: State = {\n    progressiveDateRange: null,\n    dateRange: {\n      from: moment().subtract(3, 'days').toDate(),\n    },\n    disableBefore: moment().subtract(4, 'years'),\n    disableAfter: moment().add(1, 'years'),\n  };\n  \n  render() {\n    return (\n      <div>\n        <DateRangeSelector dateRange={this.state.dateRange}\n                           disableBefore={this.state.disableBefore}\n                           disableAfter={this.state.disableAfter}\n                           onChange={this.onChange}\n                           onCancel={this.onCancel}\n                           onComplete={this.onComplete}/>\n        <div>\n          Progressive: {JSON.stringify(this.state.progressiveDateRange)}\n        </div>\n        <div>\n          Selected: {JSON.stringify(this.state.dateRange)}\n        </div>\n      </div>\n    );\n  }\n  \n  onChange = (dateRange: DateRange) => {\n    this.setState({\n      progressiveDateRange: dateRange,\n    });\n  };\n  \n  onComplete = (dateRange: DateRange) => {\n    this.setState({\n      dateRange,\n      progressiveDateRange: null,\n    });\n  };\n  \n  onCancel = () => {\n    this.setState({\n      progressiveDateRange: null,\n    });\n  };\n}","import * as moment from 'moment';\nimport * as React from 'react';\nimport { DateRange, DateRangeDropDownSelector } from 'ssenkit.date-select';\n\ninterface State {\n  dateRange: DateRange;\n  disableBefore?: moment.Moment | Date;\n  disableAfter?: moment.Moment | Date;\n}\n\nexport default class extends React.PureComponent<{}, State> {\n  state: State = {\n    dateRange: {\n      from: moment().subtract(3, 'days').toDate(),\n    },\n    disableBefore: moment().subtract(4, 'years'),\n    disableAfter: moment().add(1, 'years'),\n  };\n  \n  render() {\n    return (\n      <div>\n        <DateRangeDropDownSelector dateRange={this.state.dateRange}\n                                   disableBefore={this.state.disableBefore}\n                                   disableAfter={this.state.disableAfter}\n                                   onChange={this.onChange}/>\n        <span>Selected: {JSON.stringify(this.state.dateRange)}</span>\n      </div>\n    );\n  }\n  \n  onChange = (dateRange: DateRange) => {\n    this.setState({dateRange});\n  };\n}","import { DateSelector } from 'ssenkit.date-select';\nimport * as React from 'react';\nimport * as moment from 'moment';\n\ninterface State {\n  date: Date;\n}\n\nexport default class extends React.PureComponent<{}, State> {\n  state: State = {\n    date: new Date,\n  };\n  \n  render() {\n    return (\n      <div>\n        <DateSelector date={this.state.date}\n                      onChange={this.onChange}/>\n        <span>Selected: {moment(this.state.date).format('YYYY-MM-DD HH:mm:ss')}</span>\n      </div>\n    );\n  }\n  \n  onChange = (date: Date) => {\n    this.setState({\n      date\n    });\n  };\n}","import * as moment from 'moment';\nimport * as React from 'react';\nimport { DateTimeInput } from 'ssenkit.date-select';\n\ninterface State {\n  datetime: Date;\n  disableBefore: moment.Moment | Date;\n  disableAfter: moment.Moment | Date;\n}\n\nexport default class extends React.PureComponent<{}, State> {\n  state: State = {\n    datetime: new Date,\n    disableBefore: moment().subtract(10, 'days'),\n    disableAfter: moment().add(10, 'days'),\n  };\n  \n  render() {\n    return (\n      <div>\n        <DateTimeInput date={this.state.datetime}\n                       disableBefore={this.state.disableBefore}\n                       disableAfter={this.state.disableAfter}\n                       onChange={this.onChange}/>\n        <span>Selected: {moment(this.state.datetime).format('YYYY-MM-DD HH:mm:ss')}</span>\n        <span>{' '}</span>\n        <span>Disable: {moment(this.state.disableBefore).format('YYYY-MM-DD HH:mm:ss')} / {moment(this.state.disableAfter).format('YYYY-MM-DD HH:mm:ss')}</span>\n      </div>\n    );\n  }\n  \n  onChange = (datetime: Date) => {\n    this.setState({\n      datetime\n    });\n  };\n}","import { DateTimeSelector } from 'ssenkit.date-select';\nimport * as React from 'react';\nimport * as moment from 'moment';\n\ninterface State {\n  date: Date;\n}\n\nexport default class extends React.PureComponent<{}, State> {\n  state: State = {\n    date: new Date,\n  };\n  \n  render() {\n    return (\n      <div>\n        <DateTimeSelector date={this.state.date}\n                          onChange={this.onChange}/>\n        <span>Selected: {moment(this.state.date).format('YYYY-MM-DD HH:mm:ss')}</span>\n      </div>\n    );\n  }\n  \n  onChange = (date: Date) => {\n    this.setState({\n      date\n    });\n  };\n}","import { FromTo, FromToDateTimeSelector } from 'ssenkit.date-select';\nimport * as moment from 'moment';\nimport * as React from 'react';\n\ninterface State {\n  fromTo: FromTo;\n}\n\nexport default class extends React.PureComponent<{}, State> {\n  state: State = {\n    fromTo: {\n      from: moment().subtract(4, 'days').startOf('day').toDate(),\n      to: new Date(),\n    },\n  };\n  \n  render() {\n    return (\n      <div>\n        <FromToDateTimeSelector fromTo={this.state.fromTo} onChange={this.onChange}/>\n        <span>Selected: {moment(this.state.fromTo.from).format('YYYY-MM-DD HH:mm:ss')} ~ {moment(this.state.fromTo.to).format('YYYY-MM-DD HH:mm:ss')}</span>\n      </div>\n    );\n  }\n  \n  onChange = (fromTo: FromTo) => {\n    this.setState({fromTo});\n  };\n}","import { MonthSelector } from 'ssenkit.date-select';\nimport * as moment from 'moment';\nimport * as React from 'react';\n\ninterface State {\n  date: Date;\n  disableBefore: moment.Moment | Date;\n  disableAfter: moment.Moment | Date;\n}\n\nexport default class extends React.PureComponent<{}, State> {\n  state: State = {\n    date: new Date,\n    disableBefore: moment().subtract(10, 'years'),\n    disableAfter: moment().add(5, 'years'),\n  };\n  \n  render() {\n    return (\n      <div>\n        <MonthSelector date={this.state.date}\n                       disableBefore={this.state.disableBefore}\n                       disableAfter={this.state.disableAfter}\n                       onChange={this.onChange}/>\n        <span>Selected: {moment(this.state.date).format('YYYY-MM')}</span>\n      </div>\n    );\n  }\n  \n  onChange = (year: number, month: number) => {\n    this.setState({\n      date: moment(this.state.date).clone()\n        .year(year)\n        .month(month - 1)\n        .toDate(),\n    });\n  };\n}","import { TimeInput } from 'ssenkit.date-select';\nimport * as moment from 'moment';\nimport * as React from 'react';\n\ninterface State {\n  time: string;\n}\n\nexport default class extends React.PureComponent<{}, State> {\n  state: State = {\n    time: moment().format('HH:mm:ss'),\n  };\n  \n  render() {\n    return (\n      <div>\n        <TimeInput time={this.state.time}\n                   onChange={this.onChange}/>\n        <span>Selected: {this.state.time}</span>\n      </div>\n    );\n  }\n  \n  onChange = (time: string) => {\n    this.setState({\n      time\n    });\n  };\n}","import { FromTo, FromToDateTimeDropDownSelector } from 'ssenkit.date-select';\nimport * as moment from 'moment';\nimport * as React from 'react';\n\ninterface State {\n  fromTo: FromTo;\n}\n\nexport default class extends React.PureComponent<{}, State> {\n  state: State = {\n    fromTo: {\n      from: moment().subtract(4, 'days').startOf('day').toDate(),\n      to: new Date(),\n    },\n  };\n  \n  render() {\n    return (\n      <div>\n        <FromToDateTimeDropDownSelector fromTo={this.state.fromTo} onChange={this.onChange}/>\n        <span>Selected: {moment(this.state.fromTo.from).format('YYYY-MM-DD HH:mm:ss')} ~ {moment(this.state.fromTo.to).format('YYYY-MM-DD HH:mm:ss')}</span>\n      </div>\n    );\n  }\n  \n  onChange = (fromTo: FromTo) => {\n    this.setState({fromTo});\n  };\n}","import * as React from 'react';\nimport * as moment from 'moment';\nimport { Config, ConfigProvider, DateSelector } from 'ssenkit.date-select';\n\nconst ko: Partial<Config> = {\n  monthSelectorYearLabelFunction: year => year.toString() + '년',\n  monthSelectorMonthLabelFunction: month => month.toString() + '월',\n  dateSelectorDayLabelFunction: (day: 'sun' | 'mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat') => {\n    switch (day) {\n      case 'sun':\n        return '일';\n      case 'mon':\n        return '월';\n      case 'tue':\n        return '화';\n      case 'wed':\n        return '수';\n      case 'thu':\n        return '목';\n      case 'fri':\n        return '금';\n      case 'sat':\n        return '토';\n      default:\n        throw new Error('Unknown day');\n    }\n  },\n  dateSelectorPrevMonthButton: <button>이전</button>,\n  dateSelectorNextMonthButton: <button>다음</button>,\n};\n\nexport interface Props {\n}\n\ninterface InternalProps {\n}\n\ninterface State {\n  date: Date;\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'ConfigProvider.sample';\n  \n  state: State = {\n    date: new Date,\n  };\n  \n  render() {\n    return (\n      <div>\n        <div>\n          <DateSelector date={this.state.date}\n                        onChange={this.onChange}/>\n        </div>\n        <ConfigProvider config={ko}>\n          <div>\n            <DateSelector date={this.state.date}\n                          onChange={this.onChange}/>\n          </div>\n        </ConfigProvider>\n        \n        <span>Selected: {moment(this.state.date).format('YYYY-MM-DD HH:mm:ss')}</span>\n      </div>\n    );\n  }\n  \n  onChange = (date: Date) => {\n    this.setState({\n      date\n    });\n  };\n}\n\nexport default Component as React.ComponentType<Props>;","import * as React from 'react';\nimport { Description, Source } from 'seed/components';\nimport DateInput from './DateInput.sample';\nimport DateRangeSelector from './DateRangeSelector.sample';\nimport DateRangeDropDownSelector from './DateRangeDropDownSelector.sample';\nimport DateSelector from './DateSelector.sample';\nimport DateTimeInput from './DateTimeInput.sample';\nimport DateTimeSelector from './DateTimeSelector.sample';\nimport FromToDateTimeSelector from './FromToDateTimeSelector.sample';\nimport MonthSelector from './MonthSelector.sample';\nimport TimeInput from './TimeInput.sample';\nimport FromToDateTimeDropDownSelector from './FromToDateTimeDropDownSelector.sample';\nimport ConfigProvider from './ConfigProvider.sample';\n\nexport default () => (\n  <div className=\"app-body\">\n    <div className=\"page-header\">\n      <div className=\"row\">\n        <h1><code>import {'{ DateRangeDropDownSelector }'} from 'ssenkit.date-select'</code></h1>\n      </div>\n    </div>\n    <div className=\"page-body ph-30 mv-30\">\n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./MonthSelector.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <MonthSelector/>\n          <Source source={require('!!raw-loader!./MonthSelector.sample')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./DateInput.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <DateInput/>\n          <Source source={require('!!raw-loader!./DateInput.sample')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./TimeInput.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <TimeInput/>\n          <Source source={require('!!raw-loader!./TimeInput.sample')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./DateTimeInput.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <DateTimeInput/>\n          <Source source={require('!!raw-loader!./DateTimeInput.sample')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./DateSelector.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <DateSelector/>\n          <Source source={require('!!raw-loader!./DateSelector.sample')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./DateTimeSelector.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <DateTimeSelector/>\n          <Source source={require('!!raw-loader!./DateTimeSelector.sample')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./FromToDateTimeSelector.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <FromToDateTimeSelector/>\n          <Source source={require('!!raw-loader!./FromToDateTimeSelector.sample')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./FromToDateTimeDropDownSelector.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <FromToDateTimeDropDownSelector/>\n          <Source source={require('!!raw-loader!./FromToDateTimeDropDownSelector.sample')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./DateRangeSelector.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <DateRangeSelector/>\n          <Source source={require('!!raw-loader!./DateRangeSelector.sample')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./DateRangeDropDownSelector.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <DateRangeDropDownSelector/>\n          <Source source={require('!!raw-loader!./DateRangeDropDownSelector.sample')}/>\n        </div>\n      </div>\n  \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./ConfigProvider.description.md')}/>\n        </div>\n      </div>\n  \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <ConfigProvider/>\n          <Source source={require('!!raw-loader!./ConfigProvider.sample')}/>\n        </div>\n      </div>\n    </div>\n  </div>\n)","import { TemplateParams } from './types';\n\nexport default ({body, initialState}: TemplateParams) => `\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=UTF-8>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"libs/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\"/>\n    <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/default.min.css\"/>\n    <base href=\"/\"/>\n    <script src=\"libs/jquery.js\"></script>\n    <script src=\"libs/jquery-ui.js\"></script>\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js\"></script>\n    <title>Title...</title>\n    ${ typeof initialState === 'string' ? `<script>window.__INITIAL_STATE__=${initialState.replace(/</g, '\\\\u003c')}</script>` : '' }\n  </head>\n  \n  <body>\n    <div id=\"app\">${body}</div>\n  \n    <script src=\"vendor.js\"></script>\n    <script src=\"init.js\"></script>\n    <script src=\"style.js\"></script>\n    <!-- And if you use css themes you need require add their js files. -->\n    <script src=\"app.js\"></script>\n  </body>\n</html>\n`","import { faFlask, faHome, faToolbox } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nexport interface Props {\n}\n\ninterface InternalProps {\n}\n\ninterface State {\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'RouterNavigation';\n  \n  render() {\n    return (\n      <ul>\n        <li>\n          <Link to=\"/\">\n            <h3>\n              <FontAwesomeIcon icon={faHome} fixedWidth={true}/> Home\n            </h3>\n          </Link>\n        </li>\n        <li>\n          <h3>\n            <FontAwesomeIcon icon={faToolbox} fixedWidth={true}/> SSENKIT\n          </h3>\n          <ul>\n            <li>\n              <Link to=\"/ssenkit/autocomplete-text-input\">\n                Autocomplete Text Input\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/ssenkit/date-select\">\n                Date Select\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/ssenkit/dropdown-anchor\">\n                Dropdown Anchor\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/ssenkit/modal\">\n                Modal\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/ssenkit/restricted-text-input\">\n                Restricted Text Input\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/ssenkit/recontext\">\n                ReContext\n              </Link>\n            </li>\n          </ul>\n        </li>\n        <li>\n          <h3>\n            <FontAwesomeIcon icon={faFlask} fixedWidth={true}/> RESEARCH\n          </h3>\n          <ul>\n            <li>\n              <Link to=\"/research/numeral\">\n                Numeral.js\n              </Link>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default Component as React.ComponentClass<Props>;","import RouterNavigation from 'app/components/route/RouterNavigation';\nimport * as React from 'react';\nimport { LanguageChangeButton, TimezoneChangeSelect } from 'seed/components';\nimport './index.scss';\nimport * as styles from './layout.module.scss';\n\nexport interface Props {\n  routerContents: React.ReactElement<{}>;\n}\n\ninterface InternalProps {\n}\n\ninterface State {\n}\n\nclass Component extends React.Component<Props & InternalProps, State> {\n  static displayName: string = 'app.components.main';\n  \n  render() {\n    return (\n      <React.Fragment>\n        {/*<div className={styles.header}>*/}\n        {/*<LanguageChangeButton/>*/}\n        {/*<SignButton/>*/}\n        {/*<TimezoneChangeSelect/>*/}\n        {/*</div>*/}\n        \n        <div className={styles.content}>\n          <div className={styles.nav}>\n            <RouterNavigation/>\n            <hr/>\n            <LanguageChangeButton/>\n            <TimezoneChangeSelect/>\n          </div>\n          \n          <div className={styles.body}>\n            {this.props.children}\n            {this.props.routerContents}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Component as React.ComponentClass<Props>;","import * as React from 'react';\nimport { RouteComponentProps } from 'react-router';\n\n// tslint:disable\n\ninterface Props {\n  props: object;\n  load: Promise<{default: React.ComponentType<any>}>;\n}\n\ninterface State {\n  Component: React.ComponentType<any> | null;\n}\n\nclass RouterRenderContainer extends React.PureComponent<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    \n    this.state = {\n      Component: null,\n    };\n  }\n  \n  render() {\n    return this.state.Component\n      ? React.createElement(this.state.Component, this.props.props)\n      : null;\n  }\n  \n  componentDidMount() {\n    this.props.load.then(({default: Component}) => {\n      this.setState({Component});\n    });\n  }\n}\n\nexport default (load: () => Promise<{default: React.ComponentType<any>}>): ((props: RouteComponentProps<any>) => React.ReactNode) => {\n  return props => React.createElement(RouterRenderContainer, {\n    props,\n    load: load(),\n  });\n}","import { SyncRouterStore } from 'ssenkit.router-store';\n\nexport default new SyncRouterStore([\n  {\n    path: '/',\n    exact: true,\n    component: require('seed/router-components/main').default,\n  },\n  {\n    path: '/ssenkit/autocomplete-text-input',\n    component: require('ssenkit/router-components/autocomplete-text-input').default,\n  },\n  {\n    path: '/ssenkit/date-select',\n    component: require('ssenkit/router-components/date-select').default,\n  },\n  {\n    path: '/ssenkit/dropdown-anchor',\n    component: require('ssenkit/router-components/dropdown-anchor').default,\n  },\n  {\n    path: '/ssenkit/modal',\n    component: require('ssenkit/router-components/modal').default,\n  },\n  {\n    path: '/ssenkit/restricted-text-input',\n    component: require('ssenkit/router-components/restricted-text-input').default,\n  },\n  {\n    path: '/ssenkit/recontext',\n    component: require('ssenkit/router-components/recontext').default,\n  },\n  {\n    path: '/research/numeral',\n    component: require('research/numeral').default,\n  },\n]);","import * as React from 'react';\nimport { matchPath, Route, RouteProps } from 'react-router';\nimport render from './render';\n\n// tslint:disable\nexport interface AsyncRouterStoreConfig {\n  path: string;\n  exact?: boolean;\n  strict?: boolean;\n  component: () => Promise<{default: React.ComponentType<any>}>;\n}\n\nexport default class {\n  private preloadIndex: Map<AsyncRouterStoreConfig, React.ComponentType<any>>;\n  \n  constructor(private config: AsyncRouterStoreConfig[]) {\n    this.preloadIndex = new Map<AsyncRouterStoreConfig, React.ComponentType<any>>();\n  }\n  \n  preload = (location: string) => {\n    return new Promise((resolve, reject) => {\n      const config: AsyncRouterStoreConfig | undefined = this.config.find(config => {\n        const props: RouteProps = {};\n        props.path = config.path;\n        props.exact = config.exact === true;\n        props.strict = config.strict === true;\n        return matchPath(location, props) !== null;\n      });\n      \n      if (config) {\n        config.component().then(({default: Component}) => {\n          this.preloadIndex.set(config, Component);\n          resolve();\n        });\n      } else {\n        reject(new Error(`Can't find matched route. ${location}`));\n      }\n    });\n  };\n  \n  getRoute = (path: string) => {\n    const config: AsyncRouterStoreConfig | undefined = this.config.find(config => config.path === path);\n    \n    if (config) {\n      const props: RouteProps = {};\n      props.path = config.path;\n      props.exact = config.exact === true;\n      props.strict = config.strict === true;\n      \n      if (this.preloadIndex.has(config)) {\n        props.component = this.preloadIndex.get(config);\n      } else {\n        props.render = render(config.component);\n      }\n      \n      return React.createElement(Route, props);\n    } else {\n      throw new Error(`Can't find matched path. ${path}`);\n    }\n  };\n}","import * as React from 'react';\nimport { Route, RouteProps } from 'react-router';\n\n// tslint:disable\nexport interface SyncRouterStoreConfig {\n  path: string;\n  exact?: boolean;\n  strict?: boolean;\n  component: React.ComponentType<any>;\n}\n\nexport default class {\n  constructor(private config: SyncRouterStoreConfig[]) {\n  }\n  \n  getRoute = (path: string) => {\n    const config: SyncRouterStoreConfig | undefined = this.config.find(config => config.path === path);\n    \n    if (config) {\n      const props: RouteProps = {};\n      props.path = config.path;\n      props.exact = config.exact === true;\n      props.strict = config.strict === true;\n      props.component = config.component;\n      \n      return React.createElement(Route, props);\n    } else {\n      throw new Error(`Can't find matched path. ${path}`);\n    }\n  };\n}","import routerStore from 'app/route/syncRouterStore';\nimport * as React from 'react';\n\nexport interface Props {\n\n}\n\ninterface InternalProps {\n\n}\n\ninterface State {\n}\n\nclass Component extends React.Component<Props & InternalProps, State> {\n  static displayName: string = 'RouterContents';\n  \n  render() {\n    return (\n      <React.Fragment>\n        {routerStore.getRoute('/')}\n        {routerStore.getRoute('/ssenkit/autocomplete-text-input')}\n        {routerStore.getRoute('/ssenkit/date-select')}\n        {routerStore.getRoute('/ssenkit/dropdown-anchor')}\n        {routerStore.getRoute('/ssenkit/modal')}\n        {routerStore.getRoute('/ssenkit/restricted-text-input')}\n        {routerStore.getRoute('/ssenkit/recontext')}\n        {routerStore.getRoute('/research/numeral')}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Component as React.ComponentClass<Props>;","import Main from 'app/components/main';\nimport RouterContents from 'app/components/route/RouterContents';\nimport { ContextState, withConsumer } from 'app/context';\nimport * as React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { StaticRouter } from 'react-router-dom';\nimport { messages } from 'seed/data';\n\nexport interface Props {\n  url: string;\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'App';\n  \n  render() {\n    return (\n      <IntlProvider locale={this.props.language} messages={messages[this.props.language]}>\n        <StaticRouter location={this.props.url} context={{}}>\n          <Main routerContents={<RouterContents/>}/>\n        </StaticRouter>\n      </IntlProvider>\n    );\n  }\n}\n\nexport default withConsumer<Props & InternalProps>(Component) as React.ComponentClass<Props>;","import { Provider } from 'app/context';\nimport { cookieKeys } from 'app/data';\nimport * as express from 'express';\nimport * as React from 'react';\nimport { renderToString } from 'react-dom/server';\nimport { InitialState, Language, User } from 'seed/data';\nimport * as templates from 'server/templates';\nimport { App } from '../components';\n\nconst router: express.Router = express.Router();\n\nfunction render(req: express.Request, contentsState: Partial<InitialState>): string {\n  // create state\n  const language: Language = req.cookies[cookieKeys.locale] || 'en';\n  const user: User = {firstName: 'Seoyeon', lastName: 'Lee', age: 38};\n  const timezone: string = req.cookies[cookieKeys.timezone] || 'Asia/Seoul';\n  \n  const initialState: InitialState = Object.assign({\n    language,\n    user,\n  }, contentsState);\n  \n  const body: string = renderToString((\n    <Provider initialState={initialState} currentTimezone={timezone}>\n      <App url={req.url}/>\n    </Provider>\n  ));\n  \n  return templates.app({\n    body,\n    initialState: JSON.stringify(initialState),\n  });\n}\n\nrouter.get('/', (req, res) => {\n  res.send(render(req, {}));\n});\n\nrouter.get('/sample', (req, res) => {\n  res.send(render(req, {\n    sample: {\n      testString: 'Server Initial Value',\n    },\n  }));\n});\n\nrouter.get('/ssenkit/*', (req, res) => {\n  res.send(render(req, {}));\n});\n\nrouter.get('/research/*', (req, res) => {\n  res.send(render(req, {}));\n});\n\nexport default router;","import * as bodyParser from 'body-parser';\nimport * as cookieParser from 'cookie-parser';\nimport * as express from 'express';\nimport * as routers from 'server/routers';\n\nconst app: express.Express = express();\n\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(bodyParser.json());\napp.use(cookieParser());\n\napp.use(routers.app);\n\nexport default app;","import * as moment from 'moment-timezone';\nimport * as React from 'react';\nimport app from 'server';\nimport * as config from '../../../config.json';\n\nconst port: number = process.env.PORT || config.server.port;\n\napp.listen(port, () => {\n  console.log(`SSR server started ${port} [${moment().format('HH:mm:ss')}]`);\n});","import { ContextState } from '../context';\n\nexport default () => ({b, updateB}: ContextState) => {\n  updateB(b + 1);\n}","import produce from 'immer';\n\nexport interface Test {\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport const updateX: (test: Test) => (x: number) => Test = test => x => {\n  return produce(test, draft => {\n    draft.x = x;\n    draft.z = x + draft.y;\n  });\n};\n\nexport const updateY: (test: Test) => (y: number) => Test = test => y => {\n  return produce(test, draft => {\n    draft.y = y;\n    draft.z = draft.x + y;\n  });\n};","import produce from 'immer';\nimport * as React from 'react';\nimport * as Recontext from 'recontext';\nimport { init } from './actions';\nimport { Test, updateX, updateY } from './data';\n\ntype ContextState = Recontext.ContextState<{\n  a: number;\n  b: number;\n  c: number;\n  updateA: (a: number) => void;\n  updateB: (b: number) => void;\n  test: Test;\n  updateX: (x: number) => void;\n  updateY: (y: number) => void;\n}>;\n\n// @ts-ignore\nconst {Provider: ReactProvider, Consumer} = React.createContext<ContextState>();\n\nclass Provider extends Recontext.Provider<ContextState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      contextState: {\n        a: 1,\n        b: 2,\n        c: 3,\n        updateA: this.updateA,\n        updateB: this.updateB,\n        dispatch: this.dispatch,\n        subscribe: this.subscribe,\n        test: {\n          x: 10,\n          y: 20,\n          z: 30,\n        },\n        updateX: this.bindReducer(({test}) => test)(updateX)(test => ({test})),\n        updateY: this.bindReducer(({test}) => test)(updateY)(test => ({test})),\n      },\n    };\n  }\n  \n  render() {\n    return (\n      <ReactProvider value={this.state.contextState}>\n        {this.props.children}\n      </ReactProvider>\n    );\n  }\n  \n  componentDidMount() {\n    this.dispatch(init());\n  }\n  \n  updateA = (a: number) => {\n    this.setContextState(({b}) => {\n      return {\n        a,\n        c: a + b,\n      };\n    });\n  };\n  \n  updateB = (b: number) => {\n    this.setState({\n      contextState: produce(this.state.contextState, draft => {\n        draft.b = b;\n        draft.c = draft.a + b;\n      }),\n    });\n  };\n}\n\nfunction withConsumer<Props>(Component: React.ComponentType<Props>): React.ComponentType<Props & ContextState> {\n  return React.forwardRef((props, ref) => (\n    <Consumer>\n      {\n        state => <Component {...state} {...props} ref={ref}/>\n      }\n    </Consumer>\n  ));\n}\n\nexport {\n  Provider,\n  Consumer,\n  withConsumer,\n  ContextState,\n};","import { ContextState } from '../context';\n\nexport default () => ({subscribe}: ContextState) => {\n  const unsubscribe: () => void = subscribe(({a}, prevState) => {\n    if (a !== prevState.a) {\n      console.log('init.ts..()', a, prevState.a);\n    }\n  });\n  \n  return () => {\n    console.log('init.ts..() unsubscribe...');\n    unsubscribe();\n  };\n}","import * as React from 'react';\nimport { Consumer, ContextState } from '../context';\n\nexport interface Props {\n}\n\ninterface InternalProps {\n}\n\ninterface State {\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'Print';\n  \n  render() {\n    return (\n      <Consumer>\n        {\n          ({a, b, c, test}: ContextState) => (\n            <div>\n              <p>\n                {a} + {b} = {c}\n              </p>\n              <p>\n                {test.x} + {test.y} = {test.z}\n              </p>\n            </div>\n          )\n        }\n      </Consumer>\n    );\n  }\n}\n\nexport default Component as React.ComponentType<Props>;","import * as React from 'react';\nimport { ContextState, withConsumer } from '../context';\n\nexport interface Props {\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'UpdateA';\n  \n  render() {\n    return (\n      <div>\n        <button onClick={this.update}>\n          Update A\n        </button>\n      </div>\n    );\n  }\n  \n  update = () => {\n    this.props.updateA(Math.floor(Math.random() * 10000));\n  };\n}\n\nexport default withConsumer<Props>(Component) as React.ComponentType<Props>;","import * as React from 'react';\nimport { updateB } from '../actions';\nimport { ContextState, withConsumer } from '../context';\n\nexport interface Props {\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'UpdateB';\n  \n  render() {\n    return (\n      <div>\n        <button onClick={this.update}>\n          Update B\n        </button>\n      </div>\n    );\n  }\n  \n  update = () => {\n    this.props.dispatch(updateB());\n  };\n}\n\nexport default withConsumer<Props>(Component) as React.ComponentType<Props>;","import * as React from 'react';\nimport { ContextState, withConsumer } from '../context';\n\nexport interface Props {\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'UpdateX';\n  \n  render() {\n    return (\n      <div>\n        <button onClick={this.update}>\n          Update X\n        </button>\n      </div>\n    );\n  }\n  \n  update = () => {\n    this.props.updateX(Math.floor(Math.random() * 10000));\n  };\n}\n\nexport default withConsumer<Props>(Component) as React.ComponentType<Props>;","import * as React from 'react';\nimport { ContextState, withConsumer } from '../context';\n\nexport interface Props {\n}\n\ninterface InternalProps extends ContextState {\n}\n\ninterface State {\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'UpdateX';\n  \n  render() {\n    return (\n      <div>\n        <button onClick={this.update}>\n          Update Y\n        </button>\n      </div>\n    );\n  }\n  \n  update = () => {\n    this.props.updateY(Math.floor(Math.random() * 10000));\n  };\n}\n\nexport default withConsumer<Props>(Component) as React.ComponentType<Props>;","import * as React from 'react';\nimport { Print, UpdateA, UpdateB, UpdateX, UpdateY } from './components';\nimport { Provider } from './context';\n\nexport interface Props {\n\n}\n\ninterface InternalProps {\n\n}\n\ninterface State {\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'Sample.sample';\n  \n  render() {\n    return (\n      <Provider>\n        <Print/>\n        <UpdateA/>\n        <UpdateB/>\n        <UpdateX/>\n        <UpdateY/>\n      </Provider>\n    );\n  }\n}\n\nexport default Component as React.ComponentType<Props>;","import * as React from 'react';\nimport { Description, Source } from 'seed/components';\nimport Sample from './Sample.sample';\n\nexport default () => (\n  <div className=\"app-body\">\n    <div className=\"page-header\">\n      <div className=\"row\">\n        <h1><code>import RestrictedTextInput from 'ssenkit.restricted-text-input'</code></h1>\n      </div>\n    </div>\n    <div className=\"page-body ph-30 mv-30\">\n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./Sample.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Sample/>\n          \n          <h4>context</h4>\n          <Source source={require('!!raw-loader!./Sample.sample/context')}/>\n          \n          <h4>actions/updateB</h4>\n          <Source source={require('!!raw-loader!./Sample.sample/actions/updateB')}/>\n  \n          <h4>actions/init</h4>\n          <Source source={require('!!raw-loader!./Sample.sample/actions/init')}/>\n          \n          <h4>components/Print</h4>\n          <Source source={require('!!raw-loader!./Sample.sample/components/Print')}/>\n          \n          <h4>components/UpdateA</h4>\n          <Source source={require('!!raw-loader!./Sample.sample/components/UpdateA')}/>\n          \n          <h4>components/UpdateB</h4>\n          <Source source={require('!!raw-loader!./Sample.sample/components/UpdateB')}/>\n  \n          <h4>components/UpdateX</h4>\n          <Source source={require('!!raw-loader!./Sample.sample/components/UpdateX')}/>\n  \n          <h4>components/UpdateY</h4>\n          <Source source={require('!!raw-loader!./Sample.sample/components/UpdateY')}/>\n  \n          <h4>data/test</h4>\n          <Source source={require('!!raw-loader!./Sample.sample/data/test')}/>\n          \n          <h4>index</h4>\n          <Source source={require('!!raw-loader!./Sample.sample')}/>\n        </div>\n      </div>\n    </div>\n  </div>\n)","import * as React from 'react';\n\nfunction split(val: string): string[] {\n  return val.split(/,\\s*/);\n}\n\nexport interface Props {\n  menuClassName?: string;\n  className?: string;\n  \n  value?: string;\n  onChange: (value: string) => void;\n  onSubmit: (value: string) => void;\n  \n  minLength?: number;\n  source: (request: {term: string}, response: (data: object) => void) => void;\n  children?: React.ReactElement<React.InputHTMLAttributes<HTMLInputElement>>;\n}\n\nexport default class extends React.PureComponent<Props, {}> {\n  private inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n  private lastDisaptchedText: string = '';\n  \n  static defaultProps: Partial<Props> = {\n    minLength: 2,\n    children: <input type=\"text\"/>,\n  };\n  \n  render() {\n    return React.cloneElement(this.props.children as JSX.Element, {\n      ref: this.inputRef,\n      defaultValue: this.props.value,\n      onChange: this.onInputChange,\n      onKeyDown: this.onInputSubmit,\n    });\n  }\n  \n  componentDidMount() {\n    if (!this.inputRef.current) return;\n    \n    const self: this = this;\n    \n    const options: JQueryUI.AutocompleteOptions = {\n      minLength: this.props.minLength,\n      source: this.props.source,\n      focus: () => {\n        // prevent value inserted on focus\n        return false;\n      },\n      select: function (event: Event, ui: JQueryUI.AutocompleteUIParams) {\n        const terms: string[] = split(this.value);\n        // remove the current input\n        terms.pop();\n        // add the selected item\n        terms.push(ui.item.value);\n        // add placeholder to get the comma-and-space at the end\n        terms.push('');\n        this.value = terms.join(', ');\n        \n        self.dispatchChange(this.value);\n        return false;\n      },\n      change: this.onBlur,\n    };\n    \n    const hasInputClassName: boolean = typeof this.props.className === 'string';\n    const hasMenuClassName: boolean = typeof this.props.menuClassName === 'string';\n    \n    if (hasInputClassName || hasMenuClassName) {\n      const classes: object = {};\n      if (hasInputClassName) classes['ui-autocomplete-input'] = this.props.className;\n      if (hasMenuClassName) classes['ui-autocomplete'] = this.props.menuClassName;\n      options['classes'] = classes;\n    }\n    \n    $(this.inputRef.current)\n      .on('keydown', event => {\n        if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete('instance').menu.active) {\n          event.preventDefault();\n        }\n      })\n      .autocomplete(options);\n  }\n  \n  componentDidUpdate() {\n    if (this.inputRef.current && this.inputRef.current.value !== this.props.value) {\n      this.inputRef.current.value = this.props.value || '';\n    }\n  }\n  \n  onInputChange = (event: React.KeyboardEvent<{value: string}>) => {\n    this.dispatchChange(event.currentTarget.value);\n  };\n  \n  onInputSubmit = (event: React.KeyboardEvent<{value: string}>) => {\n    if (event.keyCode === 13) {\n      this.props.onSubmit(event.currentTarget.value);\n    }\n  };\n  \n  onBlur = (event: Event) => {\n    if (event.currentTarget && typeof event.currentTarget['value'] === 'string') {\n      this.dispatchChange(event.currentTarget['value']);\n    }\n  };\n  \n  dispatchChange = (text: string) => {\n    if (this.lastDisaptchedText !== text) {\n      this.props.onChange(text);\n      this.lastDisaptchedText = text;\n    }\n  };\n}","import * as React from 'react';\n\nexport interface Props {\n  menuClassName?: string;\n  className?: string;\n  \n  value?: string;\n  onChange: (value: string) => void;\n  onSubmit: (value: string) => void;\n  \n  minLength?: number;\n  source: (request: {term: string}, response: (data: object) => void) => void;\n  children?: React.ReactElement<React.InputHTMLAttributes<HTMLInputElement>>;\n}\n\nexport default class extends React.PureComponent<Props, {}> {\n  private inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n  private lastDisaptchedText: string = '';\n  \n  static defaultProps: Partial<Props> = {\n    minLength: 2,\n    children: <input type=\"text\"/>,\n  };\n  \n  render() {\n    return React.cloneElement(this.props.children as JSX.Element, {\n      ref: this.inputRef,\n      defaultValue: this.props.value,\n      onChange: this.onInputChange,\n      onKeyDown: this.onInputSubmit,\n    });\n  }\n  \n  componentDidMount() {\n    if (!this.inputRef.current) return;\n    \n    const self: this = this;\n    \n    const options: JQueryUI.AutocompleteOptions = {\n      minLength: this.props.minLength,\n      source: this.props.source,\n      focus: () => {\n        // prevent value inserted on focus\n        return false;\n      },\n      select: function (event: Event, ui: JQueryUI.AutocompleteUIParams) {\n        self.dispatchChange(ui.item.value);\n        return false;\n      },\n      change: this.onBlur,\n    };\n    \n    const hasInputClassName: boolean = typeof this.props.className === 'string';\n    const hasMenuClassName: boolean = typeof this.props.menuClassName === 'string';\n    \n    if (hasInputClassName || hasMenuClassName) {\n      const classes: object = {};\n      if (hasInputClassName) classes['ui-autocomplete-input'] = this.props.className;\n      if (hasMenuClassName) classes['ui-autocomplete'] = this.props.menuClassName;\n      options['classes'] = classes;\n    }\n    \n    $(this.inputRef.current)\n      .on('keydown', event => {\n        if (event.keyCode === $.ui.keyCode.TAB && $(this).autocomplete('instance').menu.active) {\n          event.preventDefault();\n        }\n      })\n      .autocomplete(options);\n  }\n  \n  componentDidUpdate() {\n    if (this.inputRef.current && this.inputRef.current.value !== this.props.value) {\n      this.inputRef.current.value = this.props.value || '';\n    }\n  }\n  \n  onInputChange = (event: React.KeyboardEvent<{value: string}>) => {\n    this.dispatchChange(event.currentTarget.value);\n  };\n  \n  onInputSubmit = (event: React.KeyboardEvent<{value: string}>) => {\n    if (event.keyCode === 13) {\n      this.props.onSubmit(event.currentTarget.value);\n    }\n  };\n  \n  onBlur = (event: Event) => {\n    if (event.currentTarget && typeof event.currentTarget['value'] === 'string') {\n      this.dispatchChange(event.currentTarget['value']);\n    }\n  };\n  \n  dispatchChange = (text: string) => {\n    if (this.lastDisaptchedText !== text) {\n      this.props.onChange(text);\n      this.lastDisaptchedText = text;\n    }\n  };\n}","import { MultipleAutoCompleteTextInput } from 'ssenkit.autocomplete-text-input';\nimport * as React from 'react';\nimport './MultipleAutoCompleteTextInput.sample.scss';\n\nconst availableTags: string[] = [\n  'ActionScript',\n  'AppleScript',\n  'Asp',\n  'BASIC',\n  'C',\n  'C++',\n  'Clojure',\n  'COBOL',\n  'ColdFusion',\n  'Erlang',\n  'Fortran',\n  'Groovy',\n  'Haskell',\n  'Java',\n  'JavaScript',\n  'Lisp',\n  'Perl',\n  'PHP',\n  'Python',\n  'Ruby',\n  'Scala',\n  'Scheme',\n];\n\nfunction split(val: string): string[] {\n  return val.split(/,\\s*/);\n}\n\nfunction extractLast(term: string): string {\n  return split(term).pop() || '';\n}\n\nfunction source(request: {term: string}, response: (data: object) => void) {\n  response($.ui.autocomplete.filter(availableTags, extractLast(request.term)));\n}\n\ninterface State {\n  text: string;\n}\n\nexport default class extends React.PureComponent<{}, State> {\n  state: State = {\n    text: '',\n  };\n  \n  render() {\n    return (\n      <div>\n        <MultipleAutoCompleteTextInput menuClassName=\"MultipleAutoCompleteTextInputSample-menu\"\n                                       className=\"MultipleAutoCompleteTextInputSample-input\"\n                                       value={this.state.text}\n                                       minLength={0}\n                                       source={source}\n                                       onChange={this.onChange}\n                                       onSubmit={this.onChange}/>\n        <p>{this.state.text}</p>\n      </div>\n    );\n  }\n  \n  onChange = (text: string) => {\n    this.setState({text});\n  };\n}","import { SingleAutoCompleteTextInput } from 'ssenkit.autocomplete-text-input';\nimport * as React from 'react';\nimport './SingleAutoCompleteTextInput.sample.scss';\n\nconst availableTags: string[] = [\n  'ActionScript',\n  'AppleScript',\n  'Asp',\n  'BASIC',\n  'C',\n  'C++',\n  'Clojure',\n  'COBOL',\n  'ColdFusion',\n  'Erlang',\n  'Fortran',\n  'Groovy',\n  'Haskell',\n  'Java',\n  'JavaScript',\n  'Lisp',\n  'Perl',\n  'PHP',\n  'Python',\n  'Ruby',\n  'Scala',\n  'Scheme',\n];\n\nfunction split(val: string): string[] {\n  return val.split(/,\\s*/);\n}\n\nfunction extractLast(term: string): string {\n  return split(term).pop() || '';\n}\n\nfunction source(request: {term: string}, response: (data: object) => void) {\n  response($.ui.autocomplete.filter(availableTags, extractLast(request.term)));\n}\n\ninterface State {\n  text: string;\n}\n\nexport default class extends React.PureComponent<{}, State> {\n  state: State = {\n    text: '',\n  };\n  \n  render() {\n    return (\n      <div>\n        <SingleAutoCompleteTextInput menuClassName=\"SingleAutoCompleteTextInputSample-menu\"\n                                     className=\"SingleAutoCompleteTextInputSample-input\"\n                                     value={this.state.text}\n                                     minLength={0}\n                                     source={source}\n                                     onChange={this.onChange}\n                                     onSubmit={this.onChange}/>\n        <p>{this.state.text}</p>\n      </div>\n    );\n  }\n  \n  onChange = (text: string) => {\n    console.log('SingleAutoCompleteTextInput.sample.tsx..onChange()', text);\n    this.setState({text});\n  };\n}","import * as React from 'react';\nimport { Description, Source } from 'seed/components';\nimport MultipleAutoCompleteTextInput from './MultipleAutoCompleteTextInput.sample';\nimport SingleAutoCompleteTextInput from './SingleAutoCompleteTextInput.sample';\n\nexport default () => (\n  <div className=\"app-body\">\n    <div className=\"page-header\">\n      <div className=\"row\">\n        <h1>\n          <code>import {`{ SingleAutoCompleteTextInput, MultipleAutoCompleteTextInput }`} from 'ssenkit.autocomplete-text-input'</code>\n        </h1>\n      </div>\n    </div>\n    <div className=\"page-body ph-30 mv-30\">\n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./MultipleAutoCompleteTextInput.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <MultipleAutoCompleteTextInput/>\n          <Source source={require('!!raw-loader!./MultipleAutoCompleteTextInput.sample')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./SingleAutoCompleteTextInput.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <SingleAutoCompleteTextInput/>\n          <Source source={require('!!raw-loader!./SingleAutoCompleteTextInput.sample')}/>\n        </div>\n      </div>\n    </div>\n  </div>\n)","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ModalContentProps } from './types';\n\nexport interface Props {\n  onClose: () => void;\n  container?: string;\n  dimStyle?: React.CSSProperties;\n  children: React.ReactElement<ModalContentProps>;\n}\n\ninterface InternalProps {\n}\n\ninterface State {\n  modalContainer: Element | null;\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'Modal';\n  \n  private container: Element | null;\n  \n  static defaultProps: Partial<Props> = {\n    dimStyle: {\n      backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    },\n  };\n  \n  constructor(props: Props & InternalProps) {\n    super(props);\n    \n    this.state = {\n      modalContainer: null,\n    };\n  }\n  \n  componentDidMount() {\n    this.container = typeof this.props.container === 'string'\n      ? document.querySelector(this.props.container)\n      : document.body;\n    \n    if (!this.container) {\n      throw new Error(`Container \"${this.props.container}\" not found.`);\n    }\n    \n    const modalContainer: Element = document.createElement('div');\n    modalContainer.setAttribute('class', '__ssenkit_modal_container__');\n    this.container.appendChild(modalContainer);\n    \n    this.setState({\n      modalContainer,\n    });\n  }\n  \n  componentWillUnmount() {\n    if (this.container && this.state.modalContainer) {\n      this.container.removeChild(this.state.modalContainer);\n      this.container = null;\n    }\n  }\n  \n  render() {\n    return this.state.modalContainer\n      ? ReactDOM.createPortal((\n        <div style={this.props.dimStyle}>\n          {React.cloneElement(this.props.children, {closeModal: this.closeModal})}\n        </div>\n      ), this.state.modalContainer)\n      : null;\n  }\n  \n  closeModal = () => {\n    this.props.onClose();\n  };\n}\n\nexport default Component as React.ComponentType<Props>;","import { ModalContentProps } from './types';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nexport interface Options {\n  container?: string;\n  dimStyle?: React.CSSProperties;\n}\n\nexport default function (content: React.ReactElement<ModalContentProps>, options: Options = {}) {\n  if (!options.dimStyle) {\n    options.dimStyle = {\n      backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    };\n  }\n  \n  const container: Element | null = typeof options.container === 'string'\n    ? document.querySelector(options.container)\n    : document.body;\n  \n  if (!container) {\n    throw new Error(`Container \"${options.container}\" not found.`);\n  }\n  \n  const modalContainer: Element = document.createElement('div');\n  modalContainer.setAttribute('class', '__ssenkit_modal_container__');\n  container.appendChild(modalContainer);\n  \n  const closeModal: () => void = () => {\n    container.removeChild(modalContainer);\n  };\n  \n  ReactDOM.render((\n    <div style={options.dimStyle}>\n      {React.cloneElement(content as React.ReactElement<{closeModal: () => void}>, {closeModal})};\n    </div>\n  ), modalContainer);\n  \n  return closeModal;\n}","import * as React from 'react';\nimport Modal, { ModalContentProps } from 'ssenkit.modal';\nimport * as styles from './Modal.sample.module.scss';\n\nconst Content: React.StatelessComponent<ModalContentProps> = ({closeModal}: ModalContentProps) => {\n  return (\n    <div className={styles.main}>\n      <h1>HELLO?</h1>\n      <button onClick={() => closeModal && closeModal()}>Close Modal</button>\n    </div>\n  );\n};\n\nexport interface Props {\n\n}\n\ninterface InternalProps {\n\n}\n\ninterface State {\n  modal: React.ReactElement<{}> | null,\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'Modal.sample';\n  \n  state: State = {\n    modal: null,\n  };\n  \n  render() {\n    return (\n      <div>\n        <button onClick={this.openModal}>Open Modal</button>\n        {this.state.modal}\n      </div>\n    );\n  }\n  \n  openModal = () => {\n    this.setState({\n      modal: (\n        <Modal onClose={this.closeModal}>\n          <Content/>\n        </Modal>\n      ),\n    });\n  };\n  \n  closeModal = () => {\n    this.setState({\n      modal: null,\n    });\n  };\n}\n\nexport default Component as React.ComponentType<Props>;","import { ModalContentProps, openModal } from 'ssenkit.modal';\nimport * as React from 'react';\nimport * as styles from './openModal.sample.module.scss';\n\nconst Content: React.StatelessComponent<ModalContentProps> = ({closeModal}) => {\n  return (\n    <div className={styles.main}>\n      <h1>HELLO?</h1>\n      <button onClick={() => closeModal && closeModal()}>Close Modal</button>\n    </div>\n  );\n};\n\nexport interface Props {\n\n}\n\ninterface InternalProps {\n\n}\n\ninterface State {\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'openModal.sample';\n  \n  render() {\n    return (\n      <div>\n        <button onClick={this.open}>Open Modal</button>\n      </div>\n    );\n  }\n  \n  open = () => {\n    openModal(<Content/>);\n  };\n}\n\nexport default Component as React.ComponentType<Props>;","import * as React from 'react';\nimport { Description, Source } from 'seed/components';\nimport Modal from './Modal.sample';\nimport OpenModal from './openModal.sample';\n\nexport default () => (\n  <div className=\"app-body\">\n    <div className=\"page-header\">\n      <div className=\"row\">\n        <h1><code>import Modal, {'{ openModal }'} from 'ssenkit.modal'</code></h1>\n      </div>\n    </div>\n    <div className=\"page-body ph-30 mv-30\">\n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./Modal.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Modal/>\n          <Source source={require('!!raw-loader!./Modal.sample')}/>\n        </div>\n      </div>\n  \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./openModal.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <OpenModal/>\n          <Source source={require('!!raw-loader!./openModal.sample')}/>\n        </div>\n      </div>\n    </div>\n  </div>\n)","import { range } from 'd3-array';\nimport * as React from 'react';\n\nconst availableInputKeyCodes: number[] = [\n  ...range(35, 40 + 1), // arrow keys\n  8, // backspace\n  46, // delete\n  9, // tab\n  27, // escape\n  13, // enter\n];\n\nexport interface Props {\n  value: string;\n  onChange: (value: string) => void;\n  onSubmit: (value: string) => void;\n  availableCharacterPattern: RegExp;\n  \n  children?: JSX.Element;\n}\n\ninterface InternalProps {\n\n}\n\ninterface State {\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'Component9929265';\n  \n  private inputRef: React.RefObject<HTMLInputElement> = React.createRef();\n  //private input: HTMLInputElement;\n  \n  static defaultProps: Partial<Props> = {\n    children: <input type=\"text\"/>,\n  };\n  \n  render() {\n    return React.cloneElement(this.props.children as JSX.Element, {\n      ref: this.inputRef,\n      defaultValue: this.props.value,\n      onChange: this.onChange,\n      onKeyPress: this.onKeyPress,\n      onKeyDown: this.onKeyDown,\n    });\n  }\n  \n  onChange = (event: React.ChangeEvent<{value: string}>) => {\n    this.props.onChange(event.target.value);\n  };\n  \n  onKeyPress = (event: React.KeyboardEvent<{value: string}>) => {\n    const selectAll: boolean = event.keyCode === 65 && (event.ctrlKey || event.metaKey);\n    \n    if (selectAll\n      || availableInputKeyCodes.indexOf(event.keyCode) !== -1\n      || this.props.availableCharacterPattern.test(String.fromCharCode(event.charCode))\n    ) return;\n    \n    event.preventDefault();\n    event.stopPropagation();\n  };\n  \n  onKeyDown = (event: React.KeyboardEvent<{value: string}>) => {\n    if (event.keyCode === 13) {\n      this.props.onSubmit(event.currentTarget.value);\n    }\n  };\n  \n  componentDidUpdate() {\n    if (this.inputRef.current && this.inputRef.current.value !== this.props.value) {\n      this.inputRef.current.value = this.props.value;\n    }\n  }\n  \n  get text(): string {\n    return this.inputRef.current\n      ? this.inputRef.current.value\n      : '';\n  }\n  \n  set text(value: string) {\n    if (this.inputRef.current && this.inputRef.current.value !== value) {\n      this.inputRef.current.value = value;\n      this.props.onChange(value);\n    }\n  }\n}\n\nexport default Component;","import * as React from 'react';\nimport RestrictedTextInput from 'ssenkit.restricted-text-input';\n\nexport interface Props {\n\n}\n\ninterface InternalProps {\n\n}\n\ninterface State {\n  text: string;\n}\n\nclass Component extends React.PureComponent<Props & InternalProps, State> {\n  static displayName: string = 'Sample.sample';\n  \n  state: State = {\n    text: '',\n  };\n  \n  render() {\n    return (\n      <div>\n        <RestrictedTextInput availableCharacterPattern={/[abcd0-9]/}\n                             value={this.state.text}\n                             onChange={this.onChange}\n                             onSubmit={this.onSubmit}/>\n        <hr/>\n        {this.state.text}\n      </div>\n    );\n  }\n  \n  onChange = (text: string) => {\n    this.setState({\n      text,\n    });\n  };\n  \n  onSubmit = (text: string) => {\n    this.setState({\n      text,\n    });\n  };\n}\n\nexport default Component as React.ComponentType<Props>;","import * as React from 'react';\nimport { Description, Source } from 'seed/components';\nimport Sample from './Sample.sample';\n\nexport default () => (\n  <div className=\"app-body\">\n    <div className=\"page-header\">\n      <div className=\"row\">\n        <h1><code>import RestrictedTextInput from 'ssenkit.restricted-text-input'</code></h1>\n      </div>\n    </div>\n    <div className=\"page-body ph-30 mv-30\">\n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Description html={require('./Sample.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <Sample/>\n          <Source source={require('!!raw-loader!./Sample.sample')}/>\n        </div>\n      </div>\n    </div>\n  </div>\n)","import * as React from 'react';\nimport DropdownAnchor, { DropDownAnchorButtonProps, DropDownContentProps } from 'ssenkit.dropdown-anchor';\nimport * as styles from './DropdownAnchor.sample.module.scss';\n\nclass Button extends React.PureComponent<DropDownAnchorButtonProps> {\n  render() {\n    return (\n      <button className=\"btn white dropdown-toggle\" {...this.props}>\n        {this.props['aria-expanded'] ? 'OPENED' : 'CLOSED'}\n      </button>\n    );\n  }\n}\n\nclass Content extends React.PureComponent<DropDownContentProps> {\n  render() {\n    return (\n      <div className={styles.main}>\n        <p>Hello...</p>\n        <p>\n          <button onClick={() => this.props.close && this.props.close()}>\n            Close Dropdown\n          </button>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default class extends React.PureComponent<{}, {}> {\n  render() {\n    return (\n      <div>\n        <DropdownAnchor button={<Button/>} useOutboundClick={true}>\n          <Content/>\n        </DropdownAnchor>\n      </div>\n    );\n  }\n}","import * as React from 'react';\nimport { Description, Source } from 'seed/components';\nimport DropdownAnchor from './DropdownAnchor.sample';\n\nexport default () => (\n  <div className=\"app-body\">\n    <div className=\"page-header\">\n      <div className=\"row\">\n        <h1><code>import DropdownAnchor from 'ssenkit.dropdown-anchor'</code></h1>\n      </div>\n    </div>\n    <div className=\"page-body ph-30 mv-30\">\n      <div className=\"box\">\n        <div className=\"box-body content is-small\">\n          <Description html={require('./DropdownAnchor.description.md')}/>\n        </div>\n      </div>\n      \n      <div className=\"box\">\n        <div className=\"box-body\">\n          <DropdownAnchor/>\n          <Source source={require('!!raw-loader!./DropdownAnchor.sample')}/>\n        </div>\n      </div>\n    </div>\n  </div>\n)"],"sourceRoot":""}